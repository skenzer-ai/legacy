openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /ux/api-token/:
    post:
      operationId: ux_api_token_create
      description: Endpoint for obtaining APP AUTH TOKEN with last_login update.
      summary: Get the auth token.
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              AuthTokenExample:
                value:
                  username: admin
                  password: YWRtaW4xMjM=
                summary: Auth Token Example
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /ux/api-token-auth/:
    post:
      operationId: ux_api_token_auth_create
      description: Endpoint for obtaining APP AUTH TOKEN with last_login update.
      summary: Get the auth token.
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              AuthTokenExample:
                value:
                  username: admin
                  password: admin123
                summary: Auth Token Example
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /ux/common/announcement/announcements/:
    get:
      operationId: ux_common_announcement_announcements_retrieve
      description: This endpoint is used to fetch all the announcement in the current
        organization
      summary: Gets a list of announcement
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Announcement
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
    post:
      operationId: ux_common_announcement_announcements_create
      description: This endpoint is used to save a new announcement for the current
        organization
      summary: Creates a new Announcement
      tags:
      - Announcement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateAnnouncementSample:
                value:
                  summary: VPN Issue
                  description: ''
                  catalogue: ''
                  impact_service: ''
                  impact_service_name: service1
                  service_classification: ''
                  service_classification_name: ''
                  state: Open
                summary: Create announcement Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/announcement/announcements/{id}/:
    get:
      operationId: ux_common_announcement_announcements_retrieve_2
      description: This endpoint is used to fetch a announcement details in the current
        organization
      summary: Gets a announcement with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Announcement
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_announcement_announcements_update
      description: This endpoint is used to edit an existing announcement for the
        current organization
      summary: Edits the announcement with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Announcement
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_announcement_announcements_destroy
      description: This endpoint is used to delete an existing announcement for the
        current organization
      summary: Delete the announcement with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Announcement
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/announcement/announcements/change-ancmt/:
    get:
      operationId: ux_common_announcement_announcements_change_ancmt_retrieve
      description: API endpoint that allows announcements to be viewed or edited.
      tags:
      - Announcement
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/announcement/announcements/options/:
    get:
      operationId: ux_common_announcement_announcements_options_retrieve
      description: API endpoint that allows announcements to be viewed or edited.
      tags:
      - Announcement
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/apiregister/profile/:
    get:
      operationId: ux_common_apiregister_profile_list
      description: This endpoint is used to fetch all the api_config profiles in the
        current organization
      summary: Gets a list of api_config profiles
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - API Registration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiRegister'
          description: ''
    post:
      operationId: ux_common_apiregister_profile_create
      description: This endpoint is used to save a new api_config for the current
        organization
      summary: 'Creates a new API configuration '
      tags:
      - API Registration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateThirdPartyAPISample:
                value:
                  headerParamList:
                  - keys: sort
                    values: name
                  - keys: reverse
                    values: '-'
                  name: API Auth
                  content_type: 1
                  authentication_type: Basic Auth
                  user_name: shilpa.v
                  password: hanTZ123$
                  api_url: http://test-api-auth.com
                  description: Test API Auth
                  enc_password: ZDk5NjMwYmNjNzA1ODYzOWU3ZTgwZGYyMzlmMzhhMzI6OlUyRnNkR1ZrWDE5ZGJ5YUp3azBHT01OZ2dwVldQUFVlaEhmOVE2SVBreWs9
                summary: Create Third Party API Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/apiregister/profile/{id}/:
    get:
      operationId: ux_common_apiregister_profile_retrieve
      description: This endpoint is used to fetch a api_config details in the current
        organization
      summary: Gets a api_config with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - API Registration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRegister'
          description: ''
    put:
      operationId: ux_common_apiregister_profile_update
      description: This endpoint is used to edit an existing api_config for the current
        organization
      summary: Edits the api_config with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - API Registration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApiRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApiRegister'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRegister'
          description: ''
    delete:
      operationId: ux_common_apiregister_profile_destroy
      description: This endpoint is used to delete an existing api_config for the
        current organization
      summary: Deletes the api_config with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - API Registration
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/apiregister/profile/allapi-list/:
    get:
      operationId: ux_common_apiregister_profile_allapi_list_retrieve
      description: API endpoint that allows API's to be viewed or edited.
      tags:
      - API Registration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRegister'
          description: ''
  /ux/common/apiregister/profile/api_search/:
    get:
      operationId: ux_common_apiregister_profile_api_search_retrieve
      description: API endpoint that allows API's to be viewed or edited.
      tags:
      - API Registration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRegister'
          description: ''
  /ux/common/apiregister/profile/options/:
    get:
      operationId: ux_common_apiregister_profile_options_retrieve
      description: API endpoint that allows API's to be viewed or edited.
      tags:
      - API Registration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRegister'
          description: ''
  /ux/common/apiregister/profile/verify_api/:
    post:
      operationId: ux_common_apiregister_profile_verify_api_create
      description: API endpoint that allows API's to be viewed or edited.
      tags:
      - API Registration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApiRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApiRegister'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRegister'
          description: ''
  /ux/common/async_tasks/:
    get:
      operationId: ux_common_async_tasks_list
      description: This endpoint is used to fetch all the async tasks in the current
        organization
      summary: Gets a list of async tasks
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Async Tasks
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CeleryTaskManager'
          description: ''
    post:
      operationId: ux_common_async_tasks_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Async Tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CeleryTaskManager'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CeleryTaskManager'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CeleryTaskManager'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CeleryTaskManager'
          description: ''
  /ux/common/async_tasks/{id}/:
    get:
      operationId: ux_common_async_tasks_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Async Tasks
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CeleryTaskManager'
          description: ''
    put:
      operationId: ux_common_async_tasks_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Async Tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CeleryTaskManager'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CeleryTaskManager'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CeleryTaskManager'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CeleryTaskManager'
          description: ''
    delete:
      operationId: ux_common_async_tasks_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Async Tasks
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/async_tasks/disable_task/:
    get:
      operationId: ux_common_async_tasks_disable_task_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Async Tasks
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CeleryTaskManager'
          description: ''
  /ux/common/async_tasks/enable_task/:
    get:
      operationId: ux_common_async_tasks_enable_task_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Async Tasks
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CeleryTaskManager'
          description: ''
  /ux/common/business_rule/business_rule/:
    get:
      operationId: ux_common_business_rule_business_rule_list
      description: This endpoint is used to fetch all the business_rule in the current
        organization
      summary: Gets a list of business_rule
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - BusinessRule
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessRule'
          description: ''
    post:
      operationId: ux_common_business_rule_business_rule_create
      description: This endpoint is used to save a new business_rule for the current
        organization
      summary: 'Creates a new business_rule '
      tags:
      - BusinessRule
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateBusinessRuleSample:
                value:
                  business_rule: business_rule1
                  type: User
                summary: Create BusinessRule Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/business_rule/business_rule/{id}/:
    get:
      operationId: ux_common_business_rule_business_rule_retrieve
      description: This endpoint is used to fetch a business_rule details in the current
        organization
      summary: Gets a business_rule with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - BusinessRule
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRule'
          description: ''
    put:
      operationId: ux_common_business_rule_business_rule_update
      description: This endpoint is used to edit an existing business_rule for the
        current organization
      summary: Edits the business_rule with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - BusinessRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRule'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRule'
          description: ''
    delete:
      operationId: ux_common_business_rule_business_rule_destroy
      description: This endpoint is used to delete an existing business_rule for the
        current organization
      summary: Deletes the business_rule with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - BusinessRule
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/business_rule/business_rule/create-csv/:
    post:
      operationId: ux_common_business_rule_business_rule_create_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - BusinessRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRule'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRule'
          description: ''
  /ux/common/business_rule/business_rule/csv_cols/:
    post:
      operationId: ux_common_business_rule_business_rule_csv_cols_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - BusinessRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRule'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRule'
          description: ''
  /ux/common/business_rule/business_rule/download_rule_csv/:
    get:
      operationId: ux_common_business_rule_business_rule_download_rule_csv_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - BusinessRule
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRule'
          description: ''
  /ux/common/business_rule/business_rule/multidelete/:
    post:
      operationId: ux_common_business_rule_business_rule_multidelete_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - BusinessRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRule'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRule'
          description: ''
  /ux/common/business_rule/business_rule/options/:
    get:
      operationId: ux_common_business_rule_business_rule_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - BusinessRule
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRule'
          description: ''
  /ux/common/business_rule/business_rule/rule_count/:
    get:
      operationId: ux_common_business_rule_business_rule_rule_count_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - BusinessRule
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRule'
          description: ''
  /ux/common/business_rule/business_rule/upload-csv/:
    post:
      operationId: ux_common_business_rule_business_rule_upload_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - BusinessRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRule'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRule'
          description: ''
  /ux/common/business_service/business_service/:
    get:
      operationId: ux_common_business_service_business_service_list
      description: This endpoint is used to fetch all the Business_service_configuration
        in the current organization
      summary: Gets a list of Business services
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - BusinessServiceConfiguration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessServiceConfiguration'
          description: ''
    post:
      operationId: ux_common_business_service_business_service_create
      description: This endpoint is used to save a new business service for the current
        organization
      summary: 'Creates a new business service '
      tags:
      - BusinessServiceConfiguration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateBusinessServiceSample:
                summary: Create Business Service Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/business_service/business_service/{id}/:
    get:
      operationId: ux_common_business_service_business_service_retrieve
      description: This endpoint is used to fetch a business_service details in the
        current organization
      summary: Gets a business service with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - BusinessServiceConfiguration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessServiceConfiguration'
          description: ''
    put:
      operationId: ux_common_business_service_business_service_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - BusinessServiceConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessServiceConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessServiceConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessServiceConfiguration'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessServiceConfiguration'
          description: ''
    delete:
      operationId: ux_common_business_service_business_service_destroy
      description: This endpoint is used to delete an existing business service for
        the current organization
      summary: Deletes the business service with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - BusinessServiceConfiguration
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/business_service/business_service/breach-status/:
    get:
      operationId: ux_common_business_service_business_service_breach_status_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - BusinessServiceConfiguration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessServiceConfiguration'
          description: ''
  /ux/common/business_service/business_service/bs_maintenace_info/{bsid}/:
    get:
      operationId: ux_common_business_service_business_service_bs_maintenace_info_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: bsid
        schema:
          type: string
        required: true
      tags:
      - BusinessServiceConfiguration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessServiceConfiguration'
          description: ''
  /ux/common/business_service/business_service/image-options/:
    get:
      operationId: ux_common_business_service_business_service_image_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - BusinessServiceConfiguration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessServiceConfiguration'
          description: ''
  /ux/common/business_service/business_service/update_bs_maintenance/:
    post:
      operationId: ux_common_business_service_business_service_update_bs_maintenance_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - BusinessServiceConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessServiceConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessServiceConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessServiceConfiguration'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessServiceConfiguration'
          description: ''
  /ux/common/catalogue/servicecatalogue/:
    get:
      operationId: ux_common_catalogue_servicecatalogue_list
      description: This endpoint is used to fetch the technical catalogue tree (works
        based on token used to authorize)
      summary: Gets a catalogue tree.
      tags:
      - Service Catalogue
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogue'
          description: ''
    post:
      operationId: ux_common_catalogue_servicecatalogue_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Service Catalogue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Catalogue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Catalogue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Catalogue'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue'
          description: ''
  /ux/common/catalogue/servicecatalogue/{id}/:
    get:
      operationId: ux_common_catalogue_servicecatalogue_retrieve
      description: This endpoint is used to fetch a service details for the selected
        catalogue.
      summary: Gets a service details with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Service Catalogue
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue'
          description: ''
    put:
      operationId: ux_common_catalogue_servicecatalogue_update
      description: This endpoint is used to edit an existing service for the selected
        catalogue.
      summary: Edits the service with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Service Catalogue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Catalogue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Catalogue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Catalogue'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue'
          description: ''
    patch:
      operationId: ux_common_catalogue_servicecatalogue_partial_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Service Catalogue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCatalogue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCatalogue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCatalogue'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue'
          description: ''
    delete:
      operationId: ux_common_catalogue_servicecatalogue_destroy
      description: This endpoint is used to delete an existing catalogue or service.
      summary: Deletes the catalogue or service with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Service Catalogue
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/catalogue/servicecatalogue/add-attachment/:
    post:
      operationId: ux_common_catalogue_servicecatalogue_add_attachment_create
      description: This endpoint is used to add new attachments.
      summary: Add attachments for the selected service.
      tags:
      - Service Catalogue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Catalogue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Catalogue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Catalogue'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue'
          description: ''
  /ux/common/catalogue/servicecatalogue/add-catalogue/:
    post:
      operationId: ux_common_catalogue_servicecatalogue_add_catalogue_create
      description: This endpoint is used to save a new catalogue.
      summary: Creates a new catalogue.
      tags:
      - Service Catalogue
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateCatalogueSample:
                summary: Create Catalogue Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/catalogue/servicecatalogue/add-service/:
    post:
      operationId: ux_common_catalogue_servicecatalogue_add_service_create
      description: This endpoint is used to save a new service for the selected catalogue.
      summary: 'Creates a new service '
      tags:
      - Service Catalogue
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateCatalogueServiceSample:
                summary: Create Catalogue Service Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/catalogue/servicecatalogue/attachment/:
    get:
      operationId: ux_common_catalogue_servicecatalogue_attachment_retrieve
      description: This endpoint is used to fetch the attachments.
      summary: Gets attachments for the selected service.
      tags:
      - Service Catalogue
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue'
          description: ''
  /ux/common/catalogue/servicecatalogue/classification/:
    get:
      operationId: ux_common_catalogue_servicecatalogue_classification_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Service Catalogue
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue'
          description: ''
  /ux/common/catalogue/servicecatalogue/classification/{module_id}/{module_ref_id}/:
    post:
      operationId: ux_common_catalogue_servicecatalogue_classification_create
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: module_id
        schema:
          type: string
        required: true
      - in: path
        name: module_ref_id
        schema:
          type: string
        required: true
      tags:
      - Service Catalogue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Catalogue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Catalogue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Catalogue'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue'
          description: ''
  /ux/common/catalogue/servicecatalogue/delete-catalogue/:
    post:
      operationId: ux_common_catalogue_servicecatalogue_delete_catalogue_create
      description: This endpoint is used to delete a catalogue.
      summary: Delete a catalogue.
      parameters:
      - in: query
        name: catalogueId
        schema:
          type: string
        description: Catalogue ID
      tags:
      - Service Catalogue
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              DeleteACatalogue:
                summary: Delete a catalogue
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/catalogue/servicecatalogue/delete-service/:
    post:
      operationId: ux_common_catalogue_servicecatalogue_delete_service_create
      description: This endpoint is used to delete a service.
      summary: Delete a service.
      tags:
      - Service Catalogue
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              DeleteAService:
                summary: Delete a service
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/catalogue/servicecatalogue/history/:
    get:
      operationId: ux_common_catalogue_servicecatalogue_history_retrieve
      description: This endpoint is used to fetch the history.
      summary: Gets history for the selected service.
      tags:
      - Service Catalogue
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue'
          description: ''
  /ux/common/catalogue/servicecatalogue/is-catalogue-exist/:
    get:
      operationId: ux_common_catalogue_servicecatalogue_is_catalogue_exist_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Service Catalogue
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue'
          description: ''
  /ux/common/catalogue/servicecatalogue/options-config/:
    get:
      operationId: ux_common_catalogue_servicecatalogue_options_config_retrieve
      description: This endpoint is used to fetch the options configurations.
      summary: Gets options regarding service catalogue.
      tags:
      - Service Catalogue
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue'
          description: ''
  /ux/common/catalogue/servicecatalogue/service-list/:
    get:
      operationId: ux_common_catalogue_servicecatalogue_service_list_retrieve
      description: This endpoint is used to get list of services for the selected
        catalogue.
      summary: Get list of services for the selected catalogue.
      tags:
      - Service Catalogue
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/catalogue/servicecatalogue/service_classes/:
    get:
      operationId: ux_common_catalogue_servicecatalogue_service_classes_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Service Catalogue
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue'
          description: ''
  /ux/common/catalogue/servicecatalogue/services/:
    get:
      operationId: ux_common_catalogue_servicecatalogue_services_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Service Catalogue
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue'
          description: ''
  /ux/common/catalogue/servicecatalogue/update-catalogue/:
    post:
      operationId: ux_common_catalogue_servicecatalogue_update_catalogue_create
      description: This endpoint is used to update a catalogue.
      summary: Update a catalogue.
      tags:
      - Service Catalogue
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              UpdateACatalogue:
                summary: Update a catalogue
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/catalogue/servicecatalogue/update-service/:
    post:
      operationId: ux_common_catalogue_servicecatalogue_update_service_create
      description: This endpoint is used to update a service.
      summary: Update a service.
      tags:
      - Service Catalogue
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              UpdateAService:
                summary: Update a service
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/cmdb/blackwhitelist/:
    get:
      operationId: ux_common_cmdb_blackwhitelist_retrieve
      description: This endpoint is used to fetch all the tags in the current organization
      summary: Gets a list of tags
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - CMDBBlacklistWhitelist
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_cmdb_blackwhitelist_create
      description: This endpoint is used to save a software whitelist and blacklist
      summary: 'Creates new Software whitelist and blacklist '
      tags:
      - CMDBBlacklistWhitelist
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateSampleSoftwareWhitelistAndBlacklist:
                value:
                  type: '1'
                  label: List of Whitelist & Blacklist software
                  description: List of white and blacklist software
                  whitelist:
                  - python
                  blacklist:
                  - node
                summary: Create Sample Software whitelist and blacklist
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/cmdb/blackwhitelist/{id}/:
    get:
      operationId: ux_common_cmdb_blackwhitelist_retrieve_2
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBBlacklistWhitelist
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_cmdb_blackwhitelist_update
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBBlacklistWhitelist
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_cmdb_blackwhitelist_destroy
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBBlacklistWhitelist
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/cmdb/blackwhitelist/options/:
    get:
      operationId: ux_common_cmdb_blackwhitelist_options_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBBlacklistWhitelist
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/category/:
    get:
      operationId: ux_common_cmdb_category_retrieve
      description: This endpoint is used to fetch all the cmdb category in the current
        organization
      summary: Gets a list of cmdb category
      tags:
      - CMDBCategory
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
    post:
      operationId: ux_common_cmdb_category_create
      description: This endpoint is used to save a new category for the current organization
      summary: 'Creates a new category '
      tags:
      - CMDBCategory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                status: success
          description: ''
  /ux/common/cmdb/category/{id}/:
    get:
      operationId: ux_common_cmdb_category_retrieve_2
      description: API endpoint that allows cmdb category requests.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBCategory
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_cmdb_category_update
      description: API endpoint that allows cmdb category requests.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBCategory
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_cmdb_category_destroy
      description: API endpoint that allows cmdb category requests.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBCategory
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/cmdb/category/all_options/:
    get:
      operationId: ux_common_cmdb_category_all_options_retrieve
      description: API endpoint that allows cmdb category requests.
      tags:
      - CMDBCategory
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/category/audit_template_options/:
    get:
      operationId: ux_common_cmdb_category_audit_template_options_retrieve
      description: API endpoint that allows cmdb category requests.
      tags:
      - CMDBCategory
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/category/custom_options/:
    get:
      operationId: ux_common_cmdb_category_custom_options_retrieve
      description: API endpoint that allows cmdb category requests.
      tags:
      - CMDBCategory
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/category/dropdown_options_for_all_tab/:
    get:
      operationId: ux_common_cmdb_category_dropdown_options_for_all_tab_retrieve
      description: API endpoint that allows cmdb category requests.
      tags:
      - CMDBCategory
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/cloud/:
    get:
      operationId: ux_common_cmdb_cloud_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBCloud
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_cmdb_cloud_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBCloud
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/cmdb/cloud/{id}/:
    get:
      operationId: ux_common_cmdb_cloud_retrieve_2
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBCloud
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_cmdb_cloud_update
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBCloud
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_cmdb_cloud_destroy
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBCloud
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/cmdb/cloud/ec2-instances/:
    get:
      operationId: ux_common_cmdb_cloud_ec2_instances_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBCloud
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/consumable/:
    get:
      operationId: ux_common_cmdb_consumable_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBConsumables
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_cmdb_consumable_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBConsumables
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/cmdb/consumable/{id}/:
    get:
      operationId: ux_common_cmdb_consumable_retrieve_2
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBConsumables
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_cmdb_consumable_update
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBConsumables
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_cmdb_consumable_destroy
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBConsumables
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/cmdb/consumable/distribute_stock/:
    post:
      operationId: ux_common_cmdb_consumable_distribute_stock_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBConsumables
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/consumable/options/:
    get:
      operationId: ux_common_cmdb_consumable_options_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBConsumables
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/consumable/stocks/{ci_id}/:
    get:
      operationId: ux_common_cmdb_consumable_stocks_retrieve
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: ci_id
        schema:
          type: string
          pattern: \w+
        required: true
      tags:
      - CMDBConsumables
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/item-classification/:
    get:
      operationId: ux_common_cmdb_item_classification_list
      description: This endpoint is used to fetch all the customer ci configurations
        in the current organization
      summary: Gets a list of customer ci configurations
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemClassificationConfig'
          description: ''
    post:
      operationId: ux_common_cmdb_item_classification_create
      description: This endpoint is used to save a new ci classification for the current
        organization
      summary: Creates a new ci classification
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateCiClassificationSample:
                value:
                  classification_name: ''
                  classification_filters: ''
                summary: Create ci classification Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/cmdb/item-classification/{id}/:
    get:
      operationId: ux_common_cmdb_item_classification_retrieve
      description: This endpoint is used to fetch a ci classification in the current
        organization
      summary: Gets a ci classification with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemClassificationConfig'
          description: ''
    put:
      operationId: ux_common_cmdb_item_classification_update
      description: This endpoint is used to edit an existing ci classification for
        the current organization
      summary: Edits the ci classification with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemClassificationConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ItemClassificationConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ItemClassificationConfig'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemClassificationConfig'
          description: ''
    delete:
      operationId: ux_common_cmdb_item_classification_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/cmdb/item-classification/default-item-classifications/:
    get:
      operationId: ux_common_cmdb_item_classification_default_item_classifications_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemClassificationConfig'
          description: ''
  /ux/common/cmdb/item-classification/delete-classification-config/:
    post:
      operationId: ux_common_cmdb_item_classification_delete_classification_config_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemClassificationConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ItemClassificationConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ItemClassificationConfig'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemClassificationConfig'
          description: ''
  /ux/common/cmdb/item-classification/delete-sub-classification/:
    post:
      operationId: ux_common_cmdb_item_classification_delete_sub_classification_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemClassificationConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ItemClassificationConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ItemClassificationConfig'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemClassificationConfig'
          description: ''
  /ux/common/cmdb/item-classification/item-classifications-tree/:
    get:
      operationId: ux_common_cmdb_item_classification_item_classifications_tree_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemClassificationConfig'
          description: ''
  /ux/common/cmdb/item-classification/options/:
    get:
      operationId: ux_common_cmdb_item_classification_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemClassificationConfig'
          description: ''
  /ux/common/cmdb/item-classification/pin-item-classifications/:
    post:
      operationId: ux_common_cmdb_item_classification_pin_item_classifications_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemClassificationConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ItemClassificationConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ItemClassificationConfig'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemClassificationConfig'
          description: ''
  /ux/common/cmdb/license/:
    get:
      operationId: ux_common_cmdb_license_retrieve
      description: This endpoint is used to fetch all the the licenses created in
        the current organization
      summary: Gets a list of licenses
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - CMDBSoftwareLicense
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_cmdb_license_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftwareLicense
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/cmdb/license/{id}/:
    get:
      operationId: ux_common_cmdb_license_retrieve_2
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBSoftwareLicense
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_cmdb_license_update
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBSoftwareLicense
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_cmdb_license_destroy
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBSoftwareLicense
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/cmdb/license/assetsearch/:
    get:
      operationId: ux_common_cmdb_license_assetsearch_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftwareLicense
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/license/delete-software/:
    post:
      operationId: ux_common_cmdb_license_delete_software_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftwareLicense
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/license/details/:
    get:
      operationId: ux_common_cmdb_license_details_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftwareLicense
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/license/filterapp/:
    get:
      operationId: ux_common_cmdb_license_filterapp_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftwareLicense
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/license/insights/:
    get:
      operationId: ux_common_cmdb_license_insights_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftwareLicense
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/license/linegraph/:
    get:
      operationId: ux_common_cmdb_license_linegraph_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftwareLicense
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/license/options/:
    get:
      operationId: ux_common_cmdb_license_options_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftwareLicense
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/license/upload-csv/:
    post:
      operationId: ux_common_cmdb_license_upload_csv_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftwareLicense
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/license/usersearch/:
    get:
      operationId: ux_common_cmdb_license_usersearch_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftwareLicense
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/:
    get:
      operationId: ux_common_cmdb_profile_retrieve
      description: This endpoint is used to fetch all the cmdb ci in the current organization
      summary: Gets a list of cmdb ci
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
    post:
      operationId: ux_common_cmdb_profile_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/cmdb/profile/{id}/:
    get:
      operationId: ux_common_cmdb_profile_retrieve_2
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_cmdb_profile_update
      description: This endpoint is used to update a asset for the current organization
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Cmdb
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              UpdateAssetSample:
                value:
                  ci_id: '123456789'
                  ci_name: localhost
                summary: Update Asset Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
    delete:
      operationId: ux_common_cmdb_profile_destroy
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/cmdb/profile/access-points/:
    get:
      operationId: ux_common_cmdb_profile_access_points_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/activity_log_options/:
    get:
      operationId: ux_common_cmdb_profile_activity_log_options_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/adapter-list/:
    get:
      operationId: ux_common_cmdb_profile_adapter_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/add-attachment/:
    post:
      operationId: ux_common_cmdb_profile_add_attachment_create
      description: This endpoint is used to add new attachments.
      summary: Add attachments for the selected asset.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/add-disable-pm/:
    get:
      operationId: ux_common_cmdb_profile_add_disable_pm_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/add-display/:
    post:
      operationId: ux_common_cmdb_profile_add_display_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/add-enable-pm/:
    get:
      operationId: ux_common_cmdb_profile_add_enable_pm_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/add-remove-log/:
    put:
      operationId: ux_common_cmdb_profile_add_remove_log_update
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/add-remove-netflow/:
    put:
      operationId: ux_common_cmdb_profile_add_remove_netflow_update
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/add-valient-channelmap-data/:
    get:
      operationId: ux_common_cmdb_profile_add_valient_channelmap_data_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/aiops-test-options/:
    get:
      operationId: ux_common_cmdb_profile_aiops_test_options_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/all-card-inv/:
    get:
      operationId: ux_common_cmdb_profile_all_card_inv_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/all-topology/:
    get:
      operationId: ux_common_cmdb_profile_all_topology_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/allocated-assets/:
    get:
      operationId: ux_common_cmdb_profile_allocated_assets_retrieve
      description: This endpoint is used to get assets allocated for user
      summary: ' '
      parameters:
      - in: query
        name: email
        schema:
          type: string
        description: Requester Email
        required: true
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/asset-audit-record/:
    post:
      operationId: ux_common_cmdb_profile_asset_audit_record_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/asset-audit-template/:
    post:
      operationId: ux_common_cmdb_profile_asset_audit_template_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/asset-circuits/:
    get:
      operationId: ux_common_cmdb_profile_asset_circuits_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/asset-circuits-count/:
    get:
      operationId: ux_common_cmdb_profile_asset_circuits_count_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/asset-cos-col/:
    get:
      operationId: ux_common_cmdb_profile_asset_cos_col_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/asset-count/:
    get:
      operationId: ux_common_cmdb_profile_asset_count_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/asset-life-cycle/:
    get:
      operationId: ux_common_cmdb_profile_asset_life_cycle_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/asset-operations/:
    get:
      operationId: ux_common_cmdb_profile_asset_operations_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/asset-summary/:
    get:
      operationId: ux_common_cmdb_profile_asset_summary_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/assetList/:
    get:
      operationId: ux_common_cmdb_profile_assetList_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/attachment/:
    get:
      operationId: ux_common_cmdb_profile_attachment_retrieve
      description: This endpoint is used to fetch the attachments.
      summary: Gets attachments for the selected asset.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/audit-template-details/:
    get:
      operationId: ux_common_cmdb_profile_audit_template_details_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/audit_record_item/{id}/:
    get:
      operationId: ux_common_cmdb_profile_audit_record_item_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: '[^/]+'
        required: true
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/audit_record_list/:
    get:
      operationId: ux_common_cmdb_profile_audit_record_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/audit_status_count/:
    get:
      operationId: ux_common_cmdb_profile_audit_status_count_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/audit_status_count_filter/:
    get:
      operationId: ux_common_cmdb_profile_audit_status_count_filter_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/audit_template_details/:
    get:
      operationId: ux_common_cmdb_profile_audit_template_details_retrieve_2
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/available_stats/:
    get:
      operationId: ux_common_cmdb_profile_available_stats_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/basicview/:
    get:
      operationId: ux_common_cmdb_profile_basicview_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/bmc_vm_relation/:
    get:
      operationId: ux_common_cmdb_profile_bmc_vm_relation_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/bulk-inventory-create-csv/:
    post:
      operationId: ux_common_cmdb_profile_bulk_inventory_create_csv_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/bulk_inventory_csv_cols/:
    post:
      operationId: ux_common_cmdb_profile_bulk_inventory_csv_cols_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/category-form-options/:
    get:
      operationId: ux_common_cmdb_profile_category_form_options_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/channel-mapping/:
    get:
      operationId: ux_common_cmdb_profile_channel_mapping_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/channelmap-run-command/:
    get:
      operationId: ux_common_cmdb_profile_channelmap_run_command_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/child-cis/:
    get:
      operationId: ux_common_cmdb_profile_child_cis_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/cmdb-exists/:
    get:
      operationId: ux_common_cmdb_profile_cmdb_exists_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/common-get-trace-test/:
    get:
      operationId: ux_common_cmdb_profile_common_get_trace_test_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/common-set-trace-test/:
    get:
      operationId: ux_common_cmdb_profile_common_set_trace_test_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/component-inventory/:
    get:
      operationId: ux_common_cmdb_profile_component_inventory_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/configuration-card-details/:
    get:
      operationId: ux_common_cmdb_profile_configuration_card_details_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/confirm-delete-cross-connections/:
    get:
      operationId: ux_common_cmdb_profile_confirm_delete_cross_connections_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/congiguration-details/:
    post:
      operationId: ux_common_cmdb_profile_congiguration_details_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/congiguration-inventory-details/:
    get:
      operationId: ux_common_cmdb_profile_congiguration_inventory_details_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/controller-clients/:
    get:
      operationId: ux_common_cmdb_profile_controller_clients_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/controller-stats/:
    get:
      operationId: ux_common_cmdb_profile_controller_stats_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/create-csv/:
    post:
      operationId: ux_common_cmdb_profile_create_csv_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/cross-connection-data/:
    get:
      operationId: ux_common_cmdb_profile_cross_connection_data_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/ctp-utilization/:
    get:
      operationId: ux_common_cmdb_profile_ctp_utilization_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/ctp-utilization-matrix-grid/:
    get:
      operationId: ux_common_cmdb_profile_ctp_utilization_matrix_grid_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/ctp-utilization-matrix-pattern/:
    get:
      operationId: ux_common_cmdb_profile_ctp_utilization_matrix_pattern_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/delate-card-inventory/:
    get:
      operationId: ux_common_cmdb_profile_delate_card_inventory_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/delete-cross-connections/:
    get:
      operationId: ux_common_cmdb_profile_delete_cross_connections_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/delete-flow-domain/:
    get:
      operationId: ux_common_cmdb_profile_delete_flow_domain_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/delete-led-display/:
    get:
      operationId: ux_common_cmdb_profile_delete_led_display_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/delete-valient-channelmap/:
    get:
      operationId: ux_common_cmdb_profile_delete_valient_channelmap_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/delete-vne-cross-connections/:
    get:
      operationId: ux_common_cmdb_profile_delete_vne_cross_connections_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/delete_audit_record/{id}/:
    put:
      operationId: ux_common_cmdb_profile_delete_audit_record_update
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: '[^/]+'
        required: true
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/delete_ge_channel_mapping/:
    get:
      operationId: ux_common_cmdb_profile_delete_ge_channel_mapping_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/disable-pm/:
    get:
      operationId: ux_common_cmdb_profile_disable_pm_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/disable-pm-common-info/:
    get:
      operationId: ux_common_cmdb_profile_disable_pm_common_info_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/disable-port-status/:
    get:
      operationId: ux_common_cmdb_profile_disable_port_status_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/discovery-url/:
    post:
      operationId: ux_common_cmdb_profile_discovery_url_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/display-options/:
    get:
      operationId: ux_common_cmdb_profile_display_options_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/download-config-diff/:
    get:
      operationId: ux_common_cmdb_profile_download_config_diff_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/download-csv-sample/:
    get:
      operationId: ux_common_cmdb_profile_download_csv_sample_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/driver-list/:
    get:
      operationId: ux_common_cmdb_profile_driver_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/enable-pm/:
    get:
      operationId: ux_common_cmdb_profile_enable_pm_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/enable-pm-common-info/:
    get:
      operationId: ux_common_cmdb_profile_enable_pm_common_info_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/enable-port-status/:
    get:
      operationId: ux_common_cmdb_profile_enable_port_status_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/export-backup-data/:
    get:
      operationId: ux_common_cmdb_profile_export_backup_data_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/flow-domain/:
    get:
      operationId: ux_common_cmdb_profile_flow_domain_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/free-time-slot/:
    get:
      operationId: ux_common_cmdb_profile_free_time_slot_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/ge_delete_web_shocket/:
    get:
      operationId: ux_common_cmdb_profile_ge_delete_web_shocket_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/get-channel-map/:
    post:
      operationId: ux_common_cmdb_profile_get_channel_map_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/get-config-options/:
    get:
      operationId: ux_common_cmdb_profile_get_config_options_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/get-led-display/:
    get:
      operationId: ux_common_cmdb_profile_get_led_display_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/get-nodes/:
    get:
      operationId: ux_common_cmdb_profile_get_nodes_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/get-stat-list/:
    get:
      operationId: ux_common_cmdb_profile_get_stat_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/get-tags/:
    get:
      operationId: ux_common_cmdb_profile_get_tags_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/get-trace-responce/:
    get:
      operationId: ux_common_cmdb_profile_get_trace_responce_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/getAssetAuditTempateData/:
    get:
      operationId: ux_common_cmdb_profile_getAssetAuditTempateData_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/getResDetails/:
    post:
      operationId: ux_common_cmdb_profile_getResDetails_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/getResDropdownList/:
    get:
      operationId: ux_common_cmdb_profile_getResDropdownList_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/hardware/:
    get:
      operationId: ux_common_cmdb_profile_hardware_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/hardware-inv/:
    get:
      operationId: ux_common_cmdb_profile_hardware_inv_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/history/:
    get:
      operationId: ux_common_cmdb_profile_history_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/history_data_export/:
    get:
      operationId: ux_common_cmdb_profile_history_data_export_retrieve
      description: This endpoint is used to fetch the history.
      summary: Gets history for the selected asset.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/hw-inv-options/:
    get:
      operationId: ux_common_cmdb_profile_hw_inv_options_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/interface/:
    get:
      operationId: ux_common_cmdb_profile_interface_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/interface-card-data/:
    get:
      operationId: ux_common_cmdb_profile_interface_card_data_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/interface-list/:
    get:
      operationId: ux_common_cmdb_profile_interface_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/interface-sidebar/:
    get:
      operationId: ux_common_cmdb_profile_interface_sidebar_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/inv-retrieve/:
    get:
      operationId: ux_common_cmdb_profile_inv_retrieve_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/inventory-tree/:
    get:
      operationId: ux_common_cmdb_profile_inventory_tree_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/inventory-tree-data/:
    get:
      operationId: ux_common_cmdb_profile_inventory_tree_data_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/inventory-tree-summary/:
    get:
      operationId: ux_common_cmdb_profile_inventory_tree_summary_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/ipam_asset_update/{id}/:
    put:
      operationId: ux_common_cmdb_profile_ipam_asset_update_update
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/list/:
    post:
      operationId: ux_common_cmdb_profile_list_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/log-config-audit/:
    post:
      operationId: ux_common_cmdb_profile_log_config_audit_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/log_url/:
    get:
      operationId: ux_common_cmdb_profile_log_url_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/loopback-test/:
    get:
      operationId: ux_common_cmdb_profile_loopback_test_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/netflow_url/:
    get:
      operationId: ux_common_cmdb_profile_netflow_url_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/nivetti-panel-view/:
    get:
      operationId: ux_common_cmdb_profile_nivetti_panel_view_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/olt-asset-summary/:
    get:
      operationId: ux_common_cmdb_profile_olt_asset_summary_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/options/:
    get:
      operationId: ux_common_cmdb_profile_options_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/os-data/:
    get:
      operationId: ux_common_cmdb_profile_os_data_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/panel-view/:
    get:
      operationId: ux_common_cmdb_profile_panel_view_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/pdh-mux-perf-grid/:
    post:
      operationId: ux_common_cmdb_profile_pdh_mux_perf_grid_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/pdh-mux-pm-data/:
    post:
      operationId: ux_common_cmdb_profile_pdh_mux_pm_data_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/perf-filters/:
    get:
      operationId: ux_common_cmdb_profile_perf_filters_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/perform_bulk_edit_resource/:
    post:
      operationId: ux_common_cmdb_profile_perform_bulk_edit_resource_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/performance-stats-grid/:
    post:
      operationId: ux_common_cmdb_profile_performance_stats_grid_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/physical_summary/:
    get:
      operationId: ux_common_cmdb_profile_physical_summary_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/pm-data/:
    post:
      operationId: ux_common_cmdb_profile_pm_data_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/pm-list/:
    get:
      operationId: ux_common_cmdb_profile_pm_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/pm-stat-label/:
    get:
      operationId: ux_common_cmdb_profile_pm_stat_label_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/poll-status/:
    post:
      operationId: ux_common_cmdb_profile_poll_status_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/port-channel/:
    get:
      operationId: ux_common_cmdb_profile_port_channel_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/port-data/:
    get:
      operationId: ux_common_cmdb_profile_port_data_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/port-inventory/:
    get:
      operationId: ux_common_cmdb_profile_port_inventory_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/port-list/:
    get:
      operationId: ux_common_cmdb_profile_port_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/port-status/:
    get:
      operationId: ux_common_cmdb_profile_port_status_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/port-timeslot-data/:
    get:
      operationId: ux_common_cmdb_profile_port_timeslot_data_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/protection-group/:
    get:
      operationId: ux_common_cmdb_profile_protection_group_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/resource-data/:
    get:
      operationId: ux_common_cmdb_profile_resource_data_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/resource-stat-data/:
    get:
      operationId: ux_common_cmdb_profile_resource_stat_data_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/resources/:
    get:
      operationId: ux_common_cmdb_profile_resources_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_cmdb_profile_resources_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/resources-list/:
    get:
      operationId: ux_common_cmdb_profile_resources_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/resources-list-options/:
    get:
      operationId: ux_common_cmdb_profile_resources_list_options_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/resourse/:
    get:
      operationId: ux_common_cmdb_profile_resourse_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/resync-poll-jobs/:
    post:
      operationId: ux_common_cmdb_profile_resync_poll_jobs_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/run-command/:
    post:
      operationId: ux_common_cmdb_profile_run_command_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/save-cross-connect/:
    post:
      operationId: ux_common_cmdb_profile_save_cross_connect_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/save-flow-domain/:
    post:
      operationId: ux_common_cmdb_profile_save_flow_domain_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/save-inventory/:
    post:
      operationId: ux_common_cmdb_profile_save_inventory_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/save-latest-sfp/:
    post:
      operationId: ux_common_cmdb_profile_save_latest_sfp_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/save-resources-list/:
    get:
      operationId: ux_common_cmdb_profile_save_resources_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/saveAssetAudit/:
    post:
      operationId: ux_common_cmdb_profile_saveAssetAudit_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/saveResource/:
    post:
      operationId: ux_common_cmdb_profile_saveResource_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/service-mapping/:
    get:
      operationId: ux_common_cmdb_profile_service_mapping_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/service-rept-station/:
    get:
      operationId: ux_common_cmdb_profile_service_rept_station_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/set-trace-responce/:
    get:
      operationId: ux_common_cmdb_profile_set_trace_responce_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/slot/:
    get:
      operationId: ux_common_cmdb_profile_slot_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/slottooltip/:
    get:
      operationId: ux_common_cmdb_profile_slottooltip_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/software-app-list/:
    get:
      operationId: ux_common_cmdb_profile_software_app_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/software-env-list/:
    get:
      operationId: ux_common_cmdb_profile_software_env_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/software-inv-list/:
    get:
      operationId: ux_common_cmdb_profile_software_inv_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/software-service-list/:
    get:
      operationId: ux_common_cmdb_profile_software_service_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/stack-list/:
    get:
      operationId: ux_common_cmdb_profile_stack_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/trace-test-response/:
    get:
      operationId: ux_common_cmdb_profile_trace_test_response_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/trigger-alarm-fetch/:
    post:
      operationId: ux_common_cmdb_profile_trigger_alarm_fetch_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/trigger-cross-connection-services/:
    get:
      operationId: ux_common_cmdb_profile_trigger_cross_connection_services_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/unmap-valient-channelmap/:
    get:
      operationId: ux_common_cmdb_profile_unmap_valient_channelmap_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/update-card-inventory/:
    get:
      operationId: ux_common_cmdb_profile_update_card_inventory_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/update-channel-map/:
    post:
      operationId: ux_common_cmdb_profile_update_channel_map_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/update-channelmap-data/:
    post:
      operationId: ux_common_cmdb_profile_update_channelmap_data_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/update-ge-channel-map/:
    post:
      operationId: ux_common_cmdb_profile_update_ge_channel_map_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/update-loopback-dbdata/:
    get:
      operationId: ux_common_cmdb_profile_update_loopback_dbdata_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/update-trace-responce/:
    get:
      operationId: ux_common_cmdb_profile_update_trace_responce_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/update_ci_from_audit/:
    post:
      operationId: ux_common_cmdb_profile_update_ci_from_audit_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/update_tenable_sync_status/:
    post:
      operationId: ux_common_cmdb_profile_update_tenable_sync_status_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/upload-bulk-inventory-csv/:
    post:
      operationId: ux_common_cmdb_profile_upload_bulk_inventory_csv_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/upload-csv/:
    post:
      operationId: ux_common_cmdb_profile_upload_csv_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/validate_resource_csv/:
    post:
      operationId: ux_common_cmdb_profile_validate_resource_csv_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/vcg-trigger-data/:
    get:
      operationId: ux_common_cmdb_profile_vcg_trigger_data_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/profile/vcg-trigger-save/:
    post:
      operationId: ux_common_cmdb_profile_vcg_trigger_save_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Cmdb
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/relation/:
    get:
      operationId: ux_common_cmdb_relation_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBRelation
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_cmdb_relation_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBRelation
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/cmdb/relation/{id}/:
    get:
      operationId: ux_common_cmdb_relation_retrieve_2
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBRelation
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_cmdb_relation_update
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBRelation
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_cmdb_relation_destroy
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBRelation
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/cmdb/relation/ci-rel-map/:
    post:
      operationId: ux_common_cmdb_relation_ci_rel_map_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBRelation
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/relation/ci_opt/:
    get:
      operationId: ux_common_cmdb_relation_ci_opt_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBRelation
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/relation/cisearch/:
    get:
      operationId: ux_common_cmdb_relation_cisearch_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBRelation
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/relation/options/:
    get:
      operationId: ux_common_cmdb_relation_options_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBRelation
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/relation/slot/:
    get:
      operationId: ux_common_cmdb_relation_slot_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBRelation
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/software/:
    get:
      operationId: ux_common_cmdb_software_retrieve
      description: This endpoint is used to fetch all the softwares in the current
        organization
      summary: Gets a list of softwares
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - CMDBSoftware
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_cmdb_software_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftware
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/cmdb/software/{id}/:
    get:
      operationId: ux_common_cmdb_software_retrieve_2
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBSoftware
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_cmdb_software_update
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBSoftware
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_cmdb_software_destroy
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CMDBSoftware
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/cmdb/software/create-csv/:
    post:
      operationId: ux_common_cmdb_software_create_csv_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftware
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/software/create-relation-csv/:
    post:
      operationId: ux_common_cmdb_software_create_relation_csv_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftware
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/software/csv_cols/:
    post:
      operationId: ux_common_cmdb_software_csv_cols_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftware
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/software/csv_relation_cols/:
    post:
      operationId: ux_common_cmdb_software_csv_relation_cols_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftware
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/software/devices/:
    get:
      operationId: ux_common_cmdb_software_devices_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftware
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/software/options/:
    get:
      operationId: ux_common_cmdb_software_options_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftware
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/software/upload-csv/:
    post:
      operationId: ux_common_cmdb_software_upload_csv_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftware
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/cmdb/software/upload-relation-csv/:
    post:
      operationId: ux_common_cmdb_software_upload_relation_csv_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - CMDBSoftware
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/contract/config/:
    get:
      operationId: ux_common_contract_config_list
      description: This endpoint is used to fetch all the contract configurations
        in the current organization
      summary: Gets a list of contracts
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - ContractManagement
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractList'
          description: ''
    post:
      operationId: ux_common_contract_config_create
      description: This endpoint is used to save a new contract for the current organization
      summary: 'Creates a new contract '
      tags:
      - ContractManagement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateContractSample:
                value:
                  contract_name: Software contract
                  contract_model: software
                summary: Create contract Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/contract/config/{id}/:
    get:
      operationId: ux_common_contract_config_retrieve
      description: This endpoint is used to fetch a contract details in the current
        organization
      summary: Gets a contract with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ContractManagement
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractList'
          description: ''
    put:
      operationId: ux_common_contract_config_update
      description: This endpoint is used to update a contract for the current organization
      summary: Update the contract with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ContractManagement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              UpdateContractSample:
                value:
                  contract_id: 12345678e33339
                  contract_name: software edit
                summary: Update Contract Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
    delete:
      operationId: ux_common_contract_config_destroy
      description: This endpoint is used to delete an existing contract for the current
        organization
      summary: Deletes the contract with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ContractManagement
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/contract/config/add-attachment/:
    post:
      operationId: ux_common_contract_config_add_attachment_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ContractManagement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContractList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContractList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractList'
          description: ''
  /ux/common/contract/config/ci-contract-map/:
    get:
      operationId: ux_common_contract_config_ci_contract_map_retrieve
      description: This endpoint is used to get ci contract map for a contract
      summary: Get ci contract relation
      tags:
      - ContractManagement
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractList'
          description: ''
  /ux/common/contract/config/ci-contract-map-id/:
    get:
      operationId: ux_common_contract_config_ci_contract_map_id_retrieve
      description: This endpoint is used to get ci contract map ids for a contract
      summary: Get ci contract relation id list
      tags:
      - ContractManagement
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractList'
          description: ''
  /ux/common/contract/config/options/:
    get:
      operationId: ux_common_contract_config_options_retrieve
      description: This endpoint is used to get options of contract management for
        the current organization
      summary: Gets options for the contract management
      tags:
      - ContractManagement
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractList'
          description: ''
  /ux/common/department/department/:
    get:
      operationId: ux_common_department_department_list
      description: This endpoint is used to fetch all the department in the current
        organization
      summary: Gets a list of departments
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Department
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Department'
          description: ''
    post:
      operationId: ux_common_department_department_create
      description: This endpoint is used to save a new department for the current
        organization
      summary: 'Creates a new department '
      tags:
      - Department
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateDepartmentSample:
                value:
                  dept_name: Finance Department
                  dept_head:
                  - Ramesh
                  description: Finance
                  prime_user:
                  - Akshatha
                summary: Create department Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/department/department/{id}/:
    get:
      operationId: ux_common_department_department_retrieve
      description: This endpoint is used to fetch a department details in the current
        organization
      summary: Gets a department with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Department
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    put:
      operationId: ux_common_department_department_update
      description: This endpoint is used to edit an existing department for the current
        organization
      summary: Edits the department with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Department
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    delete:
      operationId: ux_common_department_department_destroy
      description: This endpoint is used to delete an existing department for the
        current organization
      summary: Deletes the department with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Department
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/department/department/multidelete/:
    post:
      operationId: ux_common_department_department_multidelete_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Department
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /ux/common/department/department/options/:
    get:
      operationId: ux_common_department_department_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Department
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /ux/common/dgroup/device_group/:
    get:
      operationId: ux_common_dgroup_device_group_list
      description: This endpoint is used to fetch all the device groups in the current
        organization
      summary: Gets a list of device groups
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Device Group
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceGroup'
          description: ''
    post:
      operationId: ux_common_dgroup_device_group_create
      description: This endpoint is used to save a new device group for the current
        organization
      summary: 'Creates a new device group '
      tags:
      - Device Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateDeviceGroupSample:
                value:
                  name: location
                  description: location based device group
                  filter: []
                summary: Create device group Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/dgroup/device_group/{id}/:
    get:
      operationId: ux_common_dgroup_device_group_retrieve
      description: This endpoint is used to fetch a device group details in the current
        organization
      summary: Gets a Device group with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Device Group
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroup'
          description: ''
    put:
      operationId: ux_common_dgroup_device_group_update
      description: This endpoint is used to edit an existing device group for the
        current organization
      summary: Edits the device group with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Device Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceGroup'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroup'
          description: ''
    delete:
      operationId: ux_common_dgroup_device_group_destroy
      description: This endpoint is used to delete an existing device group for the
        current organization
      summary: Deletes the device group with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Device Group
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/dgroup/device_group/filter/:
    get:
      operationId: ux_common_dgroup_device_group_filter_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Device Group
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroup'
          description: ''
  /ux/common/dgroup/device_group/options/:
    get:
      operationId: ux_common_dgroup_device_group_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Device Group
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroup'
          description: ''
  /ux/common/events/events/:
    get:
      operationId: ux_common_events_events_retrieve
      description: This endpoint is used to fetch all the events in the current organization
      summary: Gets a list of events
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_events_events_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/events/events/{eventid}/:
    get:
      operationId: ux_common_events_events_retrieve_2
      description: This endpoint is used to fetch a event in the current organization
      summary: Gets a event with the given event id
      parameters:
      - in: path
        name: eventid
        schema:
          type: string
        description: A unique value identifying this events.
        required: true
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_events_events_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: eventid
        schema:
          type: string
        description: A unique value identifying this events.
        required: true
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_events_events_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: eventid
        schema:
          type: string
        description: A unique value identifying this events.
        required: true
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/events/events/action/:
    get:
      operationId: ux_common_events_events_action_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/available-tags/:
    get:
      operationId: ux_common_events_events_available_tags_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/column-config/:
    get:
      operationId: ux_common_events_events_column_config_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/comments/{eventid}/:
    get:
      operationId: ux_common_events_events_comments_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: eventid
        schema:
          type: string
        description: A unique value identifying this events.
        required: true
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/create_incident/:
    post:
      operationId: ux_common_events_events_create_incident_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/events_nbi/:
    post:
      operationId: ux_common_events_events_events_nbi_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/get-event-ticket-details/:
    get:
      operationId: ux_common_events_events_get_event_ticket_details_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/get-top-process/:
    get:
      operationId: ux_common_events_events_get_top_process_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/get_events_nbi_inci_detail/:
    post:
      operationId: ux_common_events_events_get_events_nbi_inci_detail_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/list/:
    post:
      operationId: ux_common_events_events_list_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/options/:
    get:
      operationId: ux_common_events_events_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/save-column-config/:
    post:
      operationId: ux_common_events_events_save_column_config_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/save-tag-to-events/:
    post:
      operationId: ux_common_events_events_save_tag_to_events_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/suppressed-events/:
    get:
      operationId: ux_common_events_events_suppressed_events_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/suppression-adaptive/:
    get:
      operationId: ux_common_events_events_suppression_adaptive_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/update-event-assignee/:
    post:
      operationId: ux_common_events_events_update_event_assignee_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/update-event-due-date/:
    post:
      operationId: ux_common_events_events_update_event_due_date_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/update_incident_note/:
    post:
      operationId: ux_common_events_events_update_incident_note_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/events/events/upsert_incident/:
    post:
      operationId: ux_common_events_events_upsert_incident_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/fieldconfig/field-config/:
    get:
      operationId: ux_common_fieldconfig_field_config_list
      description: This endpoint is used to fetch all the field configs from the current
        organization
      summary: Gets a list of field configs
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Field Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FieldConfigList'
          description: ''
    post:
      operationId: ux_common_fieldconfig_field_config_create
      description: This endpoint is used to save a new field_config for the current
        organization
      summary: 'Creates a new field_config '
      tags:
      - Field Configuration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateFieldConfigSample:
                value:
                  field_config: field_config1
                summary: Create field_config Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/fieldconfig/field-config/{id}/:
    get:
      operationId: ux_common_fieldconfig_field_config_retrieve
      description: This endpoint is used to fetch a business_rule details in the current
        organization
      summary: Gets a field_config with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Field Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldConfigList'
          description: ''
    put:
      operationId: ux_common_fieldconfig_field_config_update
      description: This endpoint is used to edit an existing field_config for the
        current organization
      summary: Edits the field_config with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Field Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldConfigList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FieldConfigList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FieldConfigList'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldConfigList'
          description: ''
    delete:
      operationId: ux_common_fieldconfig_field_config_destroy
      description: This endpoint is used to delete an existing field_config for the
        current organization
      summary: Deletes the field_config with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Field Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/fieldconfig/field-config/field_permission/:
    post:
      operationId: ux_common_fieldconfig_field_config_field_permission_create
      description: 'This endpoint is used to get the configureed fields for the status '
      summary: Get the configured field for the workflow
      tags:
      - Field Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldConfigList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FieldConfigList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FieldConfigList'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldConfigList'
          description: ''
  /ux/common/fieldconfig/field-config/options/:
    get:
      operationId: ux_common_fieldconfig_field_config_options_retrieve
      description: 'This endpoint is used to get the default options for field_config '
      summary: Get the options for the Field configuration
      tags:
      - Field Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldConfigList'
          description: ''
  /ux/common/imacd/conversation/:
    get:
      operationId: ux_common_imacd_conversation_retrieve
      description: API endpoint that allows imacd process to be viewed or edited.
      tags:
      - IMACD
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_imacd_conversation_create
      description: API endpoint that allows imacd process to be viewed or edited.
      tags:
      - IMACD
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/imacd/conversation/{id}/:
    get:
      operationId: ux_common_imacd_conversation_retrieve_2
      description: API endpoint that allows imacd process to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - IMACD
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_imacd_conversation_update
      description: API endpoint that allows imacd process to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - IMACD
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_imacd_conversation_destroy
      description: API endpoint that allows imacd process to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - IMACD
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/imacd/imacd/:
    get:
      operationId: ux_common_imacd_imacd_retrieve
      description: This endpoint is used to fetch all the IMACD process in the current
        organization
      summary: Gets a list of IMACD process
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - IMACD
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_imacd_imacd_create
      description: This endpoint is used to save a new imacd for the current organization
      summary: 'Creates a new imacd '
      tags:
      - IMACD
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateIMACDSample:
                value:
                  summary: VPN Issue
                  description: ''
                  catalogue: ''
                  impact_service: ''
                  impact_service_name: service1
                  service_classification: ''
                  service_classification_name: ''
                  state: Open
                  state_id: 1
                  status: New
                  status_id: 1
                  urgency_id: 3
                  urgency: Low
                  priority_id: 5
                  priority: Very Low
                  impact: Department
                  impact_id: 3
                  imacd_source:
                    id: 1
                    name: Web
                  resolution_type: ''
                  is_first_call: ''
                  imacd_type:
                    id: 1
                    name: imacd
                    prefix: inci
                  requester_id: ''
                  requester_name: Test req
                  requester_email: testreq@gmail.com
                  requester_phone: '7778889999'
                  reporter_name: ''
                  reporter_email: ''
                  reporter_phone: ''
                  watcher: ''
                  hold_config: {}
                  support_group: ''
                  assignee: ''
                  escalation: {}
                  tag: []
                  assets: []
                  config: {}
                  reference: {}
                  template_info: {}
                  closure_info: {}
                  approval_config: {}
                  custom_field:
                  - {}
                  attachment: {}
                  api_link: {}
                  lock_config: {}
                  field_service_config: {}
                  closure_note: ''
                summary: Create IMACD Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/imacd/imacd/{id}/:
    get:
      operationId: ux_common_imacd_imacd_retrieve_2
      description: This endpoint is used to fetch a imacd process details in the current
        organization
      summary: Gets a imacd process with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - IMACD
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_imacd_imacd_update
      description: This endpoint is used to edit an existing imacd for the current
        organization
      summary: Edits the imacd with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - IMACD
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_imacd_imacd_destroy
      description: This endpoint is used to delete an existing imacd for the current
        organization
      summary: Deletes the imacd with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - IMACD
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/imacd/imacd/add-attachment/:
    post:
      operationId: ux_common_imacd_imacd_add_attachment_create
      description: This endpoint is used to add new attachments.
      summary: Add attachments for the selected imacd process.
      tags:
      - IMACD
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/imacd/imacd/attachment/:
    get:
      operationId: ux_common_imacd_imacd_attachment_retrieve
      description: This endpoint is used to fetch the attachments.
      summary: Gets attachments for the selected imacd process.
      tags:
      - IMACD
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/imacd/imacd/gatepass-detail/{id}/:
    get:
      operationId: ux_common_imacd_imacd_gatepass_detail_retrieve
      description: API endpoint that allows Business Profile to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - IMACD
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/imacd/imacd/gatepasses/:
    get:
      operationId: ux_common_imacd_imacd_gatepasses_retrieve
      description: This endpoint is used to fetch the list of gatepasses for organisation.
      summary: Gets gatepasses for organisation.
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      - in: query
        name: user_tz
        schema:
          type: string
        description: User timezone
        required: true
      tags:
      - IMACD
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/imacd/imacd/history/:
    get:
      operationId: ux_common_imacd_imacd_history_retrieve
      description: This endpoint is used to fetch the history.
      summary: Gets history for the selected imacd.
      tags:
      - IMACD
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/imacd/imacd/options/:
    get:
      operationId: ux_common_imacd_imacd_options_retrieve
      description: API endpoint that allows Business Profile to be viewed or edited.
      tags:
      - IMACD
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/imacd/imacd/save-rich-text/:
    post:
      operationId: ux_common_imacd_imacd_save_rich_text_create
      description: This endpoint is used to save the rich text data.
      summary: Save rich text data
      tags:
      - IMACD
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/imacd/imacd/verify-gatepass-asset/:
    post:
      operationId: ux_common_imacd_imacd_verify_gatepass_asset_create
      description: API endpoint that allows Business Profile to be viewed or edited.
      tags:
      - IMACD
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/kb/kb/:
    get:
      operationId: ux_common_kb_kb_list
      description: This endpoint is used to fetch all the active KB's for the current
        organization
      summary: Gets list of KB
      parameters:
      - name: items_per_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Knowledge Base
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&items_per_page=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&items_per_page=100
                  results:
                    type: array
                    items:
                      count: 2
                      next: null
                      previous: null
                      results:
                      - kb_id: '105687373427397104616'
                        config:
                          title: Test KB
                          kbtype: article
                          state: Active
                          status: Approved
                          department: IT
                          catalogue_service: IT Services
                          approver: 1
                          reviewer: 1
                          valid_till: '2021-06-25'
                          is_archive: false
                          is_private: false
                          is_security: false
                          is_disabled_update: false
                          show_contact: false
                          email: null
                          mobile: null
                          tags: []
                          users: []
                          teams: []
                          keywords:
                          - test
                          - IT
                          content:
                            info: This is a test KB
                            attachments: []
                          faq: null
                          known_error: null
                          solution: null
                          api_link_data:
                            external_url: null
                            description: null
                      - kb_id: '105687410610271163368'
                        config:
                          title: Test KB1
                          kbtype: article
                          state: Active
                          status: Approved
                          department: IT
                          catalogue_service: IT Services
                          approver: 1
                          reviewer: 1
                          valid_till: '2021-06-25'
                          is_archive: false
                          is_private: false
                          is_security: false
                          is_disabled_update: false
                          show_contact: false
                          email: null
                          mobile: null
                          tags: []
                          users: []
                          teams: []
                          keywords:
                          - test
                          - IT
                          content:
                            info: This is a test KB
                            attachments: []
                          faq: null
                          known_error: null
                          solution: null
                          api_link_data:
                            external_url: null
                            description: null
          description: ''
    post:
      operationId: ux_common_kb_kb_create
      description: This endpoint is used to save a new KB for the current organization
      summary: 'Creates a new KB  '
      tags:
      - Knowledge Base
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateKBSample:
                value:
                  kbtype: article
                  title: Test KB1
                  keywords:
                  - test
                  - IT
                  content:
                    info: This is a test KB
                    attachments: []
                  state: Active
                  status: Approved
                  department: IT
                  catalogue_service: IT Services
                  approvers: Shyam M
                  reviewers: Samaresh M
                  valid_till: '2021-06-25'
                  is_private: false
                  approver: 1
                  reviewer: 1
                summary: Create KB Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                status: success
                id: '105687410610271163368'
                message: Message.msg_kb_created
                msg: Knowledge Base Info created successfully
              examples:
                ResponseSample:
                  value:
                    status: success
                    id: '105687410610271163368'
                    message: Message.msg_kb_created
                    msg: Knowledge Base Info created successfully
                  summary: Response Sample
          description: ''
        '200':
          content:
            application/json:
              schema:
                status: success
                id: '105687410610271163368'
                message: Message.msg_kb_updated
                msg: Knowledge Base Info updated successfully
              examples:
                ResponseSample:
                  value:
                    status: success
                    id: '105687410610271163368'
                    message: Message.msg_kb_created
                    msg: Knowledge Base Info created successfully
                  summary: Response Sample
          description: ''
        '500':
          content:
            application/json:
              schema:
                status: failed
                id: '-1'
                message: Error.err_kb_save_failed
                msg: Failed to Save KB
          description: ''
  /ux/common/kb/kb/{id}/:
    get:
      operationId: ux_common_kb_kb_retrieve
      description: This endpoint is used to fetch a kb details in the current organization
      summary: Gets a kb with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Knowledge Base
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                id: 60d3a9321e54f93b4eca4292
                kb_id: '105687373427397104616'
                display_id: article00001
                created_by: '21'
                organization: '105685081033968456680'
                creation_time: '2021-06-23T21:35:46.899000+05:30'
                last_update_time: null
                is_deleted: false
                config:
                  title: Test KB
                  kbtype: article
                  state: Active
                  status: Approved
                  department: IT
                  catalogue_service: IT Services
                  approver: 1
                  reviewer: 1
                  valid_till: '2021-06-25'
                  is_archive: false
                  is_private: false
                  is_security: false
                  is_disabled_update: false
                  show_contact: false
                  email: null
                  mobile: null
                  tags: []
                  users: []
                  teams: []
                  keywords:
                  - test
                  - IT
                  content:
                    info: This is a test KB
                    attachments: []
                  faq: null
                  known_error: null
                  solution: null
                  api_link_data:
                    external_url: null
                    description: null
          description: ''
    put:
      operationId: ux_common_kb_kb_update
      description: This endpoint is used to edit an existing KB for the current organization
      summary: Edits the kb with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Knowledge Base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KBList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KBList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KBList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
    patch:
      operationId: ux_common_kb_kb_partial_update
      description: API endpoint for knowledge base
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Knowledge Base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedKBList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedKBList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedKBList'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
    delete:
      operationId: ux_common_kb_kb_destroy
      description: This endpoint is used to delete an existing KB for the current
        organization
      summary: Deletes the KB with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Knowledge Base
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                status: success
                id: ''
                message: Message.msg_kb_deleted
                msg: Knowledge Base Info deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                status: error
                id: ''
                message: Error.err_delete_kb
                msg: Not able to delete this KB
          description: ''
  /ux/common/kb/kb/add-attachment/:
    post:
      operationId: ux_common_kb_kb_add_attachment_create
      description: This endpoint is used to add new attachments.
      summary: Add attachments for the selected kb.
      tags:
      - Knowledge Base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KBList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KBList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KBList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/attachment/:
    get:
      operationId: ux_common_kb_kb_attachment_retrieve
      description: This endpoint is used to fetch the attachments.
      summary: Gets attachments for the selected kb.
      tags:
      - Knowledge Base
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/bookmarks/:
    get:
      operationId: ux_common_kb_kb_bookmarks_retrieve
      description: This endpoint is used to get the bookmarked KB's
      summary: Get the bookmarked KB's
      tags:
      - Knowledge Base
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/bulk-create/:
    post:
      operationId: ux_common_kb_kb_bulk_create_create
      description: This is used to dump data from csv upload
      summary: Get data from csv upload
      tags:
      - Knowledge Base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KBList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KBList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KBList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/categories/:
    get:
      operationId: ux_common_kb_kb_categories_retrieve
      description: This endpoint is used to get the categories
      summary: Get the categories for the KB
      tags:
      - Knowledge Base
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/comment/:
    post:
      operationId: ux_common_kb_kb_comment_create
      description: This endpoint is used to save the comment for a KB
      summary: Save the comment for a KB
      tags:
      - Knowledge Base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KBList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KBList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KBList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/comments/:
    get:
      operationId: ux_common_kb_kb_comments_retrieve
      description: 'This endpoint is used to get the comments for KB '
      summary: Get the comments for a KB
      tags:
      - Knowledge Base
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/csv_data/:
    post:
      operationId: ux_common_kb_kb_csv_data_create
      description: This is used to get the options for csv upload
      summary: Get the options for csv upload
      tags:
      - Knowledge Base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KBList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KBList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KBList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/delete-attachment/{id}/:
    put:
      operationId: ux_common_kb_kb_delete_attachment_update
      description: API endpoint for knowledge base
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Knowledge Base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KBList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KBList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KBList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/download_csv/:
    get:
      operationId: ux_common_kb_kb_download_csv_retrieve
      description: This is used to download the csv file
      summary: download the csv file
      tags:
      - Knowledge Base
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/feedback/:
    post:
      operationId: ux_common_kb_kb_feedback_create
      description: This endpoint is used to save feedback for a KB
      summary: Save the feedback for a KB
      tags:
      - Knowledge Base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KBList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KBList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KBList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/history/:
    get:
      operationId: ux_common_kb_kb_history_retrieve
      description: This endpoint is used to fetch the history.
      summary: Gets history for the selected kb.
      tags:
      - Knowledge Base
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/options/:
    get:
      operationId: ux_common_kb_kb_options_retrieve
      description: This endpoint is used to get the default options for KB config
      summary: Get the options for the KB configuration
      tags:
      - Knowledge Base
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/ratings/:
    get:
      operationId: ux_common_kb_kb_ratings_retrieve
      description: This endpoint is used to get the ratings for KB
      summary: Get the ratings for the KB
      tags:
      - Knowledge Base
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/recent/:
    get:
      operationId: ux_common_kb_kb_recent_retrieve
      description: This endpoint is used to get the recent KB's
      summary: Get the recent KB's
      tags:
      - Knowledge Base
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/related/:
    get:
      operationId: ux_common_kb_kb_related_retrieve
      description: This endpoint is used to get the related KB's
      summary: Get the related KB's
      tags:
      - Knowledge Base
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/team_user_map/:
    get:
      operationId: ux_common_kb_kb_team_user_map_retrieve
      description: This endpoint is used to get the user list from team
      summary: Get user list
      tags:
      - Knowledge Base
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/upload-csv/:
    post:
      operationId: ux_common_kb_kb_upload_csv_create
      description: This is used to get the options for csv upload
      summary: Get the options for csv upload
      tags:
      - Knowledge Base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KBList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KBList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KBList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/user-list/:
    get:
      operationId: ux_common_kb_kb_user_list_retrieve
      description: |-
        Function will return user info dict
        :param request: request.
        :return: dict
      tags:
      - Knowledge Base
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/viewers/:
    get:
      operationId: ux_common_kb_kb_viewers_retrieve
      description: This endpoint is used to get the viewers for a KB
      summary: Get the viewers for the KB
      tags:
      - Knowledge Base
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/kb/kb/views/:
    get:
      operationId: ux_common_kb_kb_views_retrieve
      description: This endpoint is used to get the view count for a KB
      summary: Get the view count for the KB
      tags:
      - Knowledge Base
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KBList'
          description: ''
  /ux/common/leaves/leaveinfo/:
    get:
      operationId: ux_common_leaves_leaveinfo_list
      description: This endpoint is used to fetch all the leaves in the current organization
      summary: Gets a list of leaves
      parameters:
      - name: items_per_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Leaves
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLeavesListList'
          description: ''
    post:
      operationId: ux_common_leaves_leaveinfo_create
      description: This endpoint is used to save a new user for the current organization
      summary: 'Creates a leave for user '
      tags:
      - Leaves
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateLeaveSample:
                summary: Create leave Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/leaves/leaveinfo/{id}/:
    get:
      operationId: ux_common_leaves_leaveinfo_retrieve
      description: This endpoint is used to fetch a leave details in the current organization
      summary: Gets a leave with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Leaves
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeavesList'
          description: ''
    put:
      operationId: ux_common_leaves_leaveinfo_update
      description: This endpoint is used to edit an existing leave for the current
        organization
      summary: Edits the leave with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Leaves
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeavesList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LeavesList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LeavesList'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeavesList'
          description: ''
    patch:
      operationId: ux_common_leaves_leaveinfo_partial_update
      description: API endpoint that allows to view the leaves for system.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Leaves
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLeavesList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLeavesList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLeavesList'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeavesList'
          description: ''
    delete:
      operationId: ux_common_leaves_leaveinfo_destroy
      description: This endpoint is used to delete an existing leave for the current
        organization
      summary: Deletes the leave with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Leaves
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/leaves/leaveinfo/get_config/:
    get:
      operationId: ux_common_leaves_leaveinfo_get_config_retrieve
      description: API endpoint that allows to view the leaves for system.
      tags:
      - Leaves
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeavesList'
          description: ''
  /ux/common/leaves/leaveinfo/get_options/:
    get:
      operationId: ux_common_leaves_leaveinfo_get_options_retrieve
      description: API endpoint that allows to view the leaves for system.
      tags:
      - Leaves
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeavesList'
          description: ''
  /ux/common/leaves/leaveinfo/my_leaves/:
    get:
      operationId: ux_common_leaves_leaveinfo_my_leaves_retrieve
      description: API endpoint that allows to view the leaves for system.
      tags:
      - Leaves
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeavesList'
          description: ''
  /ux/common/leaves/leaveinfo/save_config/:
    post:
      operationId: ux_common_leaves_leaveinfo_save_config_create
      description: API endpoint that allows to view the leaves for system.
      tags:
      - Leaves
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeavesList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LeavesList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LeavesList'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeavesList'
          description: ''
  /ux/common/live_chat/chat/:
    get:
      operationId: ux_common_live_chat_chat_retrieve
      description: This endpoint is used to fetch the chat config in the current organization
      summary: Gets a list of chat config
      tags:
      - chat
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_live_chat_chat_create
      description: This endpoint is used to update the chat config for the current
        organization
      summary: Updates the chat config
      tags:
      - chat
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/live_chat/chat/{id}/:
    get:
      operationId: ux_common_live_chat_chat_retrieve_2
      description: Live Chat API endpoints
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - chat
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_live_chat_chat_update
      description: Live Chat API endpoints
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - chat
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_live_chat_chat_destroy
      description: Live Chat API endpoints
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - chat
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/live_chat/chat/chat_status/:
    post:
      operationId: ux_common_live_chat_chat_chat_status_create
      description: Live Chat API endpoints
      tags:
      - chat
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/live_chat/chat/chats/:
    post:
      operationId: ux_common_live_chat_chat_chats_create
      description: Live Chat API endpoints
      tags:
      - chat
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/live_chat/chat/messages/:
    get:
      operationId: ux_common_live_chat_chat_messages_retrieve
      description: Live Chat API endpoints
      tags:
      - chat
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/live_chat/chat/options/:
    get:
      operationId: ux_common_live_chat_chat_options_retrieve
      description: This endpoint is used to fetch all the option for chat config in
        the current organization
      summary: Gets a list of chat config options
      tags:
      - chat
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/live_chat/chat/start_chat/:
    post:
      operationId: ux_common_live_chat_chat_start_chat_create
      description: Live Chat API endpoints
      tags:
      - chat
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/genai/:
    get:
      operationId: ux_common_marketplace_genai_retrieve
      description: API endpoint for GenAI configuration management
      tags:
      - GenAI
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_marketplace_genai_create
      description: API endpoint for GenAI configuration management
      tags:
      - GenAI
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/marketplace/genai/{id}/:
    get:
      operationId: ux_common_marketplace_genai_retrieve_2
      description: API endpoint for GenAI configuration management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - GenAI
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_marketplace_genai_update
      description: API endpoint for GenAI configuration management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - GenAI
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_marketplace_genai_destroy
      description: API endpoint for GenAI configuration management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - GenAI
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/marketplace/genai/key/:
    post:
      operationId: ux_common_marketplace_genai_key_create
      description: Create a new API key
      tags:
      - GenAI
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/genai/key/{id}/:
    delete:
      operationId: ux_common_marketplace_genai_key_destroy
      description: API endpoint for GenAI configuration management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - GenAI
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/marketplace/genai/keys/:
    get:
      operationId: ux_common_marketplace_genai_keys_retrieve
      description: List all GenAI API keys
      tags:
      - GenAI
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/genai/options/:
    get:
      operationId: ux_common_marketplace_genai_options_retrieve
      description: Get options for GenAI configuration
      tags:
      - GenAI
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/genai/provider/:
    post:
      operationId: ux_common_marketplace_genai_provider_create
      description: Create or update provider configuration
      tags:
      - GenAI
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/:
    get:
      operationId: ux_common_marketplace_marketplace_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_marketplace_marketplace_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/marketplace/marketplace/{id}/:
    get:
      operationId: ux_common_marketplace_marketplace_retrieve_2
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_marketplace_marketplace_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_marketplace_marketplace_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/marketplace/marketplace/apikey/:
    get:
      operationId: ux_common_marketplace_marketplace_apikey_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/app_details/:
    get:
      operationId: ux_common_marketplace_marketplace_app_details_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/app_status/:
    get:
      operationId: ux_common_marketplace_marketplace_app_status_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/app_sync_schedule/:
    post:
      operationId: ux_common_marketplace_marketplace_app_sync_schedule_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/azure_config/:
    get:
      operationId: ux_common_marketplace_marketplace_azure_config_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/azure_settings/:
    get:
      operationId: ux_common_marketplace_marketplace_azure_settings_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/bmc_settings/:
    get:
      operationId: ux_common_marketplace_marketplace_bmc_settings_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/bmc_sync_schedule/:
    post:
      operationId: ux_common_marketplace_marketplace_bmc_sync_schedule_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/delete_config/:
    post:
      operationId: ux_common_marketplace_marketplace_delete_config_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/disable_sync/:
    post:
      operationId: ux_common_marketplace_marketplace_disable_sync_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/download-teams-manifest/:
    post:
      operationId: ux_common_marketplace_marketplace_download_teams_manifest_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/google-access-token/:
    post:
      operationId: ux_common_marketplace_marketplace_google_access_token_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/google-auth-update/:
    post:
      operationId: ux_common_marketplace_marketplace_google_auth_update_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/google-client-data/:
    get:
      operationId: ux_common_marketplace_marketplace_google_client_data_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/google_signin/:
    post:
      operationId: ux_common_marketplace_marketplace_google_signin_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/google_workspace_settings/:
    get:
      operationId: ux_common_marketplace_marketplace_google_workspace_settings_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/jira_options/:
    get:
      operationId: ux_common_marketplace_marketplace_jira_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/jira_settings/:
    get:
      operationId: ux_common_marketplace_marketplace_jira_settings_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/ldap_settings/:
    get:
      operationId: ux_common_marketplace_marketplace_ldap_settings_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/microsoft-access-token/:
    post:
      operationId: ux_common_marketplace_marketplace_microsoft_access_token_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/ms_signin/:
    post:
      operationId: ux_common_marketplace_marketplace_ms_signin_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/options/:
    get:
      operationId: ux_common_marketplace_marketplace_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/rc_settings/:
    get:
      operationId: ux_common_marketplace_marketplace_rc_settings_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/requester_mobile_no/:
    get:
      operationId: ux_common_marketplace_marketplace_requester_mobile_no_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/roles/:
    get:
      operationId: ux_common_marketplace_marketplace_roles_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/save_bmc_config/:
    post:
      operationId: ux_common_marketplace_marketplace_save_bmc_config_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/save_config_app/:
    post:
      operationId: ux_common_marketplace_marketplace_save_config_app_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/save_jira_config/:
    post:
      operationId: ux_common_marketplace_marketplace_save_jira_config_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/save_ldap_config/:
    post:
      operationId: ux_common_marketplace_marketplace_save_ldap_config_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/save_map/:
    post:
      operationId: ux_common_marketplace_marketplace_save_map_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/save_ring_central_config/:
    post:
      operationId: ux_common_marketplace_marketplace_save_ring_central_config_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/save_servicenow_config/:
    post:
      operationId: ux_common_marketplace_marketplace_save_servicenow_config_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/save_sync_time_count/:
    post:
      operationId: ux_common_marketplace_marketplace_save_sync_time_count_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/save_tenable_config/:
    post:
      operationId: ux_common_marketplace_marketplace_save_tenable_config_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/save_whatsapp_map/:
    post:
      operationId: ux_common_marketplace_marketplace_save_whatsapp_map_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/sn_settings/:
    get:
      operationId: ux_common_marketplace_marketplace_sn_settings_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/team_settings/:
    get:
      operationId: ux_common_marketplace_marketplace_team_settings_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/tenable_settings/:
    get:
      operationId: ux_common_marketplace_marketplace_tenable_settings_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/uninstall-app/:
    post:
      operationId: ux_common_marketplace_marketplace_uninstall_app_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/update_config/:
    post:
      operationId: ux_common_marketplace_marketplace_update_config_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/marketplace/marketplace/whats_app_config/:
    get:
      operationId: ux_common_marketplace_marketplace_whats_app_config_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Marketplace
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/messenger/3api/:
    get:
      operationId: ux_common_messenger_3api_list
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - APIViewSet
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIList'
          description: ''
    post:
      operationId: ux_common_messenger_3api_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - APIViewSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/APIList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/APIList'
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIList'
          description: ''
  /ux/common/messenger/3api/{id}/:
    get:
      operationId: ux_common_messenger_3api_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - APIViewSet
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIList'
          description: ''
    put:
      operationId: ux_common_messenger_3api_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - APIViewSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/APIList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/APIList'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIList'
          description: ''
    patch:
      operationId: ux_common_messenger_3api_partial_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - APIViewSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAPIList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAPIList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAPIList'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIList'
          description: ''
    delete:
      operationId: ux_common_messenger_3api_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - APIViewSet
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/messenger/beep/:
    get:
      operationId: ux_common_messenger_beep_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - BeepViewSet
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_messenger_beep_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - BeepViewSet
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/messenger/beep/{id}/:
    get:
      operationId: ux_common_messenger_beep_retrieve_2
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - BeepViewSet
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_messenger_beep_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - BeepViewSet
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: ux_common_messenger_beep_partial_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - BeepViewSet
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_messenger_beep_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - BeepViewSet
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/messenger/beep/get-sound-files/:
    get:
      operationId: ux_common_messenger_beep_get_sound_files_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - BeepViewSet
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/messenger/beep/get-suppressed-messages/:
    get:
      operationId: ux_common_messenger_beep_get_suppressed_messages_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - BeepViewSet
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/messenger/sms/:
    get:
      operationId: ux_common_messenger_sms_list
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - SMSviewset
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SMSList'
          description: ''
    post:
      operationId: ux_common_messenger_sms_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - SMSviewset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMSList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SMSList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SMSList'
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMSList'
          description: ''
  /ux/common/messenger/sms/{id}/:
    get:
      operationId: ux_common_messenger_sms_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - SMSviewset
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMSList'
          description: ''
    put:
      operationId: ux_common_messenger_sms_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - SMSviewset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMSList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SMSList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SMSList'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMSList'
          description: ''
    patch:
      operationId: ux_common_messenger_sms_partial_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - SMSviewset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSMSList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSMSList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSMSList'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMSList'
          description: ''
    delete:
      operationId: ux_common_messenger_sms_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - SMSviewset
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/messenger/suppressed/:
    get:
      operationId: ux_common_messenger_suppressed_retrieve
      description: Suppressed endpoint that allows users to be viewed or edited.
      tags:
      - Suppressedviewset
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_messenger_suppressed_create
      description: Suppressed endpoint that allows users to be viewed or edited.
      tags:
      - Suppressedviewset
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/messenger/suppressed/{id}/:
    get:
      operationId: ux_common_messenger_suppressed_retrieve_2
      description: Suppressed endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Suppressedviewset
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_messenger_suppressed_update
      description: Suppressed endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Suppressedviewset
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: ux_common_messenger_suppressed_partial_update
      description: Suppressed endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Suppressedviewset
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_messenger_suppressed_destroy
      description: Suppressed endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Suppressedviewset
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/messenger/syslog/:
    get:
      operationId: ux_common_messenger_syslog_list
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - SyslogViewSet
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SyslogList'
          description: ''
    post:
      operationId: ux_common_messenger_syslog_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - SyslogViewSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyslogList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SyslogList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SyslogList'
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogList'
          description: ''
  /ux/common/messenger/syslog/{id}/:
    get:
      operationId: ux_common_messenger_syslog_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - SyslogViewSet
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogList'
          description: ''
    put:
      operationId: ux_common_messenger_syslog_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - SyslogViewSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyslogList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SyslogList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SyslogList'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogList'
          description: ''
    patch:
      operationId: ux_common_messenger_syslog_partial_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - SyslogViewSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSyslogList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSyslogList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSyslogList'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogList'
          description: ''
    delete:
      operationId: ux_common_messenger_syslog_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - SyslogViewSet
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/org/location/:
    get:
      operationId: ux_common_org_location_list
      description: This endpoint is used to fetch all the organization locations in
        the current organization
      summary: Gets a list of organization locations
      tags:
      - Organization Location
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationLocation'
          description: ''
    post:
      operationId: ux_common_org_location_create
      description: This endpoint is used to save a new user for the current organization
      summary: 'Creates a new location '
      tags:
      - Organization Location
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateOrganizationLocationSample:
                value:
                  location_name: JP Nagar
                  country: India
                  address: 3rd floor
                  state: Karnataka
                  city: Bangalore
                  area: JP Nagar
                  subarea: 3rd phase
                  pincode: '574221'
                  description: Branch office address
                summary: Create Organization Location Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/org/location/{id}/:
    get:
      operationId: ux_common_org_location_retrieve
      description: This endpoint is used to fetch a organization location details
        in the current organization
      summary: Gets a organization location with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Organization Location
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationLocation'
          description: ''
    put:
      operationId: ux_common_org_location_update
      description: This endpoint is used to edit an existing organization location
        for the current organization
      summary: Edits the organization location with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Organization Location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationLocation'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationLocation'
          description: ''
    delete:
      operationId: ux_common_org_location_destroy
      description: This endpoint is used to delete an existing organization location
        for the current organization
      summary: Deletes the organization location with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Organization Location
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/org/location/create-csv/:
    post:
      operationId: ux_common_org_location_create_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Organization Location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationLocation'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationLocation'
          description: ''
  /ux/common/org/location/csv_cols/:
    post:
      operationId: ux_common_org_location_csv_cols_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Organization Location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationLocation'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationLocation'
          description: ''
  /ux/common/org/location/download_csv/:
    get:
      operationId: ux_common_org_location_download_csv_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Organization Location
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationLocation'
          description: ''
  /ux/common/org/location/location_details/:
    get:
      operationId: ux_common_org_location_location_details_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Organization Location
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationLocation'
          description: ''
  /ux/common/org/location/team_location/:
    get:
      operationId: ux_common_org_location_team_location_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Organization Location
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationLocation'
          description: ''
  /ux/common/org/location/upload-csv/:
    post:
      operationId: ux_common_org_location_upload_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Organization Location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationLocation'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationLocation'
          description: ''
  /ux/common/partner/partner/:
    get:
      operationId: ux_common_partner_partner_list
      description: This endpoint is used to fetch all the partners in the current
        organization
      summary: Gets a list of partners
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Partner
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Partner'
          description: ''
    post:
      operationId: ux_common_partner_partner_create
      description: This endpoint is used to save a new partner for the current organization
      summary: 'Creates a new partner '
      tags:
      - Partner
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreatePartnerSample:
                value:
                  partner_name: Sadaf
                  business_email: dsadaf72323@gmail.com
                  phone: '7411556607'
                  address: zxcvbnm
                summary: Create Partner Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/partner/partner/{id}/:
    get:
      operationId: ux_common_partner_partner_retrieve
      description: This endpoint is used to fetch a partner details in the current
        organization
      summary: Gets a partner with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Partner
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
          description: ''
    put:
      operationId: ux_common_partner_partner_update
      description: This endpoint is used to edit an existing partner for the current
        organization
      summary: Edits the partner with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Partner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Partner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Partner'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
          description: ''
    delete:
      operationId: ux_common_partner_partner_destroy
      description: This endpoint is used to delete an existing partner for the current
        organization
      summary: Deletes the partner with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Partner
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/partner/partner/filter/:
    get:
      operationId: ux_common_partner_partner_filter_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Partner
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
          description: ''
  /ux/common/penalty/penalty/:
    get:
      operationId: ux_common_penalty_penalty_list
      description: This endpoint is used to fetch all the penalty in the current organization
      summary: Gets a list of penalty
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Penalty
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PenaltyConfiguration'
          description: ''
    post:
      operationId: ux_common_penalty_penalty_create
      description: This endpoint is used to save a new penalty configuration for the
        current organization
      summary: Creates a penalty configuration
      tags:
      - Penalty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreatePenaltyConfiguration:
                summary: Create Penalty Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/penalty/penalty/{id}/:
    get:
      operationId: ux_common_penalty_penalty_retrieve
      description: This endpoint is used to fetch a penalty details in the current
        organization
      summary: Gets a penalty with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Penalty
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PenaltyConfiguration'
          description: ''
    put:
      operationId: ux_common_penalty_penalty_update
      description: This endpoint is used to edit an existing partner for the current
        organization
      summary: Edits the partner with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Penalty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PenaltyConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PenaltyConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PenaltyConfiguration'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PenaltyConfiguration'
          description: ''
    delete:
      operationId: ux_common_penalty_penalty_destroy
      description: This endpoint is used to delete an existing partner for the current
        organization
      summary: Deletes the partner with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Penalty
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/penalty/penalty/calculate-sample-penalty/:
    get:
      operationId: ux_common_penalty_penalty_calculate_sample_penalty_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Penalty
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PenaltyConfiguration'
          description: ''
  /ux/common/penalty/penalty/options/:
    get:
      operationId: ux_common_penalty_penalty_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Penalty
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PenaltyConfiguration'
          description: ''
  /ux/common/predicted_events/predicted_events/:
    get:
      operationId: ux_common_predicted_events_predicted_events_retrieve
      description: This endpoint is used to fetch all the events in the current organization
      summary: Gets a list of events
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_predicted_events_predicted_events_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/predicted_events/predicted_events/{eventid}/:
    get:
      operationId: ux_common_predicted_events_predicted_events_retrieve_2
      description: This endpoint is used to fetch a event in the current organization
      summary: Gets a event with the given event id
      parameters:
      - in: path
        name: eventid
        schema:
          type: string
        description: A unique value identifying this events.
        required: true
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_predicted_events_predicted_events_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: eventid
        schema:
          type: string
        description: A unique value identifying this events.
        required: true
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_predicted_events_predicted_events_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: eventid
        schema:
          type: string
        description: A unique value identifying this events.
        required: true
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/predicted_events/predicted_events/action/:
    get:
      operationId: ux_common_predicted_events_predicted_events_action_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/predicted_events/predicted_events/available-tags/:
    get:
      operationId: ux_common_predicted_events_predicted_events_available_tags_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/predicted_events/predicted_events/column-config/:
    get:
      operationId: ux_common_predicted_events_predicted_events_column_config_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/predicted_events/predicted_events/comments/{eventid}/:
    get:
      operationId: ux_common_predicted_events_predicted_events_comments_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: eventid
        schema:
          type: string
        description: A unique value identifying this events.
        required: true
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/predicted_events/predicted_events/create_incident/:
    post:
      operationId: ux_common_predicted_events_predicted_events_create_incident_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/predicted_events/predicted_events/events_nbi/:
    post:
      operationId: ux_common_predicted_events_predicted_events_events_nbi_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/predicted_events/predicted_events/get-event-ticket-details/:
    get:
      operationId: ux_common_predicted_events_predicted_events_get_event_ticket_details_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/predicted_events/predicted_events/get_events_nbi_inci_detail/:
    post:
      operationId: ux_common_predicted_events_predicted_events_get_events_nbi_inci_detail_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/predicted_events/predicted_events/options/:
    get:
      operationId: ux_common_predicted_events_predicted_events_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/predicted_events/predicted_events/save-column-config/:
    post:
      operationId: ux_common_predicted_events_predicted_events_save_column_config_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/predicted_events/predicted_events/save-tag-to-events/:
    post:
      operationId: ux_common_predicted_events_predicted_events_save_tag_to_events_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/predicted_events/predicted_events/suppressed-events/:
    get:
      operationId: ux_common_predicted_events_predicted_events_suppressed_events_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/predicted_events/predicted_events/suppression-adaptive/:
    get:
      operationId: ux_common_predicted_events_predicted_events_suppression_adaptive_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/predicted_events/predicted_events/update-event-assignee/:
    post:
      operationId: ux_common_predicted_events_predicted_events_update_event_assignee_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/predicted_events/predicted_events/update-event-due-date/:
    post:
      operationId: ux_common_predicted_events_predicted_events_update_event_due_date_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/predicted_events/predicted_events/update_incident_note/:
    post:
      operationId: ux_common_predicted_events_predicted_events_update_incident_note_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/predicted_events/predicted_events/upsert_incident/:
    post:
      operationId: ux_common_predicted_events_predicted_events_upsert_incident_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Predicted Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/purchase_order/config/:
    get:
      operationId: ux_common_purchase_order_config_list
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
    post:
      operationId: ux_common_purchase_order_config_create
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/{id}/:
    get:
      operationId: ux_common_purchase_order_config_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
    put:
      operationId: ux_common_purchase_order_config_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
    delete:
      operationId: ux_common_purchase_order_config_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/purchase_order/config/add-approval-config/:
    post:
      operationId: ux_common_purchase_order_config_add_approval_config_create
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/add-attachment/:
    post:
      operationId: ux_common_purchase_order_config_add_attachment_create
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/add_received_assets/:
    post:
      operationId: ux_common_purchase_order_config_add_received_assets_create
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/add_received_product_history/:
    post:
      operationId: ux_common_purchase_order_config_add_received_product_history_create
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/attachment/:
    get:
      operationId: ux_common_purchase_order_config_attachment_retrieve
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/create-csv/:
    post:
      operationId: ux_common_purchase_order_config_create_csv_create
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/csv_columns/:
    post:
      operationId: ux_common_purchase_order_config_csv_columns_create
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/delete-attachment/{id}/:
    put:
      operationId: ux_common_purchase_order_config_delete_attachment_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/delete_po/:
    post:
      operationId: ux_common_purchase_order_config_delete_po_create
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/download_csv/:
    get:
      operationId: ux_common_purchase_order_config_download_csv_retrieve
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/get-approval-config/:
    get:
      operationId: ux_common_purchase_order_config_get_approval_config_retrieve
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/get_asset_category_unique_fields/:
    get:
      operationId: ux_common_purchase_order_config_get_asset_category_unique_fields_retrieve
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/get_invoice_file/:
    get:
      operationId: ux_common_purchase_order_config_get_invoice_file_retrieve
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/get_received_product_history/:
    get:
      operationId: ux_common_purchase_order_config_get_received_product_history_retrieve
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/history/:
    get:
      operationId: ux_common_purchase_order_config_history_retrieve
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/options/:
    get:
      operationId: ux_common_purchase_order_config_options_retrieve
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/send_po_mail/:
    post:
      operationId: ux_common_purchase_order_config_send_po_mail_create
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/upload_csv/:
    post:
      operationId: ux_common_purchase_order_config_upload_csv_create
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/purchase_order/config/vendor_options/:
    get:
      operationId: ux_common_purchase_order_config_vendor_options_retrieve
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
  /ux/common/report/api/:
    get:
      operationId: ux_common_report_api_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_report_api_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/report/api/{id}/:
    get:
      operationId: ux_common_report_api_retrieve_2
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_report_api_update
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: ux_common_report_api_partial_update
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_report_api_destroy
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/report/api/dashboard/:
    post:
      operationId: ux_common_report_api_dashboard_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/report/api/mrtg-stats-data/:
    post:
      operationId: ux_common_report_api_mrtg_stats_data_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/report/api/report/:
    post:
      operationId: ux_common_report_api_report_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/requester/profile/:
    get:
      operationId: ux_common_requester_profile_retrieve
      description: This endpoint is used to fetch all the requester in the current
        organization (works based on token used to authorize)
      summary: Gets a list of requester profiles
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Requester
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
    post:
      operationId: ux_common_requester_profile_create
      description: This endpoint is used to save a new requester for the current organization
      summary: 'Creates a new requester '
      tags:
      - Requester
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateRequesterSample:
                value:
                  full_name: Vinutha K
                  email: vinutha.k@everest-ims.com
                  phone_number: '9980778899'
                  phone_ext: '91'
                  land_line: '201330'
                  is_login_active: true
                  is_login_enable: true
                  type: internal
                  notify_email:
                  - vinutha@everest-ims.com
                  notify_phone:
                  - '8877667788'
                  tags:
                  - test
                  - dns
                  support_hub: Bangalore
                  designation: Manager
                  department: IT
                  organization_name: everest
                  emp_type: test
                  customer_id: '123'
                  subscriber_id: '123'
                  customer_site_group: cust_12
                  joining_date: ''
                  business_segment: '1'
                  req_category: '1'
                  business_entity: eve
                  branch_partner: eve
                  sub_partner: eve
                  subscriber_status: Pending
                  user_details:
                    username: vinutha
                    password: ZDk5NjMwYmNjNzA1ODYzOWU3ZTgwZGYyMzlmMzhhMzI6OlUyRnNkR1ZrWDEvc0Jlb1BwcVYxcGViUWlucHFDTG1DdUlUanVMYWtzb1U9
                    confirm_password: ZDk5NjMwYmNjNzA1ODYzOWU3ZTgwZGYyMzlmMzhhMzI6OlUyRnNkR1ZrWDEvTUJhSkp2bENBQWlKdHBUOHVQY1ErdmZ6dnRhMkowMDg9
                    reporting_id: '2'
                  location:
                    street: 7th Main
                    building: Building A
                    area: Jp Nagar
                    sub_area: JP Nagar
                    city: Bangalore
                    state: Karnataka
                    country: India
                    pincode: '574221'
                    region: South
                    longitude: '78.01'
                    latitude: '12.3'
                    address: JP Nagar
                summary: Create Requester Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/requester/profile/{id}/:
    get:
      operationId: ux_common_requester_profile_retrieve_2
      description: This endpoint is used to fetch a requester in the current organization
      summary: Gets a requester profile with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Requester
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequesterList'
          description: ''
    put:
      operationId: ux_common_requester_profile_update
      description: This endpoint is used to edit an existing requester for the current
        organization
      summary: Edits the requester with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Requester
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequesterList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequesterList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequesterList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequesterList'
          description: ''
    delete:
      operationId: ux_common_requester_profile_destroy
      description: This endpoint is used to delete an existing requester for the current
        organization
      summary: Deletes the requester with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Requester
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/requester/profile/assets/:
    post:
      operationId: ux_common_requester_profile_assets_create
      description: API endpoint that allows Requester to be viewed or edited.
      tags:
      - Requester
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequesterList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequesterList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequesterList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequesterList'
          description: ''
  /ux/common/requester/profile/create-csv/:
    post:
      operationId: ux_common_requester_profile_create_csv_create
      description: API endpoint that allows Requester to be viewed or edited.
      tags:
      - Requester
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequesterList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequesterList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequesterList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequesterList'
          description: ''
  /ux/common/requester/profile/create_new_requester/:
    post:
      operationId: ux_common_requester_profile_create_new_requester_create
      description: API endpoint that allows Requester to be viewed or edited.
      tags:
      - Requester
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequesterList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequesterList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequesterList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequesterList'
          description: ''
  /ux/common/requester/profile/initconfig/:
    get:
      operationId: ux_common_requester_profile_initconfig_retrieve
      description: API endpoint that allows Requester to be viewed or edited.
      tags:
      - Requester
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequesterList'
          description: ''
  /ux/common/requester/profile/requester_details/:
    post:
      operationId: ux_common_requester_profile_requester_details_create
      description: API endpoint that allows Requester to be viewed or edited.
      tags:
      - Requester
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequesterList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequesterList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequesterList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequesterList'
          description: ''
  /ux/common/requester/profile/updateReportingMngr/:
    post:
      operationId: ux_common_requester_profile_updateReportingMngr_create
      description: API endpoint that allows Requester to be viewed or edited.
      tags:
      - Requester
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequesterList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequesterList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequesterList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequesterList'
          description: ''
  /ux/common/requester/profile/updateRequesterStatus/:
    post:
      operationId: ux_common_requester_profile_updateRequesterStatus_create
      description: API endpoint that allows Requester to be viewed or edited.
      tags:
      - Requester
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequesterList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequesterList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequesterList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequesterList'
          description: ''
  /ux/common/requester/profile/upload-csv/:
    post:
      operationId: ux_common_requester_profile_upload_csv_create
      description: API endpoint that allows Requester to be viewed or edited.
      tags:
      - Requester
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequesterList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequesterList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequesterList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequesterList'
          description: ''
  /ux/common/roles/profile/:
    get:
      operationId: ux_common_roles_profile_list
      description: This endpoint is used to fetch all the role profiles in the current
        organization (works based on token used to authorize)
      summary: Gets a list of role profiles
      tags:
      - Role Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
          description: ''
    post:
      operationId: ux_common_roles_profile_create
      description: This endpoint is used to save a new role for the current organization
      summary: 'Creates a new role '
      tags:
      - Role Profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateRoleSample:
                value:
                  role_name: Requester
                  description: User can have access only to requester portal
                  selected_permissions:
                    General:
                      organization:
                        view: true
                        add: true
                        edit: true
                        delete: true
                summary: Create Role Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/roles/profile/{id}/:
    get:
      operationId: ux_common_roles_profile_retrieve
      description: This endpoint is used to fetch a role in the current organization
      summary: Gets a role profile with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Role Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    put:
      operationId: ux_common_roles_profile_update
      description: This endpoint is used to edit an existing role for the current
        organization
      summary: Edits the role with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Role Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    delete:
      operationId: ux_common_roles_profile_destroy
      description: This endpoint is used to delete an existing role for the current
        organization
      summary: Deletes the role with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Role Profile
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/roles/profile/config/:
    get:
      operationId: ux_common_roles_profile_config_retrieve
      description: This endpoint is used to get all module role map for the current
        organization
      summary: Gets the module role map
      tags:
      - Role Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /ux/common/roles/profile/json/:
    get:
      operationId: ux_common_roles_profile_json_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Role Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /ux/common/roles/profile/options/:
    get:
      operationId: ux_common_roles_profile_options_retrieve
      description: This endpoint is used to get the default options for events options
      summary: Get the options for the events options
      tags:
      - Role Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /ux/common/service_feasibility_request/service_request/:
    get:
      operationId: ux_common_service_feasibility_request_service_request_list
      description: API endpoint that allows users to be viewed.
      tags:
      - Service Feasibility Requests
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceFeasibilityRequest'
          description: ''
    post:
      operationId: ux_common_service_feasibility_request_service_request_create
      description: API endpoint that allows users to be viewed.
      tags:
      - Service Feasibility Requests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceFeasibilityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceFeasibilityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceFeasibilityRequest'
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFeasibilityRequest'
          description: ''
  /ux/common/service_feasibility_request/service_request/{id}/:
    get:
      operationId: ux_common_service_feasibility_request_service_request_retrieve
      description: API endpoint that allows users to be viewed.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Service Feasibility Requests
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFeasibilityRequest'
          description: ''
    put:
      operationId: ux_common_service_feasibility_request_service_request_update
      description: API endpoint that allows users to be viewed.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Service Feasibility Requests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceFeasibilityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceFeasibilityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceFeasibilityRequest'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFeasibilityRequest'
          description: ''
    delete:
      operationId: ux_common_service_feasibility_request_service_request_destroy
      description: API endpoint that allows users to be viewed.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Service Feasibility Requests
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/service_feasibility_request/service_request/get_service_requests/:
    get:
      operationId: ux_common_service_feasibility_request_service_request_get_service_requests_retrieve
      description: This endpoint is used to fetch all the Service Feasibility Requests
        in the current organization
      summary: Gets a list of Service Feasibility Requests
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Service Feasibility Requests
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFeasibilityRequest'
          description: ''
  /ux/common/service_outage/service_outage/:
    get:
      operationId: ux_common_service_outage_service_outage_retrieve
      description: Fetches a list of service outages for the current organization.
      summary: Get list of service outages
      tags:
      - service_outage
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_service_outage_service_outage_create
      description: Creates a new service outage record for the current organization.
      summary: Create a service outage
      tags:
      - service_outage
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/service_outage/service_outage/{id}/:
    get:
      operationId: ux_common_service_outage_service_outage_retrieve_2
      description: Service Outage API endpoints
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - service_outage
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_service_outage_service_outage_update
      description: Service Outage API endpoints
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - service_outage
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_service_outage_service_outage_destroy
      description: Deletes a specific service outage by its ID.
      summary: Delete a service outage
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - service_outage
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/service_outage/service_outage/options/:
    get:
      operationId: ux_common_service_outage_service_outage_options_retrieve
      description: Fetches all available options related to service outages for the
        current organization.
      summary: Get service outage options
      tags:
      - service_outage
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/:
    get:
      operationId: ux_common_services_services_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_services_services_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/services/services/{id}/:
    get:
      operationId: ux_common_services_services_retrieve_2
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_common_services_services_update
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_common_services_services_destroy
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/services/services/add-channelmap-data/:
    get:
      operationId: ux_common_services_services_add_channelmap_data_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/add-service/:
    post:
      operationId: ux_common_services_services_add_service_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/add-service-profile/:
    get:
      operationId: ux_common_services_services_add_service_profile_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/all-circuits/:
    get:
      operationId: ux_common_services_services_all_circuits_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/associated-onts-list/:
    post:
      operationId: ux_common_services_services_associated_onts_list_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/check-service-name/:
    get:
      operationId: ux_common_services_services_check_service_name_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/ci_is_enable/:
    post:
      operationId: ux_common_services_services_ci_is_enable_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/ci_name/:
    post:
      operationId: ux_common_services_services_ci_name_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/ci_tag/:
    post:
      operationId: ux_common_services_services_ci_tag_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/circuit-paths/:
    post:
      operationId: ux_common_services_services_circuit_paths_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/delete-service/:
    get:
      operationId: ux_common_services_services_delete_service_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/delete-service-profile/:
    get:
      operationId: ux_common_services_services_delete_service_profile_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/delete-service-profile-enh/:
    post:
      operationId: ux_common_services_services_delete_service_profile_enh_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/ethernet-service-profiles/:
    get:
      operationId: ux_common_services_services_ethernet_service_profiles_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/ethernet-services/:
    get:
      operationId: ux_common_services_services_ethernet_services_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_services_services_ethernet_services_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/ethernet-services-paths/:
    get:
      operationId: ux_common_services_services_ethernet_services_paths_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/fetch-status/:
    get:
      operationId: ux_common_services_services_fetch_status_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/filter-options/:
    get:
      operationId: ux_common_services_services_filter_options_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/get-olt-details/:
    get:
      operationId: ux_common_services_services_get_olt_details_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/get-vcg/:
    get:
      operationId: ux_common_services_services_get_vcg_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/get_vcg_port/:
    get:
      operationId: ux_common_services_services_get_vcg_port_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/gpon-services/:
    get:
      operationId: ux_common_services_services_gpon_services_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/multiple-trigger-service/:
    get:
      operationId: ux_common_services_services_multiple_trigger_service_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/node-list/:
    get:
      operationId: ux_common_services_services_node_list_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/port-list/:
    get:
      operationId: ux_common_services_services_port_list_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/service-activate-deactivate/:
    get:
      operationId: ux_common_services_services_service_activate_deactivate_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/service-confirmation/:
    post:
      operationId: ux_common_services_services_service_confirmation_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/service-customer-details/:
    get:
      operationId: ux_common_services_services_service_customer_details_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/service-locations/:
    get:
      operationId: ux_common_services_services_service_locations_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/service-nodes-coordinates/:
    post:
      operationId: ux_common_services_services_service_nodes_coordinates_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/service-ont-olt-info/:
    get:
      operationId: ux_common_services_services_service_ont_olt_info_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/service-profiles/:
    get:
      operationId: ux_common_services_services_service_profiles_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/service-related/:
    get:
      operationId: ux_common_services_services_service_related_retrieve
      description: This endpoint is used to fetch all the Services profiles in the
        current organization (works based on token used to authorize)
      summary: Gets a list of Services profiles
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /ux/common/services/services/services/:
    get:
      operationId: ux_common_services_services_services_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_common_services_services_services_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/stm-jklm/:
    get:
      operationId: ux_common_services_services_stm_jklm_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/topology-service/:
    get:
      operationId: ux_common_services_services_topology_service_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/total-paths/:
    get:
      operationId: ux_common_services_services_total_paths_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/trigger-service/:
    get:
      operationId: ux_common_services_services_trigger_service_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/update-service-status/:
    get:
      operationId: ux_common_services_services_update_service_status_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/services/services/update_vcg_port/:
    get:
      operationId: ux_common_services_services_update_vcg_port_retrieve
      description: Adaptation of DRF ModelViewSet
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/common/tag/tag/:
    get:
      operationId: ux_common_tag_tag_list
      description: This endpoint is used to fetch all the tags in the current organization
      summary: Gets a list of tags
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Tag
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
    post:
      operationId: ux_common_tag_tag_create
      description: This endpoint is used to save a new tag for the current organization
      summary: 'Creates a new tag '
      tags:
      - Tag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateTagSample:
                value:
                  tag: tag1
                  type: User
                summary: Create Tag Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/tag/tag/{id}/:
    get:
      operationId: ux_common_tag_tag_retrieve
      description: This endpoint is used to fetch a tag details in the current organization
      summary: Gets a tag with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Tag
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: ux_common_tag_tag_update
      description: This endpoint is used to edit an existing tag for the current organization
      summary: Edits the tag with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: ux_common_tag_tag_destroy
      description: This endpoint is used to delete an existing tag for the current
        organization
      summary: Deletes the tag with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Tag
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/tag/tag/check-tags-config/:
    get:
      operationId: ux_common_tag_tag_check_tags_config_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Tag
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /ux/common/tag/tag/filter/:
    get:
      operationId: ux_common_tag_tag_filter_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Tag
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /ux/common/tag/tag/multidelete/:
    post:
      operationId: ux_common_tag_tag_multidelete_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /ux/common/tag/tag/options/:
    get:
      operationId: ux_common_tag_tag_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Tag
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /ux/common/tag/tag/validate_tag_user_usages/{id}/:
    get:
      operationId: ux_common_tag_tag_validate_tag_user_usages_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Tag
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /ux/common/teams/profile/:
    get:
      operationId: ux_common_teams_profile_list
      description: This endpoint is used to fetch all the team profiles in the current
        organization
      summary: Gets a list of team profiles
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Teams
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
          description: ''
    post:
      operationId: ux_common_teams_profile_create
      description: This endpoint is used to save a new team for the current organization
      summary: 'Creates a new team '
      tags:
      - Teams
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateTeamSample:
                value:
                  name: Team Approval 2
                  description: Test Approval 2
                  type: Approval
                  staff_selection_type: individual
                  approval_sequence: false
                  staff:
                  - profile_id: '105068180334458180584'
                    email: test_new2@gmail.com
                    full_name: Vinutha K
                  expertiseGroupList: []
                  owners:
                  - profile_id: '105068167971394819048'
                    email: test_new1@gmail.com
                    full_name: Shilpa V
                summary: Create team Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/teams/profile/{id}/:
    get:
      operationId: ux_common_teams_profile_retrieve
      description: This endpoint is used to fetch a team details in the current organization
      summary: Gets a team with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Teams
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    put:
      operationId: ux_common_teams_profile_update
      description: This endpoint is used to edit an existing team for the current
        organization
      summary: Edits the team with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    delete:
      operationId: ux_common_teams_profile_destroy
      description: This endpoint is used to delete an existing team for the current
        organization
      summary: Deletes the team with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Teams
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/teams/profile/incident_map/:
    post:
      operationId: ux_common_teams_profile_incident_map_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
  /ux/common/teams/profile/options/:
    get:
      operationId: ux_common_teams_profile_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Teams
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
  /ux/common/teams/profile/upload_csv/:
    post:
      operationId: ux_common_teams_profile_upload_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
  /ux/common/teams/profile/usergrplist/:
    post:
      operationId: ux_common_teams_profile_usergrplist_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
  /ux/common/teams/profile/validate_csv/:
    post:
      operationId: ux_common_teams_profile_validate_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
  /ux/common/teams/profile/validate_team_change/:
    get:
      operationId: ux_common_teams_profile_validate_team_change_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Teams
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
  /ux/common/telecom_settings/telecom_settings/:
    get:
      operationId: ux_common_telecom_settings_telecom_settings_list
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Telecom Settings
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TelecomSettings'
          description: ''
    post:
      operationId: ux_common_telecom_settings_telecom_settings_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Telecom Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelecomSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TelecomSettings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TelecomSettings'
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelecomSettings'
          description: ''
  /ux/common/telecom_settings/telecom_settings/{id}/:
    get:
      operationId: ux_common_telecom_settings_telecom_settings_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Telecom Settings
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelecomSettings'
          description: ''
    put:
      operationId: ux_common_telecom_settings_telecom_settings_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Telecom Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelecomSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TelecomSettings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TelecomSettings'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelecomSettings'
          description: ''
    delete:
      operationId: ux_common_telecom_settings_telecom_settings_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Telecom Settings
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/telecom_settings/telecom_settings/get_settings/:
    get:
      operationId: ux_common_telecom_settings_telecom_settings_get_settings_retrieve
      description: This endpoint is used to fetch all the telecom Settings in the
        current organization
      summary: Gets a list of telecom Settings
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Telecom Settings
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelecomSettings'
          description: ''
  /ux/common/telecom_settings/telecom_settings/update_settings/:
    post:
      operationId: ux_common_telecom_settings_telecom_settings_update_settings_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Telecom Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelecomSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TelecomSettings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TelecomSettings'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelecomSettings'
          description: ''
  /ux/common/trap/configuration/:
    get:
      operationId: ux_common_trap_configuration_list
      description: This endpoint is used to fetch all the trap configurations in the
        current organization
      summary: Gets a list of trap configurations
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Trap Configurations
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrapConfiguration'
          description: ''
    post:
      operationId: ux_common_trap_configuration_create
      description: This endpoint is used to save a new trap configuration for the
        current organization
      summary: Creates a new trap configuration
      tags:
      - Trap Configurations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateTrapConfigurationSample:
                value:
                  name: Link Down Trap
                  trap_id: '123456789012345'
                  description: Used to configure the link down trap
                  type: Link Down
                  trap_oid: 1.3.6.1.6.3.1.1.5.3
                  stat_name: ge-0/0/1
                  stat_dn: l_util
                  stat_unit: '%'
                  status: 1
                  severity: Critical
                  set_criteria:
                    varbind:
                    - key: 6
                      condition: in
                      value: Critical
                    - key: 7
                      condition: equal to
                      value: Down
                    condition: and
                  reset_criteria:
                    varbind:
                    - key: 6
                      condition: in
                      value: Info
                    - key: 7
                      condition: equal to
                      value: Up
                    condition: or
                  alarm_msg: Link Down
                  clear_msg: Link UP
                  applicable: All
                  applies_to: {}
                  applicable_filter: {}
                  organization: '123456789012345'
                summary: Create Trap Configuration Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/common/trap/configuration/{id}/:
    get:
      operationId: ux_common_trap_configuration_retrieve
      description: This endpoint is used to fetch a trap configuration details in
        the current organization
      summary: Gets a trap configuration with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Trap Configurations
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrapConfiguration'
          description: ''
    put:
      operationId: ux_common_trap_configuration_update
      description: This endpoint is used to edit an existing trap configuration for
        the current organization
      summary: Edits the trap configuration with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Trap Configurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrapConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrapConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrapConfiguration'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrapConfiguration'
          description: ''
    delete:
      operationId: ux_common_trap_configuration_destroy
      description: This endpoint is used to delete an existing trap configuration
        for the current organization
      summary: Deletes the trap configuration with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Trap Configurations
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/trap/configuration/msg_options/:
    get:
      operationId: ux_common_trap_configuration_msg_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Trap Configurations
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrapConfiguration'
          description: ''
  /ux/common/trap/configuration/multidelete/:
    post:
      operationId: ux_common_trap_configuration_multidelete_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Trap Configurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrapConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrapConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrapConfiguration'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrapConfiguration'
          description: ''
  /ux/common/trap/configuration/options/:
    get:
      operationId: ux_common_trap_configuration_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Trap Configurations
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrapConfiguration'
          description: ''
  /ux/common/trap/configuration/trap_msgs/:
    get:
      operationId: ux_common_trap_configuration_trap_msgs_retrieve
      description: This endpoint is used to fetch all the traps received on the agents
        for current organization
      summary: Gets a list of trap messages
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Trap Configurations
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrapConfiguration'
          description: ''
  /ux/common/user/profile/:
    get:
      operationId: ux_common_user_profile_retrieve
      description: This endpoint is used to fetch all the users in the current organization
        (works based on token used to authorize)
      summary: Gets a list of user profiles
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - User Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
    post:
      operationId: ux_common_user_profile_create
      description: This endpoint is used to save a new user for the current organization
      summary: 'Creates a new user '
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateUserSample:
                value:
                  email: test@everest.com
                  name: Test
                  password: ZDk5NjMwYmNjNzA1ODYzOWU3ZTgwZGYyMzlmMzhhMzI6OlUyRnNkR1ZrWDEvc0Jlb1BwcVYxcGViUWlucHFDTG1DdUlUanVMYWtzb1U9
                  confirm_password: ZDk5NjMwYmNjNzA1ODYzOWU3ZTgwZGYyMzlmMzhhMzI6OlUyRnNkR1ZrWDEvTUJhSkp2bENBQWlKdHBUOHVQY1ErdmZ6dnRhMkowMDg9
                  landline: 0801212121
                  timezone: time zone 1
                  phone: '99999999'
                  dashboard: '1'
                  role: ''
                  is_active: true
                  organization_role: Manager
                  first_name: Test
                  username: test@everest.com
                summary: Create User Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                status: success
                user_id: 20
                message: user created
              examples:
                ResponseSample:
                  value:
                    status: success
                    user_id: 20
                    message: user created
                  summary: Response Sample
          description: ''
  /ux/common/user/profile/{id}/:
    get:
      operationId: ux_common_user_profile_retrieve_2
      description: This endpoint is used to fetch a user in the current organization
      summary: Gets a user profile with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - User Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    put:
      operationId: ux_common_user_profile_update
      description: This endpoint is used to edit an existing user for the current
        organization
      summary: Edits the user with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    delete:
      operationId: ux_common_user_profile_destroy
      description: This endpoint is used to delete an existing user for the current
        organization
      summary: Deletes the user with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - User Profile
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/user/profile/active_users/:
    post:
      operationId: ux_common_user_profile_active_users_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/activeuser_list/:
    get:
      operationId: ux_common_user_profile_activeuser_list_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/approval_status/:
    post:
      operationId: ux_common_user_profile_approval_status_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/asset-lifecycle/:
    get:
      operationId: ux_common_user_profile_asset_lifecycle_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/download_csv/:
    get:
      operationId: ux_common_user_profile_download_csv_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/get_user_clocks_data/:
    get:
      operationId: ux_common_user_profile_get_user_clocks_data_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/get_user_clocks_status/:
    get:
      operationId: ux_common_user_profile_get_user_clocks_status_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/getmyprofile/:
    get:
      operationId: ux_common_user_profile_getmyprofile_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/logout/:
    post:
      operationId: ux_common_user_profile_logout_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/multi-delete-user/:
    post:
      operationId: ux_common_user_profile_multi_delete_user_create
      description: This endpoint is used to delete multiple existing user for the
        current organization
      summary: Deletes multiple user with given id
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/myprofile/:
    post:
      operationId: ux_common_user_profile_myprofile_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/options/:
    get:
      operationId: ux_common_user_profile_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/preference/:
    post:
      operationId: ux_common_user_profile_preference_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/retrieve-page-config/:
    get:
      operationId: ux_common_user_profile_retrieve_page_config_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/save-page-config/:
    post:
      operationId: ux_common_user_profile_save_page_config_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/subordinate_users_clocks_data/:
    get:
      operationId: ux_common_user_profile_subordinate_users_clocks_data_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/update_csv/:
    post:
      operationId: ux_common_user_profile_update_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/updateactiveusers/:
    post:
      operationId: ux_common_user_profile_updateactiveusers_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/upload_csv/:
    post:
      operationId: ux_common_user_profile_upload_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/user_clocks_data/:
    post:
      operationId: ux_common_user_profile_user_clocks_data_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/user_invite/:
    post:
      operationId: ux_common_user_profile_user_invite_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/user/profile/validate_csv/:
    post:
      operationId: ux_common_user_profile_validate_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /ux/common/vendor/vendor/:
    get:
      operationId: ux_common_vendor_vendor_list
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Vendor Managemment
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vendor'
          description: ''
    post:
      operationId: ux_common_vendor_vendor_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Vendor Managemment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vendor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vendor'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
          description: ''
  /ux/common/vendor/vendor/{id}/:
    get:
      operationId: ux_common_vendor_vendor_retrieve
      description: This endpoint is used to fetch a vendor details in the current
        organization
      summary: Gets a vendor with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Vendor Managemment
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
          description: ''
    put:
      operationId: ux_common_vendor_vendor_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Vendor Managemment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vendor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vendor'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
          description: ''
    delete:
      operationId: ux_common_vendor_vendor_destroy
      description: This endpoint is used to delete an existing vendor for the current
        organization
      summary: Deletes the vendor with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Vendor Managemment
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/common/vendor/vendor/options/:
    get:
      operationId: ux_common_vendor_vendor_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Vendor Managemment
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
          description: ''
  /ux/ims/association_events/association_events/:
    get:
      operationId: ux_ims_association_events_association_events_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Association Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_ims_association_events_association_events_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Association Events
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/ims/association_events/association_events/{id}/:
    get:
      operationId: ux_ims_association_events_association_events_retrieve_2
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Association Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_ims_association_events_association_events_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Association Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_ims_association_events_association_events_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Association Events
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/ims/association_events/association_events/associated-event-details/:
    get:
      operationId: ux_ims_association_events_association_events_associated_event_details_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Association Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/ims/association_events/association_events/association-versions/:
    get:
      operationId: ux_ims_association_events_association_events_association_versions_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Association Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/ims/association_events/association_events/save-topology/:
    post:
      operationId: ux_ims_association_events_association_events_save_topology_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Association Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/ims/association_events/association_events/validate-topology/:
    post:
      operationId: ux_ims_association_events_association_events_validate_topology_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Association Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/ims/device-template/:
    get:
      operationId: ux_ims_device_template_list
      description: This endpoint is used to fetch all the device_template in the current
        organization
      summary: Gets a list of device_template
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Device Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceTemplate'
          description: ''
    post:
      operationId: ux_ims_device_template_create
      description: This endpoint is used to save a new device_template for the current
        organization
      summary: Creates a new device_template
      tags:
      - Device Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/ims/device-template/{id}/:
    get:
      operationId: ux_ims_device_template_retrieve
      description: This endpoint is used to fetch a device_template in the current
        organization
      summary: Gets a device_template details with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Device Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: ''
    put:
      operationId: ux_ims_device_template_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Device Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: ''
    delete:
      operationId: ux_ims_device_template_destroy
      description: This endpoint is used to delete an existing device_template for
        the current organization
      summary: Deletes the device_template with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Device Template
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/ims/device-template/create-templates/:
    post:
      operationId: ux_ims_device_template_create_templates_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Device Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: ''
  /ux/ims/device-template/csv_cols/:
    post:
      operationId: ux_ims_device_template_csv_cols_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Device Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: ''
  /ux/ims/device-template/download_csv/:
    get:
      operationId: ux_ims_device_template_download_csv_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Device Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: ''
  /ux/ims/device-template/export-import-options/:
    get:
      operationId: ux_ims_device_template_export_import_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Device Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: ''
  /ux/ims/device-template/import-stats-json/:
    post:
      operationId: ux_ims_device_template_import_stats_json_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Device Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: ''
  /ux/ims/device-template/multidelete/:
    post:
      operationId: ux_ims_device_template_multidelete_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Device Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: ''
  /ux/ims/device-template/options/:
    get:
      operationId: ux_ims_device_template_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Device Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: ''
  /ux/ims/device-template/res-config-options/:
    get:
      operationId: ux_ims_device_template_res_config_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Device Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: ''
  /ux/ims/device-template/sys-object-resync/:
    post:
      operationId: ux_ims_device_template_sys_object_resync_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Device Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: ''
  /ux/ims/device-template/upload-csv/:
    post:
      operationId: ux_ims_device_template_upload_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Device Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: ''
  /ux/ims/device-template/validate-stats-json/:
    post:
      operationId: ux_ims_device_template_validate_stats_json_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Device Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: ''
  /ux/ims/device-template/verify-oid-exists/:
    get:
      operationId: ux_ims_device_template_verify_oid_exists_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Device Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: ''
  /ux/ims/device-template/verify-sysobjectid-asset-exists/:
    get:
      operationId: ux_ims_device_template_verify_sysobjectid_asset_exists_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Device Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTemplate'
          description: ''
  /ux/ims/discovery/profile/:
    get:
      operationId: ux_ims_discovery_profile_retrieve
      description: This endpoint is used to fetch all the discovery configurations
        in the current organization (works based on token used to authorize)
      summary: Gets a list of discovery configurations
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Discovery Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
    post:
      operationId: ux_ims_discovery_profile_create
      description: This endpoint is used to save a new discovery configuration for
        the current organization
      summary: 'Creates a new discovery configuration '
      tags:
      - Discovery Configuration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateDiscoveryConfigurationSample:
                value:
                  organization: '532475354328'
                  agent_id: xxxxxxxxxxxxxx
                  job_id: '2222222222'
                  host: 192.168.50.1/24
                  label: Auto_192.158.50.*
                  protocol:
                  - snmp
                  - ping
                  params:
                    filter_by_ping: 1
                    ping_monitor: 1
                    snmp_monitor: 1
                    exclude_ip_address: []
                  credentials: []
                  creation_time: now
                  created_by: admin
                  schedule:
                    period: Daily
                    hour: '00'
                    min: '00'
                    unit: Days
                    days: '0'
                summary: Create Discovery Configuration Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                status: success
                job_id: 20
                message: discovery configuration created
              examples:
                ResponseSample:
                  value:
                    status: success
                    job_id: 20
                    message: discovery configuration created
                  summary: Response Sample
          description: ''
  /ux/ims/discovery/profile/{id}/:
    get:
      operationId: ux_ims_discovery_profile_retrieve_2
      description: This endpoint is used to fetch a discovery configuration in the
        current organization
      summary: Gets a discovery configuration with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Discovery Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryConfiguration'
          description: ''
    put:
      operationId: ux_ims_discovery_profile_update
      description: This endpoint is used to edit an existing discovery configuration
        for the current organization
      summary: Edits the discovery configuration with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Discovery Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoveryConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscoveryConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscoveryConfiguration'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryConfiguration'
          description: ''
    delete:
      operationId: ux_ims_discovery_profile_destroy
      description: This endpoint is used to delete an existing discovery configuration
        for the current organization
      summary: Deletes the discovery configuration with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Discovery Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/ims/discovery/profile/audit/:
    get:
      operationId: ux_ims_discovery_profile_audit_retrieve
      description: This endpoint is used to get the audit for the given discovery
        job id
      summary: Get the audit for the discovery configuration
      tags:
      - Discovery Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryConfiguration'
          description: ''
  /ux/ims/discovery/profile/details/:
    get:
      operationId: ux_ims_discovery_profile_details_retrieve
      description: This endpoint is used to get the detailed configuration of the
        discovery job id provided
      summary: Get the detailed discovery configuration
      tags:
      - Discovery Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryConfiguration'
          description: ''
  /ux/ims/discovery/profile/do-rescan/:
    post:
      operationId: ux_ims_discovery_profile_do_rescan_create
      description: This endpoint is used to get all the iterations for the given discovery
        job id
      summary: Get the iterations for the discovery configuration
      tags:
      - Discovery Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoveryConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscoveryConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscoveryConfiguration'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryConfiguration'
          description: ''
  /ux/ims/discovery/profile/download_csv/:
    get:
      operationId: ux_ims_discovery_profile_download_csv_retrieve
      description: API endpoint that allows discovery configurations to be viewed
        or edited.
      tags:
      - Discovery Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryConfiguration'
          description: ''
  /ux/ims/discovery/profile/get-custom-scanner-fields/:
    post:
      operationId: ux_ims_discovery_profile_get_custom_scanner_fields_create
      description: This endpoint is used to fetch a custom scanning mechanism List
        with the options in the current organization
      summary: Gets a scanning mechanism List with the given id
      tags:
      - Discovery Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoveryConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscoveryConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscoveryConfiguration'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryConfiguration'
          description: ''
  /ux/ims/discovery/profile/iteration-list/:
    get:
      operationId: ux_ims_discovery_profile_iteration_list_retrieve
      description: This endpoint is used to get all the iterations for the given discovery
        job id
      summary: Get the iterations for the discovery configuration
      tags:
      - Discovery Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryConfiguration'
          description: ''
  /ux/ims/discovery/profile/multidelete/:
    post:
      operationId: ux_ims_discovery_profile_multidelete_create
      description: API endpoint that allows discovery configurations to be viewed
        or edited.
      tags:
      - Discovery Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoveryConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscoveryConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscoveryConfiguration'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryConfiguration'
          description: ''
  /ux/ims/discovery/profile/options/:
    get:
      operationId: ux_ims_discovery_profile_options_retrieve
      description: This endpoint is used to get the general options for dropdowns
        and UI elements
      summary: Get the discovery dropdown and config options
      tags:
      - Discovery Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryConfiguration'
          description: ''
  /ux/ims/discovery/profile/validate_csv/:
    post:
      operationId: ux_ims_discovery_profile_validate_csv_create
      description: API endpoint that allows discovery configurations to be viewed
        or edited.
      tags:
      - Discovery Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoveryConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscoveryConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscoveryConfiguration'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryConfiguration'
          description: ''
  /ux/ims/jobs/profile/:
    get:
      operationId: ux_ims_jobs_profile_retrieve
      description: This endpoint is used to fetch all the jobs in the current organization
      summary: Gets a list of Jobs
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
    post:
      operationId: ux_ims_jobs_profile_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobConfig'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobConfig'
          description: ''
  /ux/ims/jobs/profile/{id}/:
    get:
      operationId: ux_ims_jobs_profile_retrieve_2
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobConfig'
          description: ''
    put:
      operationId: ux_ims_jobs_profile_update
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobConfig'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobConfig'
          description: ''
    delete:
      operationId: ux_ims_jobs_profile_destroy
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/ims/mib-explorer/:
    get:
      operationId: ux_ims_mib_explorer_list
      description: This endpoint is used to fetch all the mib_explorer in the current
        organization
      summary: Gets a list of mib_explorer
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - MIB Explorer
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MibExplorer'
          description: ''
    post:
      operationId: ux_ims_mib_explorer_create
      description: This endpoint is used to save a new mib_explorer for the current
        organization
      summary: Creates a new mib_explorer
      tags:
      - MIB Explorer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/ims/mib-explorer/{id}/:
    get:
      operationId: ux_ims_mib_explorer_retrieve
      description: API endpoint that allows users to add or delete MIB files.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - MIB Explorer
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MibExplorer'
          description: ''
    put:
      operationId: ux_ims_mib_explorer_update
      description: API endpoint that allows users to add or delete MIB files.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - MIB Explorer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MibExplorer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MibExplorer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MibExplorer'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MibExplorer'
          description: ''
    delete:
      operationId: ux_ims_mib_explorer_destroy
      description: This endpoint is used to delete an existing mib_explorer for the
        current organization
      summary: Deletes the mib_explorer with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - MIB Explorer
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/ims/mib-explorer/multidelete/:
    post:
      operationId: ux_ims_mib_explorer_multidelete_create
      description: API endpoint that allows users to add or delete MIB files.
      tags:
      - MIB Explorer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MibExplorer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MibExplorer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MibExplorer'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MibExplorer'
          description: ''
  /ux/ims/mib-explorer/options/:
    get:
      operationId: ux_ims_mib_explorer_options_retrieve
      description: API endpoint that allows users to add or delete MIB files.
      tags:
      - MIB Explorer
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MibExplorer'
          description: ''
  /ux/ims/purge_configuration/:
    get:
      operationId: ux_ims_purge_configuration_list
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Purge'
          description: ''
    post:
      operationId: ux_ims_purge_configuration_create
      description: This endpoint is used to save a Purge configuration for the current
        organization
      summary: 'Creates a new purge Configuration '
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreatePurgeConfigurationSample:
                value:
                  rawdata: 31
                  hoursdata: 32
                  daydata: 366
                  events: 366
                  traps: 366
                  syslog: 366
                  download jobs: 92
                  upload job: 92
                  incident: 2000
                  problem: 2000
                  request: 2000
                  change: 2000
                  audits: 366
                  assets scan history: 92
                summary: Create Purge configuration sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/ims/purge_configuration/{id}/:
    get:
      operationId: ux_ims_purge_configuration_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purge'
          description: ''
    put:
      operationId: ux_ims_purge_configuration_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Purge'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Purge'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Purge'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purge'
          description: ''
    delete:
      operationId: ux_ims_purge_configuration_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/ims/purge_configuration/fetch-save-data/:
    get:
      operationId: ux_ims_purge_configuration_fetch_save_data_retrieve
      description: This endpoint is used to fetch purge Configuration details in the
        current organization
      summary: Gets a purge Configuration with the given config_id
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purge'
          description: ''
  /ux/ims/purge_configuration/options/:
    get:
      operationId: ux_ims_purge_configuration_options_retrieve
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purge'
          description: ''
  /ux/ims/seasonal_events/seasonal_events/:
    get:
      operationId: ux_ims_seasonal_events_seasonal_events_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Seasonal Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_ims_seasonal_events_seasonal_events_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Seasonal Events
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/ims/seasonal_events/seasonal_events/{id}/:
    get:
      operationId: ux_ims_seasonal_events_seasonal_events_retrieve_2
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Seasonal Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_ims_seasonal_events_seasonal_events_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Seasonal Events
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_ims_seasonal_events_seasonal_events_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Seasonal Events
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/ipam/ipam/:
    get:
      operationId: ux_ipam_ipam_retrieve
      description: This endpoint is used to fetch all the containers in the current
        organization
      summary: Gets a list of containers
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
    post:
      operationId: ux_ipam_ipam_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Container'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Container'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Container'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/{id}/:
    get:
      operationId: ux_ipam_ipam_retrieve_2
      description: This endpoint is used to fetch a container details in the current
        organization
      summary: Gets a container with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
    put:
      operationId: ux_ipam_ipam_update
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - IPAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Container'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Container'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Container'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
    delete:
      operationId: ux_ipam_ipam_destroy
      description: This endpoint is used to delete an existing container for the current
        organization
      summary: Deletes the Container with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/ipam/ipam/agent_list/:
    get:
      operationId: ux_ipam_ipam_agent_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/check_inventory_scan/:
    post:
      operationId: ux_ipam_ipam_check_inventory_scan_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Container'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Container'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Container'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/container-entities/:
    get:
      operationId: ux_ipam_ipam_container_entities_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/dependency-status/:
    get:
      operationId: ux_ipam_ipam_dependency_status_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/do_availability_scan/:
    post:
      operationId: ux_ipam_ipam_do_availability_scan_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Container'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Container'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Container'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/do_inventory_scan/:
    post:
      operationId: ux_ipam_ipam_do_inventory_scan_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Container'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Container'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Container'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/get-subnet-name/:
    get:
      operationId: ux_ipam_ipam_get_subnet_name_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/get_audit_options/:
    get:
      operationId: ux_ipam_ipam_get_audit_options_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/get_container_options/:
    get:
      operationId: ux_ipam_ipam_get_container_options_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/get_ip_addresses/:
    get:
      operationId: ux_ipam_ipam_get_ip_addresses_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/group-summary/:
    get:
      operationId: ux_ipam_ipam_group_summary_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/group-summary-widget-options/:
    get:
      operationId: ux_ipam_ipam_group_summary_widget_options_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/ip-container-details/:
    get:
      operationId: ux_ipam_ipam_ip_container_details_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/ip-details-grid-view/:
    get:
      operationId: ux_ipam_ipam_ip_details_grid_view_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/ip-reservation/:
    get:
      operationId: ux_ipam_ipam_ip_reservation_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/ip-reservation-config/:
    get:
      operationId: ux_ipam_ipam_ip_reservation_config_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/ip-reservation-list/:
    get:
      operationId: ux_ipam_ipam_ip_reservation_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/ipam_audit_list/:
    get:
      operationId: ux_ipam_ipam_ipam_audit_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/ipasset-interfaces-list/:
    get:
      operationId: ux_ipam_ipam_ipasset_interfaces_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/ipasset-menu-details/:
    get:
      operationId: ux_ipam_ipam_ipasset_menu_details_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/ipasset-port-details/:
    get:
      operationId: ux_ipam_ipam_ipasset_port_details_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/ipasset-portmapper-details/:
    get:
      operationId: ux_ipam_ipam_ipasset_portmapper_details_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/license-check/:
    get:
      operationId: ux_ipam_ipam_license_check_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/options/:
    get:
      operationId: ux_ipam_ipam_options_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/save-ip-allocated/:
    post:
      operationId: ux_ipam_ipam_save_ip_allocated_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Container'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Container'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Container'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/schedule/:
    post:
      operationId: ux_ipam_ipam_schedule_create
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Container'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Container'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Container'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/scheduler-data/:
    get:
      operationId: ux_ipam_ipam_scheduler_data_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/show-ip-reservation/:
    get:
      operationId: ux_ipam_ipam_show_ip_reservation_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/subnet_agent_list/:
    get:
      operationId: ux_ipam_ipam_subnet_agent_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/tree-data/:
    get:
      operationId: ux_ipam_ipam_tree_data_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/unmanaged_ip_list/:
    get:
      operationId: ux_ipam_ipam_unmanaged_ip_list_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/ipam/ipam/visibility-data/:
    get:
      operationId: ux_ipam_ipam_visibility_data_retrieve
      description: API endpoint that allows bot cmdb configurations to be viewed or
        edited.
      tags:
      - IPAM
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: ''
  /ux/log_agent/log_agent_config/:
    get:
      operationId: ux_log_agent_log_agent_config_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Agent Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_log_agent_log_agent_config_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Agent Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/log_agent/log_agent_config/{id}/:
    get:
      operationId: ux_log_agent_log_agent_config_retrieve_2
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Log Agent Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_log_agent_log_agent_config_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Log Agent Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_log_agent_log_agent_config_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Log Agent Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/log_agent/log_agent_config/get_log_agent_config/:
    get:
      operationId: ux_log_agent_log_agent_config_get_log_agent_config_retrieve
      description: This endpoint is used to fetch response of provided log agent configuration
      summary: gets a Log Agent Configuration
      tags:
      - Log Agent Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/log_agent/log_agent_config/get_options/:
    get:
      operationId: ux_log_agent_log_agent_config_get_options_retrieve
      description: This endpoint is used to fetch options of Log Agent Configuration
      summary: Gets a options response of Log Agent Configuration
      tags:
      - Log Agent Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/log_agent/log_agent_config/save_config/:
    post:
      operationId: ux_log_agent_log_agent_config_save_config_create
      description: This endpoint is used to save response of provided log agent configuration
      summary: saves a Log Agent Configuration
      tags:
      - Log Agent Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/log_agent/log_agent_config/upload_log_agent_config/:
    post:
      operationId: ux_log_agent_log_agent_config_upload_log_agent_config_create
      description: This endpoint is used to upload response of provided log agent
        configuration
      summary: uploads a Log Agent Configuration
      tags:
      - Log Agent Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/log_grok_pattern/log_grok_pattern_configuration/:
    get:
      operationId: ux_log_grok_pattern_log_grok_pattern_configuration_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Grok Pattern Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_log_grok_pattern_log_grok_pattern_configuration_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Grok Pattern Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/log_grok_pattern/log_grok_pattern_configuration/{id}/:
    get:
      operationId: ux_log_grok_pattern_log_grok_pattern_configuration_retrieve_2
      description: This endpoint is used to fetch a grok pattern details in the current
        organization
      summary: Gets a grok pattern with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Log Grok Pattern Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_log_grok_pattern_log_grok_pattern_configuration_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Log Grok Pattern Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_log_grok_pattern_log_grok_pattern_configuration_destroy
      description: This endpoint is used to delete an existing grok pattern for the
        current organization
      summary: Deletes the grok pattern with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Log Grok Pattern Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/log_grok_pattern/log_grok_pattern_configuration/get_grok_pattern_list/:
    get:
      operationId: ux_log_grok_pattern_log_grok_pattern_configuration_get_grok_pattern_list_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Grok Pattern Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/log_pipeline/log_pipeline_configuration/:
    get:
      operationId: ux_log_pipeline_log_pipeline_configuration_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Pipeline Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_log_pipeline_log_pipeline_configuration_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Pipeline Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/log_pipeline/log_pipeline_configuration/{id}/:
    get:
      operationId: ux_log_pipeline_log_pipeline_configuration_retrieve_2
      description: This endpoint is used to fetch a pipeline details in the current
        organization
      summary: Gets a pipeline with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Log Pipeline Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_log_pipeline_log_pipeline_configuration_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Log Pipeline Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_log_pipeline_log_pipeline_configuration_destroy
      description: This endpoint is used to delete an existing pipeline for the current
        organization
      summary: Deletes the pipeline with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Log Pipeline Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/log_pipeline/log_pipeline_configuration/get_asset_Preview_data/:
    get:
      operationId: ux_log_pipeline_log_pipeline_configuration_get_asset_Preview_data_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Pipeline Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/log_pipeline/log_pipeline_configuration/get_asset_filter_data/:
    get:
      operationId: ux_log_pipeline_log_pipeline_configuration_get_asset_filter_data_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Pipeline Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/log_pipeline/log_pipeline_configuration/get_child_pipeline_data/:
    get:
      operationId: ux_log_pipeline_log_pipeline_configuration_get_child_pipeline_data_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Pipeline Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/log_pipeline/log_pipeline_configuration/get_logstash_health/:
    get:
      operationId: ux_log_pipeline_log_pipeline_configuration_get_logstash_health_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Pipeline Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/log_pipeline/log_pipeline_configuration/get_options/:
    get:
      operationId: ux_log_pipeline_log_pipeline_configuration_get_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Pipeline Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/log_pipeline/log_pipeline_configuration/get_pipeline_list/:
    get:
      operationId: ux_log_pipeline_log_pipeline_configuration_get_pipeline_list_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Pipeline Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/log_pipeline/log_pipeline_configuration/grok_pattern/:
    get:
      operationId: ux_log_pipeline_log_pipeline_configuration_grok_pattern_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Pipeline Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/log_pipeline/log_pipeline_configuration/grok_response/:
    get:
      operationId: ux_log_pipeline_log_pipeline_configuration_grok_response_retrieve
      description: This endpoint is used to fetch grok response of provided grok pattern
      summary: Gets a grok response of grok pattern
      tags:
      - Log Pipeline Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/log_pipeline/log_pipeline_configuration/upload_pipeline/{id}/:
    get:
      operationId: ux_log_pipeline_log_pipeline_configuration_upload_pipeline_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Log Pipeline Configuration
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/logmanagement/log_integration/:
    get:
      operationId: ux_logmanagement_log_integration_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Integraion
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_logmanagement_log_integration_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Integraion
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/logmanagement/log_integration/{id}/:
    get:
      operationId: ux_logmanagement_log_integration_retrieve_2
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Log Integraion
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_logmanagement_log_integration_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Log Integraion
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_logmanagement_log_integration_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Log Integraion
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/logmanagement/log_integration/_url/:
    get:
      operationId: ux_logmanagement_log_integration__url_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Integraion
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/logmanagement/log_integration/cmdb_filter/:
    post:
      operationId: ux_logmanagement_log_integration_cmdb_filter_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Integraion
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/logmanagement/log_integration/export_data/:
    post:
      operationId: ux_logmanagement_log_integration_export_data_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Integraion
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/logmanagement/log_integration/get_data_view/:
    get:
      operationId: ux_logmanagement_log_integration_get_data_view_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Integraion
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/logmanagement/log_integration/get_export_configs/:
    get:
      operationId: ux_logmanagement_log_integration_get_export_configs_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Integraion
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/logmanagement/log_integration/get_log_columns/:
    get:
      operationId: ux_logmanagement_log_integration_get_log_columns_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Integraion
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/logmanagement/log_integration/get_log_columns_for_pipeline/:
    get:
      operationId: ux_logmanagement_log_integration_get_log_columns_for_pipeline_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Integraion
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/logmanagement/log_integration/get_log_filter_suggestions/:
    get:
      operationId: ux_logmanagement_log_integration_get_log_filter_suggestions_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Integraion
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/logmanagement/log_integration/get_log_filter_suggestions_for_pipeline/:
    get:
      operationId: ux_logmanagement_log_integration_get_log_filter_suggestions_for_pipeline_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Integraion
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/logmanagement/log_search/log_search/:
    get:
      operationId: ux_logmanagement_log_search_log_search_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Search
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_logmanagement_log_search_log_search_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Log Search
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/logmanagement/log_search/log_search/{id}/:
    get:
      operationId: ux_logmanagement_log_search_log_search_retrieve_2
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Log Search
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_logmanagement_log_search_log_search_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Log Search
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_logmanagement_log_search_log_search_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Log Search
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/logmanagement/log_search/log_search/logs/:
    post:
      operationId: ux_logmanagement_log_search_log_search_logs_create
      description: This endpoint is used to fetch logs of the particular device stored
        in elasticsearch
      summary: Gets a log details with the given IP
      tags:
      - Log Search
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/authentication_profile/:
    get:
      operationId: ux_nccm_authentication_profile_retrieve
      description: This endpoint is used to fetch all the authentication profile in
        the current organization
      summary: Gets a list of authentication profiles
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Authentication Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_nccm_authentication_profile_create
      description: This endpoint is used to save a new authentication profile for
        the current organization
      summary: Creates a new authentication profile
      tags:
      - Authentication Profile
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/nccm/authentication_profile/{id}/:
    get:
      operationId: ux_nccm_authentication_profile_retrieve_2
      description: This endpoint is used to fetch a authentication profiles in the
        current organization
      summary: Gets a authentication profile details with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Authentication Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_nccm_authentication_profile_update
      description: This endpoint is used to edit an existing authentication profile
        for the current organization
      summary: Edits the authentication profile with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Authentication Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_nccm_authentication_profile_destroy
      description: This endpoint is used to delete an existing authentication profile
        for the current organization
      summary: Deletes the authentication profile with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Authentication Profile
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/nccm/authentication_profile/bulk-opration/:
    post:
      operationId: ux_nccm_authentication_profile_bulk_opration_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Authentication Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/authentication_profile/detail-view/:
    get:
      operationId: ux_nccm_authentication_profile_detail_view_retrieve
      description: This endpoint is used to get the data for the users with device
        for Authentication profile.
      summary: Get the data for the users with device for the Authentication Profile.
      tags:
      - Authentication Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/authentication_profile/device-cred-details/:
    get:
      operationId: ux_nccm_authentication_profile_device_cred_details_retrieve
      description: 'This endpoint is used to get the default options for authentication
        profile '
      summary: Get the options for the Authentication Profile
      tags:
      - Authentication Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/authentication_profile/get-cvs-ips/:
    post:
      operationId: ux_nccm_authentication_profile_get_cvs_ips_create
      description: This endpoint is used to get the Ip address from csv.
      summary: Get the data for the Ip address from csv.
      tags:
      - Authentication Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/authentication_profile/multi-delete/:
    post:
      operationId: ux_nccm_authentication_profile_multi_delete_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Authentication Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/authentication_profile/options/:
    get:
      operationId: ux_nccm_authentication_profile_options_retrieve
      description: 'This endpoint is used to get the default options for authentication
        profile '
      summary: Get the options for the Authentication Profile
      tags:
      - Authentication Profile
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/cli_jobs/:
    get:
      operationId: ux_nccm_cli_jobs_list
      description: This endpoint is used to fetch all the CLi Job/Sessions in the
        current organization
      summary: Gets a list of CLI Jos/Sessions
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - CLI Download Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CliJobs'
          description: ''
    post:
      operationId: ux_nccm_cli_jobs_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - CLI Download Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CliJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CliJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CliJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CliJobs'
          description: ''
  /ux/nccm/cli_jobs/{id}/:
    get:
      operationId: ux_nccm_cli_jobs_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CLI Download Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CliJobs'
          description: ''
    put:
      operationId: ux_nccm_cli_jobs_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CLI Download Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CliJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CliJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CliJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CliJobs'
          description: ''
    delete:
      operationId: ux_nccm_cli_jobs_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - CLI Download Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/nccm/cli_jobs/approval-default-data/:
    get:
      operationId: ux_nccm_cli_jobs_approval_default_data_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - CLI Download Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CliJobs'
          description: ''
  /ux/nccm/cli_jobs/approve/:
    post:
      operationId: ux_nccm_cli_jobs_approve_create
      description: This endpoint is used to update the approval status of the CLI
        Job for the current organization
      summary: Update the CLI Job Approval Status
      tags:
      - CLI Download Jobs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CLIJobApprovalStatus:
                value:
                  job_id: CLIJOBxxxx
                  organization: 13113501882xxxxxxxxxx
                  approval_status: Approved/Rejected
                  approved_by: xyz@gmail.com
                summary: CLI Job Approval Status
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/nccm/cli_jobs/cli-file-remove/:
    get:
      operationId: ux_nccm_cli_jobs_cli_file_remove_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - CLI Download Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CliJobs'
          description: ''
  /ux/nccm/cli_jobs/cli-session/:
    get:
      operationId: ux_nccm_cli_jobs_cli_session_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - CLI Download Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CliJobs'
          description: ''
  /ux/nccm/cli_jobs/cli-url/:
    get:
      operationId: ux_nccm_cli_jobs_cli_url_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - CLI Download Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CliJobs'
          description: ''
  /ux/nccm/cli_jobs/cli_kill_session/:
    get:
      operationId: ux_nccm_cli_jobs_cli_kill_session_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - CLI Download Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CliJobs'
          description: ''
  /ux/nccm/cli_jobs/download-clisession-audit/:
    get:
      operationId: ux_nccm_cli_jobs_download_clisession_audit_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - CLI Download Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CliJobs'
          description: ''
  /ux/nccm/cli_jobs/kill-active-sessions/:
    post:
      operationId: ux_nccm_cli_jobs_kill_active_sessions_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - CLI Download Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CliJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CliJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CliJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CliJobs'
          description: ''
  /ux/nccm/cli_jobs/options/:
    get:
      operationId: ux_nccm_cli_jobs_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - CLI Download Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CliJobs'
          description: ''
  /ux/nccm/cli_jobs/page-config/:
    get:
      operationId: ux_nccm_cli_jobs_page_config_retrieve
      description: This endpoint is get the page configuration for the cli job grid
        for current organization
      summary: 'Page configuration for the cli job grid '
      tags:
      - CLI Download Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CliJobs'
          description: ''
  /ux/nccm/cli_jobs/tail-audits/:
    get:
      operationId: ux_nccm_cli_jobs_tail_audits_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - CLI Download Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CliJobs'
          description: ''
  /ux/nccm/configuration-profile/:
    get:
      operationId: ux_nccm_configuration_profile_list
      description: This endpoint is used to fetch all the configuration profiles in
        the current organization
      summary: Gets a list of configuration profile
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Configuration Profiles
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigurationProfiles'
          description: ''
    post:
      operationId: ux_nccm_configuration_profile_create
      description: This endpoint is used to save a new configuration profile for the
        current organization
      summary: Creates a new configuration profile
      tags:
      - Configuration Profiles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateConfigurationProfileSample:
                value:
                  profile_name: ''
                  description: ''
                  vendor: ''
                  os_type: ''
                  series: ''
                  connection: ''
                  config_download: ''
                  config_upload: ''
                  os_download: ''
                  os_upload: ''
                  operational_data: ''
                  other_configuration: ''
                  syslog: ''
                  comment: ''
                  is_deleted: ''
                summary: Create configuration profile Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/nccm/configuration-profile/{id}/:
    get:
      operationId: ux_nccm_configuration_profile_retrieve
      description: This endpoint is used to fetch a configuration profiles in the
        current organization
      summary: Gets a configuration profile details with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Profiles
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfiles'
          description: ''
    put:
      operationId: ux_nccm_configuration_profile_update
      description: This endpoint is used to edit an existing configuration profile
        for the current organization
      summary: Edits the configuration profile with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfiles'
          description: ''
    delete:
      operationId: ux_nccm_configuration_profile_destroy
      description: This endpoint is used to delete an existing configuration profile
        for the current organization
      summary: Deletes the configuration profile with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Profiles
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/nccm/configuration-profile/check-profile-config/:
    get:
      operationId: ux_nccm_configuration_profile_check_profile_config_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Profiles
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfiles'
          description: ''
  /ux/nccm/configuration-profile/create-csv/:
    post:
      operationId: ux_nccm_configuration_profile_create_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfiles'
          description: ''
  /ux/nccm/configuration-profile/csv_cols/:
    post:
      operationId: ux_nccm_configuration_profile_csv_cols_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfiles'
          description: ''
  /ux/nccm/configuration-profile/download_csv/:
    get:
      operationId: ux_nccm_configuration_profile_download_csv_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Profiles
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfiles'
          description: ''
  /ux/nccm/configuration-profile/mark-as-reviewed/:
    post:
      operationId: ux_nccm_configuration_profile_mark_as_reviewed_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfiles'
          description: ''
  /ux/nccm/configuration-profile/multidelete/:
    post:
      operationId: ux_nccm_configuration_profile_multidelete_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfiles'
          description: ''
  /ux/nccm/configuration-profile/options/:
    get:
      operationId: ux_nccm_configuration_profile_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Profiles
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfiles'
          description: ''
  /ux/nccm/configuration-profile/profile-diffs/:
    get:
      operationId: ux_nccm_configuration_profile_profile_diffs_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Profiles
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfiles'
          description: ''
  /ux/nccm/configuration-profile/profile-review/:
    post:
      operationId: ux_nccm_configuration_profile_profile_review_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfiles'
          description: ''
  /ux/nccm/configuration-profile/reviewable-ips/:
    get:
      operationId: ux_nccm_configuration_profile_reviewable_ips_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Profiles
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfiles'
          description: ''
  /ux/nccm/configuration-profile/sync-status/:
    get:
      operationId: ux_nccm_configuration_profile_sync_status_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Profiles
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfiles'
          description: ''
  /ux/nccm/configuration-profile/synch-all-profile/:
    post:
      operationId: ux_nccm_configuration_profile_synch_all_profile_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfiles'
          description: ''
  /ux/nccm/configuration-profile/trigger-agent-sync-check/:
    post:
      operationId: ux_nccm_configuration_profile_trigger_agent_sync_check_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfiles'
          description: ''
  /ux/nccm/configuration-profile/upload-csv/:
    post:
      operationId: ux_nccm_configuration_profile_upload_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationProfiles'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfiles'
          description: ''
  /ux/nccm/configuration_policies/:
    get:
      operationId: ux_nccm_configuration_policies_list
      description: This endpoint is used to fetch all the configuration pplicies in
        the current organization
      summary: Gets a list of configuration policies
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Configuration Policies
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigurationPolicies'
          description: ''
    post:
      operationId: ux_nccm_configuration_policies_create
      description: This endpoint is used to save a new configuration policies for
        the current organization
      summary: Creates a new configuration policies
      tags:
      - Configuration Policies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/nccm/configuration_policies/{id}/:
    get:
      operationId: ux_nccm_configuration_policies_retrieve
      description: This endpoint is used to fetch a configuration policies current
        organization
      summary: Gets a configuration policy details with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Policies
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationPolicies'
          description: ''
    put:
      operationId: ux_nccm_configuration_policies_update
      description: This endpoint is used to edit an existing configuration policies
        for the current organization
      summary: Edits the configuration policies with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationPolicies'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationPolicies'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationPolicies'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationPolicies'
          description: ''
    delete:
      operationId: ux_nccm_configuration_policies_destroy
      description: This endpoint is used to delete an existing configuration policies
        for the current organization
      summary: Deletes the configuration policies with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Policies
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/nccm/configuration_policies/bulk-opration/:
    post:
      operationId: ux_nccm_configuration_policies_bulk_opration_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationPolicies'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationPolicies'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationPolicies'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationPolicies'
          description: ''
  /ux/nccm/configuration_policies/multi-delete/:
    post:
      operationId: ux_nccm_configuration_policies_multi_delete_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationPolicies'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationPolicies'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationPolicies'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationPolicies'
          description: ''
  /ux/nccm/configuration_policies/options/:
    get:
      operationId: ux_nccm_configuration_policies_options_retrieve
      description: This endpoint is used to get the default options for jobs Account
        Audit
      summary: Get the options for the Configuration Polocies
      tags:
      - Configuration Policies
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationPolicies'
          description: ''
  /ux/nccm/configuration_rules/:
    get:
      operationId: ux_nccm_configuration_rules_list
      description: This endpoint is used to fetch all the configuration Rules in the
        current organization
      summary: Gets a list of configuration Rules
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Configuration Rules
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigurationRule'
          description: ''
    post:
      operationId: ux_nccm_configuration_rules_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Rules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationRule'
          description: ''
  /ux/nccm/configuration_rules/{id}/:
    get:
      operationId: ux_nccm_configuration_rules_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Rules
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationRule'
          description: ''
    put:
      operationId: ux_nccm_configuration_rules_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Rules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationRule'
          description: ''
    delete:
      operationId: ux_nccm_configuration_rules_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Rules
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/nccm/configuration_rules/import-txt/:
    post:
      operationId: ux_nccm_configuration_rules_import_txt_create
      description: This endpoint is to Import Text From OLD NCCM for Configuration
        Rule.
      summary: Return JSON for Configuration Rule
      tags:
      - Configuration Rules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationRule'
          description: ''
  /ux/nccm/configuration_rules/is_disabled/:
    post:
      operationId: ux_nccm_configuration_rules_is_disabled_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Rules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationRule'
          description: ''
  /ux/nccm/configuration_rules/is_enabled/:
    post:
      operationId: ux_nccm_configuration_rules_is_enabled_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Rules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationRule'
          description: ''
  /ux/nccm/configuration_rules/multidelete/:
    post:
      operationId: ux_nccm_configuration_rules_multidelete_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Rules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationRule'
          description: ''
  /ux/nccm/configuration_rules/options/:
    get:
      operationId: ux_nccm_configuration_rules_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Rules
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationRule'
          description: ''
  /ux/nccm/configuration_rules/save-txt/:
    post:
      operationId: ux_nccm_configuration_rules_save_txt_create
      description: Save Imported Text From OLD NCCM for Configuration Rule.
      summary: Return JSON for Configuration Rule
      tags:
      - Configuration Rules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationRule'
          description: ''
  /ux/nccm/configuration_rules/validate-json/:
    post:
      operationId: ux_nccm_configuration_rules_validate_json_create
      description: This endpoint is to Import Json for Configuration Rule.
      summary: Return JSON for Configuration Rule
      tags:
      - Configuration Rules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationRule'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationRule'
          description: ''
  /ux/nccm/configuration_search/:
    get:
      operationId: ux_nccm_configuration_search_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Search
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/configuration_search/{id}/:
    get:
      operationId: ux_nccm_configuration_search_retrieve_2
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Search
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/configuration_search/configuration-search-result/:
    get:
      operationId: ux_nccm_configuration_search_configuration_search_result_retrieve
      description: This endpoint is used to fetch all the configuration search in
        the current organization
      summary: Gets a list of configuration search
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Configuration Search
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/configuration_search/filter/:
    get:
      operationId: ux_nccm_configuration_search_filter_retrieve
      description: This endpoint is used to fetch all the configuration search in
        the current organization
      summary: Gets a list of configuration search data
      tags:
      - Configuration Search
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/configuration_search/options/:
    get:
      operationId: ux_nccm_configuration_search_options_retrieve
      description: This endpoint is used to get the default options for Download Jobs
      summary: Get the options for the Download Jobs
      tags:
      - Configuration Search
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/configuration_template/:
    get:
      operationId: ux_nccm_configuration_template_list
      description: This endpoint is used to fetch all the configuration template in
        the current organization
      summary: Gets a list of configuration template
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Configuration Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigurationTemplates'
          description: ''
    post:
      operationId: ux_nccm_configuration_template_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTemplates'
          description: ''
  /ux/nccm/configuration_template/{id}/:
    get:
      operationId: ux_nccm_configuration_template_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTemplates'
          description: ''
    put:
      operationId: ux_nccm_configuration_template_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTemplates'
          description: ''
    delete:
      operationId: ux_nccm_configuration_template_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Template
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/nccm/configuration_template/create-csv/:
    post:
      operationId: ux_nccm_configuration_template_create_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTemplates'
          description: ''
  /ux/nccm/configuration_template/csv_cols/:
    post:
      operationId: ux_nccm_configuration_template_csv_cols_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTemplates'
          description: ''
  /ux/nccm/configuration_template/download_csv/:
    get:
      operationId: ux_nccm_configuration_template_download_csv_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTemplates'
          description: ''
  /ux/nccm/configuration_template/download_xls/:
    get:
      operationId: ux_nccm_configuration_template_download_xls_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTemplates'
          description: ''
  /ux/nccm/configuration_template/file_details/:
    get:
      operationId: ux_nccm_configuration_template_file_details_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTemplates'
          description: ''
  /ux/nccm/configuration_template/is_disabled/:
    post:
      operationId: ux_nccm_configuration_template_is_disabled_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTemplates'
          description: ''
  /ux/nccm/configuration_template/is_enabled/:
    post:
      operationId: ux_nccm_configuration_template_is_enabled_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTemplates'
          description: ''
  /ux/nccm/configuration_template/multidelete/:
    post:
      operationId: ux_nccm_configuration_template_multidelete_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTemplates'
          description: ''
  /ux/nccm/configuration_template/options/:
    get:
      operationId: ux_nccm_configuration_template_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTemplates'
          description: ''
  /ux/nccm/configuration_template/production_ready/:
    post:
      operationId: ux_nccm_configuration_template_production_ready_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTemplates'
          description: ''
  /ux/nccm/configuration_template/template_deleted_count/:
    get:
      operationId: ux_nccm_configuration_template_template_deleted_count_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTemplates'
          description: ''
  /ux/nccm/configuration_template/toggle-template-quickadd/:
    post:
      operationId: ux_nccm_configuration_template_toggle_template_quickadd_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTemplates'
          description: ''
  /ux/nccm/configuration_template/upload-csv/:
    post:
      operationId: ux_nccm_configuration_template_upload_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTemplates'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTemplates'
          description: ''
  /ux/nccm/configuration_trigger/:
    get:
      operationId: ux_nccm_configuration_trigger_list
      description: This endpoint is used to fetch all the configuration trigger in
        the current organization
      summary: Gets a list of configuration trigger
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Configuration Trigger
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigurationTrigger'
          description: ''
    post:
      operationId: ux_nccm_configuration_trigger_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Trigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTrigger'
          description: ''
  /ux/nccm/configuration_trigger/{id}/:
    get:
      operationId: ux_nccm_configuration_trigger_retrieve
      description: This endpoint is used to delete an existing configuration trigger
        for the current organization
      summary: Retrive the configuration trigger with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Trigger
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTrigger'
          description: ''
    put:
      operationId: ux_nccm_configuration_trigger_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Trigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTrigger'
          description: ''
    delete:
      operationId: ux_nccm_configuration_trigger_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Trigger
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/nccm/configuration_trigger/add_trigger/:
    post:
      operationId: ux_nccm_configuration_trigger_add_trigger_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Trigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTrigger'
          description: ''
  /ux/nccm/configuration_trigger/download_csv/:
    get:
      operationId: ux_nccm_configuration_trigger_download_csv_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Trigger
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTrigger'
          description: ''
  /ux/nccm/configuration_trigger/multi-delete/:
    post:
      operationId: ux_nccm_configuration_trigger_multi_delete_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Trigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTrigger'
          description: ''
  /ux/nccm/configuration_trigger/review/:
    post:
      operationId: ux_nccm_configuration_trigger_review_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Trigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTrigger'
          description: ''
  /ux/nccm/configuration_trigger/save_csv_data/:
    post:
      operationId: ux_nccm_configuration_trigger_save_csv_data_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Trigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTrigger'
          description: ''
  /ux/nccm/configuration_trigger/saved_imported/:
    post:
      operationId: ux_nccm_configuration_trigger_saved_imported_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Trigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTrigger'
          description: ''
  /ux/nccm/configuration_trigger/validate_csv/:
    post:
      operationId: ux_nccm_configuration_trigger_validate_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Trigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfigurationTrigger'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationTrigger'
          description: ''
  /ux/nccm/jobs-account-audit/:
    get:
      operationId: ux_nccm_jobs_account_audit_list
      description: This endpoint is used to fetch all the aaa_audit data in the current
        organization
      summary: Gets a list of aaa_audit list
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Jobs Account Audit
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobAccountAudit'
          description: ''
    post:
      operationId: ux_nccm_jobs_account_audit_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Jobs Account Audit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobAccountAudit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobAccountAudit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobAccountAudit'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAccountAudit'
          description: ''
  /ux/nccm/jobs-account-audit/{id}/:
    get:
      operationId: ux_nccm_jobs_account_audit_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Jobs Account Audit
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAccountAudit'
          description: ''
    put:
      operationId: ux_nccm_jobs_account_audit_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Jobs Account Audit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobAccountAudit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobAccountAudit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobAccountAudit'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAccountAudit'
          description: ''
    delete:
      operationId: ux_nccm_jobs_account_audit_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Jobs Account Audit
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/nccm/jobs-account-audit/options/:
    get:
      operationId: ux_nccm_jobs_account_audit_options_retrieve
      description: This endpoint is used to get the default options for jobs Account
        Audit
      summary: Get the options for the jobs Account Audit
      tags:
      - Jobs Account Audit
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAccountAudit'
          description: ''
  /ux/nccm/manage_vulnerabilities/:
    get:
      operationId: ux_nccm_manage_vulnerabilities_retrieve
      description: This endpoint is used to fetch all the Vulnerablities in the current
        organization
      summary: Gets a list of Vulnerablities by vendor, OS Type, OS version
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Manage Vulnerabilities
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_nccm_manage_vulnerabilities_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Manage Vulnerabilities
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/nccm/manage_vulnerabilities/{id}/:
    get:
      operationId: ux_nccm_manage_vulnerabilities_retrieve_2
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Manage Vulnerabilities
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_nccm_manage_vulnerabilities_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Manage Vulnerabilities
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_nccm_manage_vulnerabilities_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Manage Vulnerabilities
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/nccm/manage_vulnerabilities/asset-va/:
    get:
      operationId: ux_nccm_manage_vulnerabilities_asset_va_retrieve
      description: This endpoint is used to fetch a Vulnerabilities of Device from
        asset view in current organization
      summary: Gets a Vulnerabilities of Asset
      tags:
      - Manage Vulnerabilities
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/manage_vulnerabilities/cve-va-all/:
    get:
      operationId: ux_nccm_manage_vulnerabilities_cve_va_all_retrieve
      description: This endpoint is used to fetch a Vulnerabilities Based on CVE in
        the current organization
      summary: Gets a Vulnerabilities Based on CVE
      tags:
      - Manage Vulnerabilities
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/manage_vulnerabilities/cve-va-summary/:
    get:
      operationId: ux_nccm_manage_vulnerabilities_cve_va_summary_retrieve
      description: This endpoint is used to fetch a Vulnerabilities summary of CVE
        OS Version  in the current organization
      summary: Gets a Vulnerabilities Summary of by CVE OS Version
      tags:
      - Manage Vulnerabilities
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/manage_vulnerabilities/dasboard-data/:
    get:
      operationId: ux_nccm_manage_vulnerabilities_dasboard_data_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Manage Vulnerabilities
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/manage_vulnerabilities/device-va/:
    get:
      operationId: ux_nccm_manage_vulnerabilities_device_va_retrieve
      description: This endpoint is used to fetch a Vulnerabilities of Device  in
        the current organization
      summary: Gets a Vulnerabilities of by Device
      tags:
      - Manage Vulnerabilities
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/manage_vulnerabilities/device-va-all/:
    get:
      operationId: ux_nccm_manage_vulnerabilities_device_va_all_retrieve
      description: This endpoint is used to fetch a Vulnerabilities of All Devices
        in the current organization
      summary: Gets a Vulnerabilities of All Devices
      tags:
      - Manage Vulnerabilities
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/manage_vulnerabilities/device-va-summary/:
    get:
      operationId: ux_nccm_manage_vulnerabilities_device_va_summary_retrieve
      description: This endpoint is used to fetch a Vulnerabilities summary of Device  in
        the current organization
      summary: Gets a Vulnerabilities Summary of by Device
      tags:
      - Manage Vulnerabilities
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/manage_vulnerabilities/os-cve-va/:
    get:
      operationId: ux_nccm_manage_vulnerabilities_os_cve_va_retrieve
      description: This endpoint is used to fetch a Vulnerabilities of by particular
        os version vendor  in the current organization
      summary: Gets a Vulnerabilities of by Vendor and os version
      tags:
      - Manage Vulnerabilities
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/manage_vulnerabilities/resolve-details/:
    get:
      operationId: ux_nccm_manage_vulnerabilities_resolve_details_retrieve
      description: This endpoint is used to fetch a resolve details in the current
        organization
      summary: Gets a Resolve Details
      tags:
      - Manage Vulnerabilities
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/manage_vulnerabilities/resolve-va/:
    get:
      operationId: ux_nccm_manage_vulnerabilities_resolve_va_retrieve
      description: This endpoint is used to resolve vulnerability in the current organization
      summary: Resolve Vulnerability
      tags:
      - Manage Vulnerabilities
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/manage_vulnerabilities/vendor-va/:
    get:
      operationId: ux_nccm_manage_vulnerabilities_vendor_va_retrieve
      description: This endpoint is used to fetch a Vulnerabilities of by Vendor in
        the current organization
      summary: Gets a Vulnerabilities of by Vendor
      tags:
      - Manage Vulnerabilities
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/manage_vulnerabilities/vendor-va-summary/:
    get:
      operationId: ux_nccm_manage_vulnerabilities_vendor_va_summary_retrieve
      description: This endpoint is used to fetch a Vulnerabilities summary of Vendor  in
        the current organization
      summary: Gets a Vulnerabilities Summary of by Vendor
      tags:
      - Manage Vulnerabilities
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/os-image/:
    get:
      operationId: ux_nccm_os_image_list
      description: This endpoint is used to fetch all the tags in the current organization
      summary: Gets a list of tags
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - OS Image Download
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OSImage'
          description: ''
    post:
      operationId: ux_nccm_os_image_create
      description: This endpoint is used to save a new configuration profile for the
        current organization
      summary: Creates a new configuration profile
      tags:
      - OS Image Download
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OSImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OSImage'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/{id}/:
    get:
      operationId: ux_nccm_os_image_retrieve
      description: This endpoint is used to fetch a global parameters in the current
        organization
      summary: Gets a global param with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - OS Image Download
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
    put:
      operationId: ux_nccm_os_image_update
      description: This endpoint is used to edit an existing tag for the current organization
      summary: Edits the tag with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - OS Image Download
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OSImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OSImage'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
    delete:
      operationId: ux_nccm_os_image_destroy
      description: This endpoint is used to delete an existing tag for the current
        organization
      summary: Deletes the tag with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - OS Image Download
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/nccm/os-image/download-os-image/:
    post:
      operationId: ux_nccm_os_image_download_os_image_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - OS Image Download
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OSImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OSImage'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/file-upload-status/:
    post:
      operationId: ux_nccm_os_image_file_upload_status_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - OS Image Download
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OSImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OSImage'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/get-allowed-file-types/:
    get:
      operationId: ux_nccm_os_image_get_allowed_file_types_retrieve
      description: This endpoint is used to get the file types that is allowed to
        generate the hash key
      summary: Get the file types to generagte hash key
      tags:
      - OS Image Download
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/multidelete/:
    post:
      operationId: ux_nccm_os_image_multidelete_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - OS Image Download
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OSImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OSImage'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/options/:
    get:
      operationId: ux_nccm_os_image_options_retrieve
      description: This endpoint is used to get the default options for Download Jobs
      summary: Get the options for the Download Jobs
      tags:
      - OS Image Download
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/os-images-objs/:
    get:
      operationId: ux_nccm_os_image_os_images_objs_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - OS Image Download
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/os-images-status/:
    get:
      operationId: ux_nccm_os_image_os_images_status_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - OS Image Download
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/os-img-recve/:
    post:
      operationId: ux_nccm_os_image_os_img_recve_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - OS Image Download
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OSImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OSImage'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/os-job-audit/:
    get:
      operationId: ux_nccm_os_image_os_job_audit_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - OS Image Download
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/os-schedule-delete/:
    get:
      operationId: ux_nccm_os_image_os_schedule_delete_retrieve
      description: This endpoint is used to delete a os schedule in the current organization
      summary: Delete os schedule the given id
      tags:
      - OS Image Download
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/os-schedule-detail/:
    get:
      operationId: ux_nccm_os_image_os_schedule_detail_retrieve
      description: This endpoint is used to fetch a os schedule in the current organization
      summary: Gets a os schedule the given id
      tags:
      - OS Image Download
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/os-schedule-details/:
    get:
      operationId: ux_nccm_os_image_os_schedule_details_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - OS Image Download
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/os-schedule-options/:
    get:
      operationId: ux_nccm_os_image_os_schedule_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - OS Image Download
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/os-schedule-search-options/:
    get:
      operationId: ux_nccm_os_image_os_schedule_search_options_retrieve
      description: This endpoint is used to Search options os schedule in the current
        organization
      summary: Search Options os schedule the given ids
      tags:
      - OS Image Download
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/os-schedule-toggle-state/:
    get:
      operationId: ux_nccm_os_image_os_schedule_toggle_state_retrieve
      description: This endpoint is used to Enable/disable os schedule in the current
        organization
      summary: Enable/disable os schedule the given ids
      tags:
      - OS Image Download
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/page-config/:
    get:
      operationId: ux_nccm_os_image_page_config_retrieve
      description: This endpoint is get the page configuration for Column Selection
        OS Image grid for current organization
      summary: 'Page configuration for the OS Image grid '
      tags:
      - OS Image Download
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/save-osimage-schedule-info/:
    post:
      operationId: ux_nccm_os_image_save_osimage_schedule_info_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - OS Image Download
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OSImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OSImage'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/os-image/trigger-osdownload/:
    post:
      operationId: ux_nccm_os_image_trigger_osdownload_create
      description: This endpoint is used to Search options os schedule in the current
        organization
      summary: Search Options os schedule the given ids
      tags:
      - OS Image Download
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OSImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OSImage'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
          description: ''
  /ux/nccm/policy_rule_group/:
    get:
      operationId: ux_nccm_policy_rule_group_list
      description: This endpoint is used to fetch all the configuration trigger in
        the current organization
      summary: Gets a list of configuration trigger
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Rule Group
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyRulegroup'
          description: ''
    post:
      operationId: ux_nccm_policy_rule_group_create
      description: This endpoint is used to save a new configuration profile for the
        current organization
      summary: Creates a new configuration profile
      tags:
      - Rule Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRulegroup'
          description: ''
  /ux/nccm/policy_rule_group/{id}/:
    get:
      operationId: ux_nccm_policy_rule_group_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Rule Group
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRulegroup'
          description: ''
    put:
      operationId: ux_nccm_policy_rule_group_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Rule Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRulegroup'
          description: ''
    delete:
      operationId: ux_nccm_policy_rule_group_destroy
      description: This endpoint is used to delete an existing rule group for the
        current organization
      summary: Deletes the rule group with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Rule Group
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/nccm/policy_rule_group/bulk-opration/:
    post:
      operationId: ux_nccm_policy_rule_group_bulk_opration_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Rule Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRulegroup'
          description: ''
  /ux/nccm/policy_rule_group/get-configuration-rules/:
    get:
      operationId: ux_nccm_policy_rule_group_get_configuration_rules_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Rule Group
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRulegroup'
          description: ''
  /ux/nccm/policy_rule_group/get-os-from-rule/:
    get:
      operationId: ux_nccm_policy_rule_group_get_os_from_rule_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Rule Group
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRulegroup'
          description: ''
  /ux/nccm/policy_rule_group/get-runtime-params/:
    post:
      operationId: ux_nccm_policy_rule_group_get_runtime_params_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Rule Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRulegroup'
          description: ''
  /ux/nccm/policy_rule_group/get_init_options/:
    get:
      operationId: ux_nccm_policy_rule_group_get_init_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Rule Group
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRulegroup'
          description: ''
  /ux/nccm/policy_rule_group/get_rule_group_by_id/:
    get:
      operationId: ux_nccm_policy_rule_group_get_rule_group_by_id_retrieve
      description: This endpoint is used to delete an existing rule group for the
        current organization
      summary: Retrive the rule group with given id
      tags:
      - Rule Group
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRulegroup'
          description: ''
  /ux/nccm/policy_rule_group/save-associated-rule/:
    get:
      operationId: ux_nccm_policy_rule_group_save_associated_rule_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Rule Group
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRulegroup'
          description: ''
  /ux/nccm/policy_rule_group/status-updation/:
    post:
      operationId: ux_nccm_policy_rule_group_status_updation_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Rule Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRulegroup'
          description: ''
  /ux/nccm/policy_rule_group/validate-uploaded-file/:
    post:
      operationId: ux_nccm_policy_rule_group_validate_uploaded_file_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Rule Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PolicyRulegroup'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRulegroup'
          description: ''
  /ux/nccm/service_template/:
    get:
      operationId: ux_nccm_service_template_list
      description: This endpoint is used to fetch all the Service Template in the
        current organization
      summary: Gets a list of Service Template
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Service Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceTemplate'
          description: ''
    post:
      operationId: ux_nccm_service_template_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Service Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemplate'
          description: ''
  /ux/nccm/service_template/{id}/:
    get:
      operationId: ux_nccm_service_template_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Service Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemplate'
          description: ''
    put:
      operationId: ux_nccm_service_template_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Service Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemplate'
          description: ''
    delete:
      operationId: ux_nccm_service_template_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Service Template
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/nccm/service_template/get-job-init-data/:
    post:
      operationId: ux_nccm_service_template_get_job_init_data_create
      description: This endpoint is used to initail data for Service JOb from Service
        Template for the current organization
      summary: Retrive the rule group with given id
      tags:
      - Service Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemplate'
          description: ''
  /ux/nccm/service_template/get-task-data/:
    post:
      operationId: ux_nccm_service_template_get_task_data_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Service Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemplate'
          description: ''
  /ux/nccm/service_template/import-service-template-json/:
    post:
      operationId: ux_nccm_service_template_import_service_template_json_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Service Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemplate'
          description: ''
  /ux/nccm/service_template/is_disabled/:
    post:
      operationId: ux_nccm_service_template_is_disabled_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Service Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemplate'
          description: ''
  /ux/nccm/service_template/is_enabled/:
    post:
      operationId: ux_nccm_service_template_is_enabled_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Service Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemplate'
          description: ''
  /ux/nccm/service_template/multidelete/:
    post:
      operationId: ux_nccm_service_template_multidelete_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Service Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemplate'
          description: ''
  /ux/nccm/service_template/options/:
    get:
      operationId: ux_nccm_service_template_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Service Template
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemplate'
          description: ''
  /ux/nccm/service_template/quick-task-validation/:
    post:
      operationId: ux_nccm_service_template_quick_task_validation_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Service Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemplate'
          description: ''
  /ux/nccm/service_template/save-service-job/:
    post:
      operationId: ux_nccm_service_template_save_service_job_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Service Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemplate'
          description: ''
  /ux/nccm/service_template/save-txt/:
    post:
      operationId: ux_nccm_service_template_save_txt_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Service Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemplate'
          description: ''
  /ux/nccm/service_template/validate-csv-data/:
    post:
      operationId: ux_nccm_service_template_validate_csv_data_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Service Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemplate'
          description: ''
  /ux/nccm/service_template/validate-uploaded-file/:
    post:
      operationId: ux_nccm_service_template_validate_uploaded_file_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Service Template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceTemplate'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemplate'
          description: ''
  /ux/nccm/uploadjobs/:
    get:
      operationId: ux_nccm_uploadjobs_list
      description: This endpoint is used to fetch all the upload jobs in the current
        organization
      summary: Gets a list of upload jobs
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UploadJobs'
          description: ''
    post:
      operationId: ux_nccm_uploadjobs_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/{id}/:
    get:
      operationId: ux_nccm_uploadjobs_retrieve
      description: This endpoint is used to fetch a Upload jobs in the current organization
      summary: Gets a upload job details with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
    put:
      operationId: ux_nccm_uploadjobs_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
    delete:
      operationId: ux_nccm_uploadjobs_destroy
      description: This endpoint is used to delete an existing upload job for the
        current organization
      summary: Deletes the upload job with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/nccm/uploadjobs/api-approval-macros/:
    get:
      operationId: ux_nccm_uploadjobs_api_approval_macros_retrieve
      description: This endpoint is used to get the macro for the approval api request
      summary: Get the macro for the approval api request
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/approve/:
    post:
      operationId: ux_nccm_uploadjobs_approve_create
      description: This endpoint is used to update the approval status of the upload
        job for the current organization
      summary: Update the Upload Job Approval Status
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              UploadJobApprovalStatus:
                value:
                  job_id: 13549189685xxxxxxxxxx
                  organization: 13113501882xxxxxxxxxx
                  job_name: Upload Job Name
                  approval_status: Approved/Rejected
                  approved_by: xyz@gmail.com
                summary: Upload job Approval Status
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/nccm/uploadjobs/bulk-delete-ujob/:
    post:
      operationId: ux_nccm_uploadjobs_bulk_delete_ujob_create
      description: This endpoint is to delete multiple job.
      summary: Return status of deletion
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/bulk-toggle-ujob-state/:
    post:
      operationId: ux_nccm_uploadjobs_bulk_toggle_ujob_state_create
      description: This endpoint is to change upload job state.
      summary: Return status of deletion
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/bulk-toggle-ujobtask-state/:
    post:
      operationId: ux_nccm_uploadjobs_bulk_toggle_ujobtask_state_create
      description: This endpoint is to change upload job task state.
      summary: Return status of deletion
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/create-upload-job/:
    post:
      operationId: ux_nccm_uploadjobs_create_upload_job_create
      description: This endpoint is used to create an upload job via api call for
        the given organization
      summary: Create Upload Job
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateUploadJob:
                value:
                  change_request_info:
                    id: 12778EXXXXX
                    display_id: REQEXXXXX
                  job_name: Upload job 1
                  description: Used to change device configuration.
                  job_execution_window: ''
                  job_state: true
                  send_result_via_api: true
                  external_systems: []
                  notifier_id: []
                  agent_id: 54DEEXXXXX
                  download_configuration: true
                  execution_schedule:
                    schedule_mode: immediate
                    schedule_period: executenow
                    schedule:
                      scheduled_at: ''
                    description: ''
                    valid: VALID
                  visibility: Public/Private
                  user_list: []
                  teams_list: []
                  request_source: ''
                  tasks:
                  - task_name: task 1
                    task_description: task to execute first
                    vendor: Cisco
                    configuration_template: Cisco IOS Switch Change Hostname
                    ip_address:
                    - 127.0.0.1
                    configuration_profile: ''
                    connection_protocol: ''
                    connection_port: ''
                    username: '#######'
                    password: '#######'
                    enable_password: '#######'
                    shell: Remote
                    state: ''
                    task_retry_count: 0
                    task_retry_interval_window: 2 Hours
                    continue_next_ip_address_on_error: false
                    continue_next_command_on_error: false
                    run_after:
                    - Start
                    run_only_if: Success
                    wait_time: ''
                    asset_tag: 13778EXXXXX
                    task_execution_window: true
                    runtime_fields_values:
                      HOSTNAME: '#######'
                  - Note: ' Other Dependency Tasks '
                summary: Create Upload Job
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/nccm/uploadjobs/device-options/:
    get:
      operationId: ux_nccm_uploadjobs_device_options_retrieve
      description: This endpoint is used to get Asset and its resource options for
        the triggered based review.
      summary: Get the options for the Triggered based review.
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/export-review/:
    post:
      operationId: ux_nccm_uploadjobs_export_review_create
      description: This endpoint is used for PDF export of review task details.
      summary: Export Review Task.
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/format-flowchart-data/:
    post:
      operationId: ux_nccm_uploadjobs_format_flowchart_data_create
      description: This endpoint is form the data for Task Flow Chart.
      summary: Return the formated data for Task Flow Chart
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/get-template-id/:
    get:
      operationId: ux_nccm_uploadjobs_get_template_id_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/jobs-retry-queue/:
    get:
      operationId: ux_nccm_uploadjobs_jobs_retry_queue_retrieve
      description: This endpoint is used to fecth all jobs retry queue list in the
        current organization
      summary: Gets a list of jobs retry queue
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/options/:
    get:
      operationId: ux_nccm_uploadjobs_options_retrieve
      description: This endpoint is used to get the default options for Upload Jobs
      summary: Get the options for the Upload Jobs
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/page-config/:
    get:
      operationId: ux_nccm_uploadjobs_page_config_retrieve
      description: This endpoint is get the page configuration for the upload job
        grid for current organization
      summary: 'Page configuration for the upload job grid '
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/quick-job-templates/:
    get:
      operationId: ux_nccm_uploadjobs_quick_job_templates_retrieve
      description: This endpoint to get the templates for the Simple Upload Job.
      summary: Return the templates data
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/quick-task-validation/:
    post:
      operationId: ux_nccm_uploadjobs_quick_task_validation_create
      description: This endpoint is used to validate the upload job task.
      summary: Validate Upload Job Task.
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/rerun-all-devices/:
    get:
      operationId: ux_nccm_uploadjobs_rerun_all_devices_retrieve
      description: This endpoint is used to edit an existing upload job result for
        the current organization
      summary: Edits the upload job result with given id
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/rerun-job/:
    get:
      operationId: ux_nccm_uploadjobs_rerun_job_retrieve
      description: This endpoint is used to trigger upload job rerun for the current
        organization
      summary: Rerun Upload job
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/rerun-result-ip/:
    get:
      operationId: ux_nccm_uploadjobs_rerun_result_ip_retrieve
      description: This endpoint is used to edit an existing upload job result ips
        for the current organization
      summary: Edits the upload job result ips with given id
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/review-task/:
    post:
      operationId: ux_nccm_uploadjobs_review_task_create
      description: This endpoint is used to review added tasks.
      summary: Review Upload Job Task.
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/runtime-csv-added/:
    get:
      operationId: ux_nccm_uploadjobs_runtime_csv_added_retrieve
      description: This endpoint is to Download Csv for Runtime values which is added.
      summary: Return Csv for Runtime values which is added
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/runtime-fields/:
    get:
      operationId: ux_nccm_uploadjobs_runtime_fields_retrieve
      description: This endpoint is form the data for Runtime fields.
      summary: Return the data for Runtime fields
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/runtime-fields-template-edit/:
    get:
      operationId: ux_nccm_uploadjobs_runtime_fields_template_edit_retrieve
      description: This endpoint is form the data for Runtime fields.
      summary: Return the data for Runtime fields
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/runtime-parameter/:
    get:
      operationId: ux_nccm_uploadjobs_runtime_parameter_retrieve
      description: This endpoint is used to get the runtime parameter(s) for the given
        configuration template if avaliable.
      summary: To Get Configuration Template Runtime Parameter(s)
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/nccm/uploadjobs/sample-csv/:
    get:
      operationId: ux_nccm_uploadjobs_sample_csv_retrieve
      description: This endpoint is to Download Sample Csv for Runtime values.
      summary: Return  Sample Csv for Runtime values
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/save-config-rollback/:
    post:
      operationId: ux_nccm_uploadjobs_save_config_rollback_create
      description: This endpoint to save config rollback upload job.
      summary: Return Job Saved Status
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/save-smpl-srpt-exe/:
    post:
      operationId: ux_nccm_uploadjobs_save_smpl_srpt_exe_create
      description: This endpoint to save simple script Execution upload job.
      summary: Return Job Saved Status
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/save-va-sse/:
    post:
      operationId: ux_nccm_uploadjobs_save_va_sse_create
      description: This endpoint is to add the upload job as simaple script from manage
        vulnerability.
      summary: Add the upload job as simaple script from manage vulnerability
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/task-status/:
    get:
      operationId: ux_nccm_uploadjobs_task_status_retrieve
      description: This endpoint is form the data for task status.
      summary: Return the data for task status
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/task-template-validate/:
    post:
      operationId: ux_nccm_uploadjobs_task_template_validate_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/template-name/:
    get:
      operationId: ux_nccm_uploadjobs_template_name_retrieve
      description: This endpoint is form the data for template_name.
      summary: Return the data for template_name
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/ujob-search-options/:
    get:
      operationId: ux_nccm_uploadjobs_ujob_search_options_retrieve
      description: This endpoint is used to get the default options for Upload Jobs
        Search.
      summary: Get the options for the Upload Jobs Search.
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/ujob-tasks/:
    get:
      operationId: ux_nccm_uploadjobs_ujob_tasks_retrieve
      description: This endpoint is to get upload job tasks.
      summary: Return upload job tasks data.
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/update-taskcreds/:
    post:
      operationId: ux_nccm_uploadjobs_update_taskcreds_create
      description: This endpoint is to update the task device credentials.
      summary: Return status of the updation
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/upload-job-audits/:
    get:
      operationId: ux_nccm_uploadjobs_upload_job_audits_retrieve
      description: This endpoint is used to fetch all the upload jobs audits in the
        current organization
      summary: Gets a list of upload jobs audits
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/upload-job-result-search-option/:
    get:
      operationId: ux_nccm_uploadjobs_upload_job_result_search_option_retrieve
      description: This endpoint is used to get the default options for Upload Jobs
        Result Search.
      summary: Get the options for the Upload Jobs Result Search.
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/upload-job-results/:
    get:
      operationId: ux_nccm_uploadjobs_upload_job_results_retrieve
      description: This endpoint is used to fetch all the upload jobs results in the
        current organization
      summary: Gets a list of upload jobs results
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/upload-job-results-task-ip/:
    get:
      operationId: ux_nccm_uploadjobs_upload_job_results_task_ip_retrieve
      description: This endpoint is used to fetch all the upload jobs results in the
        current organization
      summary: Gets a list of upload jobs results
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/uploadjob-status-update/:
    post:
      operationId: ux_nccm_uploadjobs_uploadjob_status_update_create
      description: This endpoint is to modify the selected job status.
      summary: Modify the selected job status
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/uploadjob-templates-on-edit/:
    get:
      operationId: ux_nccm_uploadjobs_uploadjob_templates_on_edit_retrieve
      description: This endpoint is to Download Csv for Runtime values which is added.
      summary: Return Csv for Runtime values which is added
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/va-sse-opts-validate/:
    get:
      operationId: ux_nccm_uploadjobs_va_sse_opts_validate_retrieve
      description: This endpoint is to validate the given params from vulnerability
        can be added as upload job.
      summary: Validate the given params from vulnerability can be added as upload
        job
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/validate-csv/:
    post:
      operationId: ux_nccm_uploadjobs_validate_csv_create
      description: This endpoint is to validate Csv for Runtime values.
      summary: Return  Sample Csv for Runtime values
      tags:
      - Configuration Upload Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/verify-quick-addjob/:
    get:
      operationId: ux_nccm_uploadjobs_verify_quick_addjob_retrieve
      description: This endpoint to verify selected asset is valid for upload job.
      summary: Return the templates data
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/uploadjobs/verify-quick-addjob-templates/:
    get:
      operationId: ux_nccm_uploadjobs_verify_quick_addjob_templates_retrieve
      description: This endpoint to verify selected template is valid for upload job.
      summary: Return the templates data
      tags:
      - Configuration Upload Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobs'
          description: ''
  /ux/nccm/workflow_jobs/:
    get:
      operationId: ux_nccm_workflow_jobs_list
      description: This endpoint is used to fetch all the workflow jobs in the current
        organization
      summary: Gets a list of workflow jobs
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Work Flow Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkflowJobs'
          description: ''
    post:
      operationId: ux_nccm_workflow_jobs_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Work Flow Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowJobs'
          description: ''
  /ux/nccm/workflow_jobs/{id}/:
    get:
      operationId: ux_nccm_workflow_jobs_retrieve
      description: This endpoint is used to fetch a workflow jobs in the current organization
      summary: Gets a workflow job details with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Work Flow Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowJobs'
          description: ''
    put:
      operationId: ux_nccm_workflow_jobs_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Work Flow Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowJobs'
          description: ''
    delete:
      operationId: ux_nccm_workflow_jobs_destroy
      description: This endpoint is used to delete an existing workflow job for the
        current organization
      summary: Deletes the workflow job with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Work Flow Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/nccm/workflow_jobs/execute-workflow-job/:
    post:
      operationId: ux_nccm_workflow_jobs_execute_workflow_job_create
      description: This endpoint is used to trigger workflow jobs in the current organization
      summary: Trigger Workflow Jobs
      tags:
      - Work Flow Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowJobs'
          description: ''
  /ux/nccm/workflow_jobs/feature-diagnosis/:
    get:
      operationId: ux_nccm_workflow_jobs_feature_diagnosis_retrieve
      description: This endpoint is used to diagnosis feature of workflow jobs in
        the current organization
      summary: Diagnosis Workflow Job Features
      tags:
      - Work Flow Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowJobs'
          description: ''
  /ux/nccm/workflow_jobs/feature-diagnosis-opts/:
    get:
      operationId: ux_nccm_workflow_jobs_feature_diagnosis_opts_retrieve
      description: This endpoint is used to diagnosis feature options of workflow
        jobs in the current organization
      summary: Workflow Job Features Diagnosis Options
      tags:
      - Work Flow Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowJobs'
          description: ''
  /ux/nccm/workflow_jobs/multi-change/:
    post:
      operationId: ux_nccm_workflow_jobs_multi_change_create
      description: This endpoint is used to change state or delete  workflow jobs
        in the current organization
      summary: Change or delete Workflow Jobs
      tags:
      - Work Flow Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowJobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowJobs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowJobs'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowJobs'
          description: ''
  /ux/nccm/workflow_jobs/options/:
    get:
      operationId: ux_nccm_workflow_jobs_options_retrieve
      description: This endpoint is used to fetch a workflow jobs options in the current
        organization
      summary: Gets a workflow job options with the given id
      tags:
      - Work Flow Jobs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowJobs'
          description: ''
  /ux/nccm/ztp/:
    get:
      operationId: ux_nccm_ztp_list
      tags:
      - ZTP
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ZTPConfiguration'
          description: ''
    post:
      operationId: ux_nccm_ztp_create
      tags:
      - ZTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZTPConfiguration'
          description: ''
  /ux/nccm/ztp/{id}/:
    get:
      operationId: ux_nccm_ztp_retrieve
      description: This endpoint is used to fetch a runtime paramter data in the current
        organization
      summary: Gets a runtime paramter data details with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ZTP
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZTPConfiguration'
          description: ''
    put:
      operationId: ux_nccm_ztp_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ZTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZTPConfiguration'
          description: ''
    delete:
      operationId: ux_nccm_ztp_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ZTP
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/nccm/ztp/delete-runtime-profiles/:
    post:
      operationId: ux_nccm_ztp_delete_runtime_profiles_create
      description: This endpoint is used to Delete a runtime paramter data in the
        current organization
      summary: Delete a runtime paramter data details with the given ids
      tags:
      - ZTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZTPConfiguration'
          description: ''
  /ux/nccm/ztp/import-runtimes/:
    post:
      operationId: ux_nccm_ztp_import_runtimes_create
      description: This endpoint is used to Imported Runtime CSV
      summary: Imported Runtime CSV
      tags:
      - ZTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZTPConfiguration'
          description: ''
  /ux/nccm/ztp/options/:
    get:
      operationId: ux_nccm_ztp_options_retrieve
      description: 'This endpoint is used to get the default options for authentication
        profile '
      summary: Get the options for the ZTP Configuration
      tags:
      - ZTP
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZTPConfiguration'
          description: ''
  /ux/nccm/ztp/sample-csv/:
    get:
      operationId: ux_nccm_ztp_sample_csv_retrieve
      description: This endpoint is used to get the Sample CSV for importing ZTP Runtime
        Fields For the given configuration profile.
      summary: Get the Sample CSV for importing ZTP Runtime Fields
      tags:
      - ZTP
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZTPConfiguration'
          description: ''
  /ux/nccm/ztp/save-ztp-profile/:
    post:
      operationId: ux_nccm_ztp_save_ztp_profile_create
      description: This endpoint is used to Save ZTP Configuration Profile.
      summary: Save ZTP Configuration Profile.
      tags:
      - ZTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZTPConfiguration'
          description: ''
  /ux/nccm/ztp/save-ztp-runtime-parameter/:
    post:
      operationId: ux_nccm_ztp_save_ztp_runtime_parameter_create
      description: This endpoint is used to Save ZTP Runtime Paramters.
      summary: Save ZTP Runtime Paramters.
      tags:
      - ZTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZTPConfiguration'
          description: ''
  /ux/nccm/ztp/search-options/:
    get:
      operationId: ux_nccm_ztp_search_options_retrieve
      description: This endpoint is used to get the search options for the runtime
        module.
      summary: Get the Search Options for Runtime Module
      tags:
      - ZTP
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZTPConfiguration'
          description: ''
  /ux/nccm/ztp/validate-csv/:
    post:
      operationId: ux_nccm_ztp_validate_csv_create
      description: This endpoint is used to Validate the Imported Runtime CSV
      summary: Validate the Imported Runtime CSV
      tags:
      - ZTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ZTPConfiguration'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZTPConfiguration'
          description: ''
  /ux/nccm/ztp/ztp-profile/:
    get:
      operationId: ux_nccm_ztp_ztp_profile_retrieve
      description: This endpoint is used to get ZTP Configuration Profile.
      summary: Get ZTP Configuration Profile.
      tags:
      - ZTP
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZTPConfiguration'
          description: ''
  /ux/nccm/ztp/ztp-runtime-fields/:
    get:
      operationId: ux_nccm_ztp_ztp_runtime_fields_retrieve
      description: This endpoint is used to get the ZTP Runtime Fields For the given
        configuration profile.
      summary: Get the ZTP Runtime Fields
      tags:
      - ZTP
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZTPConfiguration'
          description: ''
  /ux/nccm/ztp/ztp-runtime-options/:
    get:
      operationId: ux_nccm_ztp_ztp_runtime_options_retrieve
      description: This endpoint is used to get the default options for ZTP Runtime
        Parameters
      summary: Get the options for the ZTP Runtime Parameters
      tags:
      - ZTP
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZTPConfiguration'
          description: ''
  /ux/oidc/config/:
    get:
      operationId: ux_oidc_config_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_oidc_config_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/oidc/config/{id}/:
    get:
      operationId: ux_oidc_config_retrieve_2
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_oidc_config_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_oidc_config_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/oidc/config/enable-disable-config/:
    post:
      operationId: ux_oidc_config_enable_disable_config_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/oidc/config/get-oidc/:
    get:
      operationId: ux_oidc_config_get_oidc_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/password_js_encrypt/:
    post:
      operationId: ux_password_js_encrypt_create
      description: Endpoint for getting JS Encrypted Password.
      summary: Get encrypted data for the password string
      tags:
      - Authentication
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /ux/saml/config/:
    get:
      operationId: ux_saml_config_retrieve
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_saml_config_create
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/saml/config/{id}/:
    get:
      operationId: ux_saml_config_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_saml_config_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_saml_config_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/saml/config/enable-disable-saml-config/:
    post:
      operationId: ux_saml_config_enable_disable_saml_config_create
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/saml/config/get-saml/:
    get:
      operationId: ux_saml_config_get_saml_retrieve
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/sd/change/change/:
    get:
      operationId: ux_sd_change_change_list
      description: This endpoint is used to fetch all the change in the current organization
      summary: Gets a list of changes
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeList'
          description: ''
    post:
      operationId: ux_sd_change_change_create
      description: This endpoint is used to save a new change for the current organization
      summary: 'Creates a new change '
      tags:
      - Change
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateRequestSample:
                value:
                  summary: VPN Issue
                  description: ''
                  catalogue: ''
                  impact_service: ''
                  impact_service_name: service1
                  service_classification: ''
                  service_classification_name: ''
                  state: Open
                  state_id: 1
                  status: New
                  status_id: 1
                  urgency_id: 3
                  urgency: Low
                  priority_id: 5
                  priority: Very Low
                  impact: Department
                  impact_id: 3
                  change_source:
                    id: 1
                    name: Web
                  resolution_type: ''
                  change_type:
                    id: 1
                    name: Change
                    prefix: REQ
                  requester_id: ''
                  requester_name: Test req
                  requester_email: testreq@gmail.com
                  requester_phone: '7778889999'
                  reporter_name: ''
                  reporter_email: ''
                  reporter_phone: ''
                  watcher: ''
                  hold_config: {}
                  support_group: ''
                  assignee: ''
                  escalation: {}
                  tag: []
                  assets: []
                  config: {}
                  reference: {}
                  template_info: {}
                  closure_info: {}
                  approval_config: {}
                  custom_field:
                  - {}
                  attachment: {}
                  api_link: {}
                  lock_config: {}
                  field_service_config: {}
                  closure_note: ''
                summary: Create request Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/sd/change/change/{id}/:
    get:
      operationId: ux_sd_change_change_retrieve
      description: This endpoint is used to fetch a request details in the current
        organization
      summary: Gets a request with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
    put:
      operationId: ux_sd_change_change_update
      description: This endpoint is used to edit an existing change for the current
        organization
      summary: Edits the change with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
    delete:
      operationId: ux_sd_change_change_destroy
      description: This endpoint is used to delete an existing change for the current
        organization
      summary: Deletes the change with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/sd/change/change/add-attachment/:
    post:
      operationId: ux_sd_change_change_add_attachment_create
      description: This endpoint is used to add new attachments.
      summary: Add attachments for the selected change.
      tags:
      - Change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/attachment/:
    get:
      operationId: ux_sd_change_change_attachment_retrieve
      description: This endpoint is used to fetch the attachments.
      summary: Gets attachments for the selected change.
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/change-data/{id}/:
    get:
      operationId: ux_sd_change_change_change_data_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/change-impact/{id}/:
    get:
      operationId: ux_sd_change_change_change_impact_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/change-risk/{id}/:
    get:
      operationId: ux_sd_change_change_change_risk_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/change-task/{id}/:
    get:
      operationId: ux_sd_change_change_change_task_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/delete_change/:
    post:
      operationId: ux_sd_change_change_delete_change_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/history/:
    get:
      operationId: ux_sd_change_change_history_retrieve
      description: This endpoint is used to fetch the history.
      summary: Gets history for the selected change.
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/impact-list/{id}/:
    get:
      operationId: ux_sd_change_change_impact_list_retrieve
      description: |-
        function to get impact list
        :param request:
        :return: object
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/options/:
    get:
      operationId: ux_sd_change_change_options_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/process-rich-text/:
    get:
      operationId: ux_sd_change_change_process_rich_text_retrieve
      description: This endpoint is used to get the rich text data.
      summary: Get rich text data
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/requester_search/:
    get:
      operationId: ux_sd_change_change_requester_search_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/risk-list/{id}/:
    get:
      operationId: ux_sd_change_change_risk_list_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/risk_assessment_completion/:
    get:
      operationId: ux_sd_change_change_risk_assessment_completion_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
    post:
      operationId: ux_sd_change_change_risk_assessment_completion_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/save-change-impact/:
    post:
      operationId: ux_sd_change_change_save_change_impact_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/save-change-risk/:
    post:
      operationId: ux_sd_change_change_save_change_risk_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/save-change-risk-assessment/:
    post:
      operationId: ux_sd_change_change_save_change_risk_assessment_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/save-change-task/:
    post:
      operationId: ux_sd_change_change_save_change_task_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/save-rich-text/:
    post:
      operationId: ux_sd_change_change_save_rich_text_create
      description: This endpoint is used to save the rich text data.
      summary: Save rich text data
      tags:
      - Change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/task-list/{id}/:
    get:
      operationId: ux_sd_change_change_task_list_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/workflow_options_map/:
    post:
      operationId: ux_sd_change_change_workflow_options_map_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/change/workflow_status/:
    get:
      operationId: ux_sd_change_change_workflow_status_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
          description: ''
  /ux/sd/change/conversation/:
    get:
      operationId: ux_sd_change_conversation_retrieve
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_sd_change_conversation_create
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/sd/change/conversation/{id}/:
    get:
      operationId: ux_sd_change_conversation_retrieve_2
      description: API endpoint that allows Incident to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_sd_change_conversation_update
      description: API endpoint that allows Incident to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_sd_change_conversation_destroy
      description: API endpoint that allows Incident to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Change
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/sd/checklist/checklist/:
    get:
      operationId: ux_sd_checklist_checklist_list
      description: This endpoint is used to fetch all the checklist in the current
        organization
      summary: Gets a list of checklist
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Checklist
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Checklist'
          description: ''
    post:
      operationId: ux_sd_checklist_checklist_create
      description: This endpoint is used to save a new checklist for the current organization
      summary: 'Creates a new checklist '
      tags:
      - Checklist
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateChecklistSample:
                value:
                  checklist: checklist1
                summary: Create checklist Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/sd/checklist/checklist/{id}/:
    get:
      operationId: ux_sd_checklist_checklist_retrieve
      description: This endpoint is used to fetch a business_rule details in the current
        organization
      summary: Gets a checklist with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Checklist
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checklist'
          description: ''
    put:
      operationId: ux_sd_checklist_checklist_update
      description: This endpoint is used to edit an existing checklist for the current
        organization
      summary: Edits the checklist with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Checklist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Checklist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Checklist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Checklist'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checklist'
          description: ''
    delete:
      operationId: ux_sd_checklist_checklist_destroy
      description: This endpoint is used to delete an existing checklist for the current
        organization
      summary: Deletes the checklist with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Checklist
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/sd/checklist/checklist/options/:
    get:
      operationId: ux_sd_checklist_checklist_options_retrieve
      description: This endpoint is used to get the default options for checklist
        config
      summary: Get the options for the Checklist configuration
      tags:
      - Checklist
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checklist'
          description: ''
  /ux/sd/checklist/checklist/status_options_based_on_service/:
    get:
      operationId: ux_sd_checklist_checklist_status_options_based_on_service_retrieve
      description: This endpoint is used to get the status options for selected catalogue
        service
      summary: Get the status options for selected impact service for the Checklist
        configuration
      tags:
      - Checklist
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checklist'
          description: ''
  /ux/sd/inci/conversation/:
    get:
      operationId: ux_sd_inci_conversation_retrieve
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Incident
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_sd_inci_conversation_create
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Incident
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/sd/inci/conversation/{id}/:
    get:
      operationId: ux_sd_inci_conversation_retrieve_2
      description: API endpoint that allows Incident to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Incident
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_sd_inci_conversation_update
      description: API endpoint that allows Incident to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Incident
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_sd_inci_conversation_destroy
      description: API endpoint that allows Incident to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Incident
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/sd/inci/incident/:
    get:
      operationId: ux_sd_inci_incident_list
      description: This endpoint is used to fetch all the incidents in the current
        organization
      summary: Gets a list of incidents
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Incident
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncidentList'
          description: ''
    post:
      operationId: ux_sd_inci_incident_create
      description: This endpoint is used to save a new incident for the current organization
      summary: 'Creates a new incident '
      tags:
      - Incident
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateIncidentSample:
                value:
                  summary: VPN Issue
                  description: ''
                  catalogue: ''
                  impact_service: ''
                  impact_service_name: service1
                  service_classification: ''
                  service_classification_name: ''
                  state: Open
                  state_id: 1
                  status: New
                  status_id: 1
                  urgency_id: 3
                  urgency: Low
                  priority_id: 5
                  priority: Very Low
                  impact: Department
                  impact_id: 3
                  incident_source:
                    id: 1
                    name: Web
                  resolution_type: ''
                  is_first_call: ''
                  incident_type:
                    id: 1
                    name: Incident
                    prefix: inci
                  requester_id: ''
                  requester_name: Test req
                  requester_email: testreq@gmail.com
                  requester_phone: '7778889999'
                  reporter_name: ''
                  reporter_email: ''
                  reporter_phone: ''
                  watcher: ''
                  hold_config: {}
                  support_group: ''
                  assignee: ''
                  escalation: {}
                  tag: []
                  assets: []
                  config: {}
                  reference: {}
                  template_info: {}
                  closure_info: {}
                  approval_config: {}
                  custom_field:
                  - {}
                  attachment: {}
                  api_link: {}
                  lock_config: {}
                  field_service_config: {}
                  closure_note: ''
                summary: Create incident Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/sd/inci/incident/{id}/:
    get:
      operationId: ux_sd_inci_incident_retrieve
      description: This endpoint is used to fetch a incident details in the current
        organization
      summary: Gets a incident with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Incident
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
    put:
      operationId: ux_sd_inci_incident_update
      description: This endpoint is used to edit an existing incident for the current
        organization
      summary: Edits the incident with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Incident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
    delete:
      operationId: ux_sd_inci_incident_destroy
      description: This endpoint is used to delete an existing incident for the current
        organization
      summary: Deletes the incident with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Incident
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/sd/inci/incident/add-attachment/:
    post:
      operationId: ux_sd_inci_incident_add_attachment_create
      description: This endpoint is used to add new attachments.
      summary: Add attachments for the selected incident.
      tags:
      - Incident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
  /ux/sd/inci/incident/attachment/:
    get:
      operationId: ux_sd_inci_incident_attachment_retrieve
      description: This endpoint is used to fetch the attachments.
      summary: Gets attachments for the selected incident.
      tags:
      - Incident
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
  /ux/sd/inci/incident/bulk_retry_api/:
    post:
      operationId: ux_sd_inci_incident_bulk_retry_api_create
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Incident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
  /ux/sd/inci/incident/close_inci_request/:
    post:
      operationId: ux_sd_inci_incident_close_inci_request_create
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Incident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
  /ux/sd/inci/incident/delete_incident/:
    post:
      operationId: ux_sd_inci_incident_delete_incident_create
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Incident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
  /ux/sd/inci/incident/feedback/:
    get:
      operationId: ux_sd_inci_incident_feedback_retrieve
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Incident
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
  /ux/sd/inci/incident/impacted_asset/:
    get:
      operationId: ux_sd_inci_incident_impacted_asset_retrieve
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Incident
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
  /ux/sd/inci/incident/inci_reopen/:
    post:
      operationId: ux_sd_inci_incident_inci_reopen_create
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Incident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
  /ux/sd/inci/incident/inci_resolve/:
    post:
      operationId: ux_sd_inci_incident_inci_resolve_create
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Incident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
  /ux/sd/inci/incident/incident-data/{id}/:
    get:
      operationId: ux_sd_inci_incident_incident_data_retrieve
      description: API endpoint that allows Incident to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Incident
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
  /ux/sd/inci/incident/options/:
    get:
      operationId: ux_sd_inci_incident_options_retrieve
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Incident
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
  /ux/sd/inci/incident/process-rich-text/:
    get:
      operationId: ux_sd_inci_incident_process_rich_text_retrieve
      description: This endpoint is used to get the rich text data.
      summary: Get rich text data
      tags:
      - Incident
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
  /ux/sd/inci/incident/requester_search/:
    get:
      operationId: ux_sd_inci_incident_requester_search_retrieve
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Incident
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
  /ux/sd/inci/incident/save-rich-text/:
    post:
      operationId: ux_sd_inci_incident_save_rich_text_create
      description: This endpoint is used to save the rich text data.
      summary: Save rich text data
      tags:
      - Incident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
  /ux/sd/inci/incident/workflow_options_map/:
    post:
      operationId: ux_sd_inci_incident_workflow_options_map_create
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Incident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
  /ux/sd/inci/incident/workflow_status/:
    get:
      operationId: ux_sd_inci_incident_workflow_status_retrieve
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Incident
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentList'
          description: ''
  /ux/sd/meeting/meeting/:
    get:
      operationId: ux_sd_meeting_meeting_list
      description: This endpoint is used to fetch all the meeting in the current organization
      summary: Gets a list of meeting
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Meeting
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meeting'
          description: ''
    post:
      operationId: ux_sd_meeting_meeting_create
      description: This endpoint is used to save a new meeting for the current organization
      summary: Creates a new meeting
      tags:
      - Meeting
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateRequestSample:
                value:
                  name: meeting
                  description: meeting for incident management
                  impact_service: '72891887373'
                  module_id: '10'
                  expiry: ''
                summary: Create request Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/sd/meeting/meeting/{id}/:
    get:
      operationId: ux_sd_meeting_meeting_retrieve
      description: This endpoint is used to fetch a meeting details in the current
        organization
      summary: Gets a request with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Meeting
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
          description: ''
    put:
      operationId: ux_sd_meeting_meeting_update
      description: API endpoint that allows Request to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Meeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meeting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Meeting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Meeting'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
          description: ''
    delete:
      operationId: ux_sd_meeting_meeting_destroy
      description: This endpoint is used to delete an existing business_rule for the
        current organization
      summary: Deletes the business_rule with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Meeting
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/sd/meeting/meeting/associate_list/:
    get:
      operationId: ux_sd_meeting_meeting_associate_list_retrieve
      description: This endpoint is used to get associate list
      summary: Get the incident, request and change list based on associate seleted
      tags:
      - Meeting
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
          description: ''
  /ux/sd/meeting/meeting/calendar_meeting_data/:
    get:
      operationId: ux_sd_meeting_meeting_calendar_meeting_data_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Meeting
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
          description: ''
  /ux/sd/meeting/meeting/getmeetingminutes/:
    get:
      operationId: ux_sd_meeting_meeting_getmeetingminutes_retrieve
      description: This endpoint is used to get the default options for meeting config
      summary: Get the options for the meeting configuration
      tags:
      - Meeting
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
          description: ''
  /ux/sd/meeting/meeting/getmeetingnotes/:
    get:
      operationId: ux_sd_meeting_meeting_getmeetingnotes_retrieve
      description: This endpoint is used to get the meeting notes
      summary: Get the meeting notes
      tags:
      - Meeting
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
          description: ''
  /ux/sd/meeting/meeting/meeting_options/:
    get:
      operationId: ux_sd_meeting_meeting_meeting_options_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Meeting
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
          description: ''
  /ux/sd/meeting/meeting/options/:
    get:
      operationId: ux_sd_meeting_meeting_options_retrieve
      description: This endpoint is used to get the default options for meeting config
      summary: Get the options for the meeting configuration
      tags:
      - Meeting
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
          description: ''
  /ux/sd/meeting/meeting/savemeetingminute/:
    post:
      operationId: ux_sd_meeting_meeting_savemeetingminute_create
      description: This endpoint is used to get the default options for meeting config
      summary: Get the options for the meeting configuration
      tags:
      - Meeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meeting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Meeting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Meeting'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
          description: ''
  /ux/sd/meeting/meeting/savemeetingnote/:
    post:
      operationId: ux_sd_meeting_meeting_savemeetingnote_create
      description: This endpoint is used to get the default options for meeting config
      summary: Get the options for the meeting configuration
      tags:
      - Meeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meeting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Meeting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Meeting'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
          description: ''
  /ux/sd/meeting/meeting/sendmeetingminutemail/:
    post:
      operationId: ux_sd_meeting_meeting_sendmeetingminutemail_create
      description: This endpoint is used to send the Emails
      summary: send the Emails
      tags:
      - Meeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meeting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Meeting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Meeting'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
          description: ''
  /ux/sd/meeting/meeting/sendtimerdata/:
    post:
      operationId: ux_sd_meeting_meeting_sendtimerdata_create
      description: This endpoint is used to push Timer data
      summary: push Timer data
      tags:
      - Meeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meeting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Meeting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Meeting'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
          description: ''
  /ux/sd/problem/conversation/:
    get:
      operationId: ux_sd_problem_conversation_retrieve
      description: API endpoint that allows Problem to be viewed or edited.
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_sd_problem_conversation_create
      description: API endpoint that allows Problem to be viewed or edited.
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/sd/problem/conversation/{id}/:
    get:
      operationId: ux_sd_problem_conversation_retrieve_2
      description: API endpoint that allows Problem to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_sd_problem_conversation_update
      description: API endpoint that allows Problem to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_sd_problem_conversation_destroy
      description: API endpoint that allows Problem to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/sd/problem/problem/:
    get:
      operationId: ux_sd_problem_problem_list
      description: This endpoint is used to fetch all the Problems in the current
        organization
      summary: Gets a list of Problems
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProblemList'
          description: ''
    post:
      operationId: ux_sd_problem_problem_create
      description: This endpoint is used to save a new problem for the current organization
      summary: 'Creates a new problem '
      tags:
      - Problem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateProblemSample:
                value:
                  summary: VPN Issue
                  description: ''
                  catalogue: ''
                  impact_service: ''
                  impact_service_name: service1
                  service_classification: ''
                  service_classification_name: ''
                  state: Open
                  state_id: 1
                  status: New
                  status_id: 1
                  urgency_id: 3
                  urgency: Low
                  priority_id: 5
                  priority: Very Low
                  impact: Department
                  impact_id: 3
                  problem_source:
                    id: 1
                    name: Web
                  resolution_type: ''
                  is_first_call: ''
                  external_problem_number: ''
                  problem_type:
                    id: 1
                    name: Problem
                    prefix: PROB
                  requester_id: ''
                  requester_name: Test req
                  requester_email: testreq@gmail.com
                  requester_phone: '7778889999'
                  reporter_name: ''
                  reporter_email: ''
                  reporter_phone: ''
                  watcher: ''
                  hold_config: {}
                  support_group: ''
                  assignee: ''
                  escalation: {}
                  tag: []
                  assets: []
                  config: {}
                  reference: {}
                  template_info: {}
                  closure_info: {}
                  approval_config: {}
                  custom_field:
                  - {}
                  attachment: {}
                  api_link: {}
                  lock_config: {}
                  field_service_config: {}
                  closure_note: ''
                summary: Create problem Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/sd/problem/problem/{id}/:
    get:
      operationId: ux_sd_problem_problem_retrieve
      description: This endpoint is used to fetch a problem details in the current
        organization
      summary: Gets a problem with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
    put:
      operationId: ux_sd_problem_problem_update
      description: This endpoint is used to edit an existing problem for the current
        organization
      summary: Edits the problem with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Problem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProblemList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProblemList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProblemList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
    delete:
      operationId: ux_sd_problem_problem_destroy
      description: This endpoint is used to delete an existing problem for the current
        organization
      summary: Deletes the problem with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/sd/problem/problem/add-attachment/:
    post:
      operationId: ux_sd_problem_problem_add_attachment_create
      description: This endpoint is used to add new attachments.
      summary: Add attachments for the selected problem.
      tags:
      - Problem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProblemList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProblemList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProblemList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/attachment/:
    get:
      operationId: ux_sd_problem_problem_attachment_retrieve
      description: This endpoint is used to fetch the attachments.
      summary: Gets attachments for the selected problem.
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/delete-problem-task/{id}/:
    post:
      operationId: ux_sd_problem_problem_delete_problem_task_create
      description: API endpoint that allows Problem to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Problem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProblemList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProblemList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProblemList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/delete_problem/:
    post:
      operationId: ux_sd_problem_problem_delete_problem_create
      description: API endpoint that allows Problem to be viewed or edited.
      tags:
      - Problem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProblemList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProblemList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProblemList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/history/:
    get:
      operationId: ux_sd_problem_problem_history_retrieve
      description: This endpoint is used to fetch the history.
      summary: Gets history for the selected problem.
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/options/:
    get:
      operationId: ux_sd_problem_problem_options_retrieve
      description: API endpoint that allows Problem to be viewed or edited.
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/problem-data/{id}/:
    get:
      operationId: ux_sd_problem_problem_problem_data_retrieve
      description: API endpoint that allows Problem to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/problem-task-list/{id}/:
    get:
      operationId: ux_sd_problem_problem_problem_task_list_retrieve
      description: API endpoint that allows Problem to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/problem-task/{id}/:
    get:
      operationId: ux_sd_problem_problem_problem_task_retrieve
      description: API endpoint that allows Problem to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/process-rich-text/:
    get:
      operationId: ux_sd_problem_problem_process_rich_text_retrieve
      description: This endpoint is used to get the rich text data.
      summary: Get rich text data
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/relation/:
    post:
      operationId: ux_sd_problem_problem_relation_create
      description: API endpoint that allows Problem to be viewed or edited.
      tags:
      - Problem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProblemList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProblemList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProblemList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/requester_search/:
    get:
      operationId: ux_sd_problem_problem_requester_search_retrieve
      description: API endpoint that allows Problem to be viewed or edited.
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/root_cause_draft/{id}/:
    get:
      operationId: ux_sd_problem_problem_root_cause_draft_retrieve
      description: API endpoint that allows Problem to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/save-problem-task/:
    post:
      operationId: ux_sd_problem_problem_save_problem_task_create
      description: API endpoint that allows Problem to be viewed or edited.
      tags:
      - Problem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProblemList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProblemList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProblemList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/save-rich-text/:
    post:
      operationId: ux_sd_problem_problem_save_rich_text_create
      description: This endpoint is used to save the rich text data.
      summary: Save rich text data
      tags:
      - Problem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProblemList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProblemList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProblemList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/save_problem_cause/:
    post:
      operationId: ux_sd_problem_problem_save_problem_cause_create
      description: API endpoint that allows Problem to be viewed or edited.
      tags:
      - Problem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProblemList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProblemList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProblemList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/top_filter/:
    get:
      operationId: ux_sd_problem_problem_top_filter_retrieve
      description: API endpoint that allows Problem to be viewed or edited.
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/workflow_options_map/:
    post:
      operationId: ux_sd_problem_problem_workflow_options_map_create
      description: API endpoint that allows Problem to be viewed or edited.
      tags:
      - Problem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProblemList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProblemList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProblemList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/problem/problem/workflow_status/:
    get:
      operationId: ux_sd_problem_problem_workflow_status_retrieve
      description: API endpoint that allows Problem to be viewed or edited.
      tags:
      - Problem
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemList'
          description: ''
  /ux/sd/release/conversation/:
    get:
      operationId: ux_sd_release_conversation_retrieve
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_sd_release_conversation_create
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/sd/release/conversation/{id}/:
    get:
      operationId: ux_sd_release_conversation_retrieve_2
      description: API endpoint that allows Incident to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_sd_release_conversation_update
      description: API endpoint that allows Incident to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_sd_release_conversation_destroy
      description: API endpoint that allows Incident to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/sd/release/release/:
    get:
      operationId: ux_sd_release_release_list
      description: This endpoint is used to fetch all the release in the current organization
      summary: Gets a list of releases
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReleaseList'
          description: ''
    post:
      operationId: ux_sd_release_release_create
      description: This endpoint is used to save a new release for the current organization
      summary: 'Creates a new release '
      tags:
      - Release
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateRequestSample:
                value:
                  summary: VPN Issue
                  description: ''
                  catalogue: ''
                  impact_service: ''
                  impact_service_name: service1
                  service_classification: ''
                  service_classification_name: ''
                  state: Open
                  state_id: 1
                  status: New
                  status_id: 1
                  urgency_id: 3
                  urgency: Low
                  priority_id: 5
                  priority: Very Low
                  impact: Department
                  impact_id: 3
                  release_source:
                    id: 1
                    name: Web
                  resolution_type: ''
                  release_type:
                    id: 1
                    name: Release
                    prefix: REQ
                  requester_id: ''
                  requester_name: Test req
                  requester_email: testreq@gmail.com
                  requester_phone: '7778889999'
                  reporter_name: ''
                  reporter_email: ''
                  reporter_phone: ''
                  watcher: ''
                  hold_config: {}
                  support_group: ''
                  assignee: ''
                  escalation: {}
                  tag: []
                  assets: []
                  config: {}
                  reference: {}
                  template_info: {}
                  closure_info: {}
                  approval_config: {}
                  custom_field:
                  - {}
                  attachment: {}
                  api_link: {}
                  lock_config: {}
                  field_service_config: {}
                  closure_note: ''
                summary: Create request Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/sd/release/release/{id}/:
    get:
      operationId: ux_sd_release_release_retrieve
      description: This endpoint is used to fetch a request details in the current
        organization
      summary: Gets a request with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
    put:
      operationId: ux_sd_release_release_update
      description: This endpoint is used to edit an existing release for the current
        organization
      summary: Edits the release with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Release
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReleaseList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
    delete:
      operationId: ux_sd_release_release_destroy
      description: This endpoint is used to delete an existing release for the current
        organization
      summary: Deletes the release with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/sd/release/release/add-attachment/:
    post:
      operationId: ux_sd_release_release_add_attachment_create
      description: This endpoint is used to add new attachments.
      summary: Add attachments for the selected release.
      tags:
      - Release
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReleaseList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/attachment/:
    get:
      operationId: ux_sd_release_release_attachment_retrieve
      description: This endpoint is used to fetch the attachments.
      summary: Gets attachments for the selected release.
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/delete-release-risk/{id}/:
    post:
      operationId: ux_sd_release_release_delete_release_risk_create
      description: API endpoint that allows Request to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Release
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReleaseList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/delete_release/:
    post:
      operationId: ux_sd_release_release_delete_release_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Release
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReleaseList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/history/:
    get:
      operationId: ux_sd_release_release_history_retrieve
      description: This endpoint is used to fetch the history.
      summary: Gets history for the selected release.
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/impact-list/{id}/:
    get:
      operationId: ux_sd_release_release_impact_list_retrieve
      description: |-
        function to get impact list
        :param request:
        :return: object
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/options/:
    get:
      operationId: ux_sd_release_release_options_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/process-rich-text/:
    get:
      operationId: ux_sd_release_release_process_rich_text_retrieve
      description: This endpoint is used to get the rich text data.
      summary: Get rich text data
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/release-data/{id}/:
    get:
      operationId: ux_sd_release_release_release_data_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/release-impact/{id}/:
    get:
      operationId: ux_sd_release_release_release_impact_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/release-risk/{id}/:
    get:
      operationId: ux_sd_release_release_release_risk_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/release-task/{id}/:
    get:
      operationId: ux_sd_release_release_release_task_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/requester_search/:
    get:
      operationId: ux_sd_release_release_requester_search_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/risk-list/{id}/:
    get:
      operationId: ux_sd_release_release_risk_list_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/save-release-impact/:
    post:
      operationId: ux_sd_release_release_save_release_impact_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Release
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReleaseList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/save-release-risk/:
    post:
      operationId: ux_sd_release_release_save_release_risk_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Release
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReleaseList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/save-release-task/:
    post:
      operationId: ux_sd_release_release_save_release_task_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Release
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReleaseList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/save-rich-text/:
    post:
      operationId: ux_sd_release_release_save_rich_text_create
      description: This endpoint is used to save the rich text data.
      summary: Save rich text data
      tags:
      - Release
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReleaseList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/task-list/{id}/:
    get:
      operationId: ux_sd_release_release_task_list_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/workflow_options_map/:
    post:
      operationId: ux_sd_release_release_workflow_options_map_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Release
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReleaseList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReleaseList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/release/release/workflow_status/:
    get:
      operationId: ux_sd_release_release_workflow_status_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Release
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseList'
          description: ''
  /ux/sd/req/conversation/:
    get:
      operationId: ux_sd_req_conversation_retrieve
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Request Process
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_sd_req_conversation_create
      description: API endpoint that allows Incident to be viewed or edited.
      tags:
      - Request Process
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/sd/req/conversation/{id}/:
    get:
      operationId: ux_sd_req_conversation_retrieve_2
      description: API endpoint that allows Incident to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Request Process
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_sd_req_conversation_update
      description: API endpoint that allows Incident to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Request Process
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_sd_req_conversation_destroy
      description: API endpoint that allows Incident to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Request Process
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/sd/req/request_process/:
    get:
      operationId: ux_sd_req_request_process_list
      description: This endpoint is used to fetch all the requests in the current
        organization
      summary: Gets a list of requests
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Request Process
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestList'
          description: ''
    post:
      operationId: ux_sd_req_request_process_create
      description: This endpoint is used to save a new request for the current organization
      summary: 'Creates a new request '
      tags:
      - Request Process
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateRequestSample:
                value:
                  summary: VPN Issue
                  description: ''
                  catalogue: ''
                  impact_service: ''
                  impact_service_name: service1
                  service_classification: ''
                  service_classification_name: ''
                  state: Open
                  state_id: 1
                  status: New
                  status_id: 1
                  urgency_id: 3
                  urgency: Low
                  priority_id: 5
                  priority: Very Low
                  impact: Department
                  impact_id: 3
                  request_source:
                    id: 1
                    name: Web
                  resolution_type: ''
                  request_type:
                    id: 1
                    name: Request
                    prefix: REQ
                  requester_id: ''
                  requester_name: Test req
                  requester_email: testreq@gmail.com
                  requester_phone: '7778889999'
                  reporter_name: ''
                  reporter_email: ''
                  reporter_phone: ''
                  watcher: ''
                  hold_config: {}
                  support_group: ''
                  assignee: ''
                  escalation: {}
                  tag: []
                  assets: []
                  config: {}
                  reference: {}
                  template_info: {}
                  closure_info: {}
                  approval_config: {}
                  custom_field:
                  - {}
                  attachment: {}
                  api_link: {}
                  lock_config: {}
                  field_service_config: {}
                  closure_note: ''
                summary: Create request Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/sd/req/request_process/{id}/:
    get:
      operationId: ux_sd_req_request_process_retrieve
      description: This endpoint is used to fetch a request details in the current
        organization
      summary: Gets a request with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Request Process
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
    put:
      operationId: ux_sd_req_request_process_update
      description: This endpoint is used to edit an existing request for the current
        organization
      summary: Edits the request with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Request Process
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
    delete:
      operationId: ux_sd_req_request_process_destroy
      description: This endpoint is used to delete an existing request for the current
        organization
      summary: Deletes the request with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Request Process
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/sd/req/request_process/attachment/:
    get:
      operationId: ux_sd_req_request_process_attachment_retrieve
      description: This endpoint is used to fetch the attachments.
      summary: Gets attachments for the selected request.
      tags:
      - Request Process
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
  /ux/sd/req/request_process/bulk_retry_api/:
    post:
      operationId: ux_sd_req_request_process_bulk_retry_api_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Request Process
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
  /ux/sd/req/request_process/check_list/:
    get:
      operationId: ux_sd_req_request_process_check_list_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Request Process
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
  /ux/sd/req/request_process/create-request-process-csv/:
    post:
      operationId: ux_sd_req_request_process_create_request_process_csv_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Request Process
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
  /ux/sd/req/request_process/history/:
    get:
      operationId: ux_sd_req_request_process_history_retrieve
      description: This endpoint is used to fetch the history.
      summary: Gets history for the selected request.
      tags:
      - Request Process
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
  /ux/sd/req/request_process/options/:
    get:
      operationId: ux_sd_req_request_process_options_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Request Process
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
  /ux/sd/req/request_process/process-rich-text/:
    get:
      operationId: ux_sd_req_request_process_process_rich_text_retrieve
      description: This endpoint is used to get the rich text data.
      summary: Get rich text data
      tags:
      - Request Process
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
  /ux/sd/req/request_process/requ_check_list/:
    get:
      operationId: ux_sd_req_request_process_requ_check_list_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Request Process
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
  /ux/sd/req/request_process/request-data/{id}/:
    get:
      operationId: ux_sd_req_request_process_request_data_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Request Process
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
  /ux/sd/req/request_process/requester_search/:
    get:
      operationId: ux_sd_req_request_process_requester_search_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Request Process
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
  /ux/sd/req/request_process/save-rich-text/:
    post:
      operationId: ux_sd_req_request_process_save_rich_text_create
      description: This endpoint is used to save the rich text data.
      summary: Save rich text data
      tags:
      - Request Process
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
  /ux/sd/req/request_process/update_requ_checklist/:
    post:
      operationId: ux_sd_req_request_process_update_requ_checklist_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Request Process
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
  /ux/sd/req/request_process/upload-csv/:
    post:
      operationId: ux_sd_req_request_process_upload_csv_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Request Process
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
  /ux/sd/req/request_process/upload-request-process-csv/:
    post:
      operationId: ux_sd_req_request_process_upload_request_process_csv_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Request Process
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
  /ux/sd/req/request_process/workflow_options_map/:
    post:
      operationId: ux_sd_req_request_process_workflow_options_map_create
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Request Process
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestList'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
  /ux/sd/req/request_process/workflow_status/:
    get:
      operationId: ux_sd_req_request_process_workflow_status_retrieve
      description: API endpoint that allows Request to be viewed or edited.
      tags:
      - Request Process
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestList'
          description: ''
  /ux/sd/task/task/:
    get:
      operationId: ux_sd_task_task_list
      description: This endpoint is used to fetch all the tasks in the current organization
      summary: Gets a list of tasks
      parameters:
      - in: query
        name: items_per_page
        schema:
          type: integer
        description: Items Per Page
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page Number
        required: true
      - in: query
        name: reverse
        schema:
          type: boolean
        description: Sorting Order
      - in: query
        name: sort
        schema:
          type: string
        description: Sorting Key
      tags:
      - Task
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskDetails'
          description: ''
    post:
      operationId: ux_sd_task_task_create
      description: This endpoint is used to save a new task for the current organization
      summary: 'Creates a new task '
      tags:
      - Task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              CreateTaskSample:
                value:
                  task: task1
                  type: User
                summary: Create Task Sample
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/sd/task/task/{id}/:
    get:
      operationId: ux_sd_task_task_retrieve
      description: This endpoint is used to fetch a task details in the current organization
      summary: Gets a task with the given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Task
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
          description: ''
    put:
      operationId: ux_sd_task_task_update
      description: This endpoint is used to edit an existing task for the current
        organization
      summary: Edits the task with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskDetails'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
          description: ''
    delete:
      operationId: ux_sd_task_task_destroy
      description: This endpoint is used to delete an existing task for the current
        organization
      summary: Deletes the task with given id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Task
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/sd/task/task/change-task-list/{id}/:
    get:
      operationId: ux_sd_task_task_change_task_list_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Task
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
          description: ''
  /ux/sd/task/task/change-task/{id}/:
    get:
      operationId: ux_sd_task_task_change_task_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Task
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
          description: ''
  /ux/sd/task/task/delete-change-task/{id}/:
    post:
      operationId: ux_sd_task_task_delete_change_task_create
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskDetails'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
          description: ''
  /ux/sd/task/task/delete-release-task/{id}/:
    post:
      operationId: ux_sd_task_task_delete_release_task_create
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskDetails'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
          description: ''
  /ux/sd/task/task/filter/:
    get:
      operationId: ux_sd_task_task_filter_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Task
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
          description: ''
  /ux/sd/task/task/options/:
    get:
      operationId: ux_sd_task_task_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Task
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
          description: ''
  /ux/sd/task/task/rel-task-list/{id}/:
    get:
      operationId: ux_sd_task_task_rel_task_list_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Task
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
          description: ''
  /ux/sd/task/task/release-task/{id}/:
    get:
      operationId: ux_sd_task_task_release_task_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Task
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
          description: ''
  /ux/sd/task/task/req-task-list/{id}/:
    get:
      operationId: ux_sd_task_task_req_task_list_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Task
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
          description: ''
  /ux/sd/task/task/save-change-task/:
    post:
      operationId: ux_sd_task_task_save_change_task_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskDetails'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
          description: ''
  /ux/sd/task/task/save-release-task/:
    post:
      operationId: ux_sd_task_task_save_release_task_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - Task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskDetails'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
          description: ''
  /ux/telecom_config/configurations/:
    get:
      operationId: ux_telecom_config_configurations_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ux_telecom_config_configurations_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '201':
          description: No response body
  /ux/telecom_config/configurations/{id}/:
    get:
      operationId: ux_telecom_config_configurations_retrieve_2
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ux_telecom_config_configurations_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: ux_telecom_config_configurations_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /ux/telecom_config/configurations/about-infraon/:
    get:
      operationId: ux_telecom_config_configurations_about_infraon_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/add-display/:
    post:
      operationId: ux_telecom_config_configurations_add_display_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/alarm-profile-create-csv/:
    post:
      operationId: ux_telecom_config_configurations_alarm_profile_create_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/alarm-profile-csv-cols/:
    post:
      operationId: ux_telecom_config_configurations_alarm_profile_csv_cols_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/alarm-profile-details/:
    get:
      operationId: ux_telecom_config_configurations_alarm_profile_details_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/alarm-profile-download-csv/:
    get:
      operationId: ux_telecom_config_configurations_alarm_profile_download_csv_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/alarm-profile-upload-csv/:
    post:
      operationId: ux_telecom_config_configurations_alarm_profile_upload_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/circuit-discovery/:
    get:
      operationId: ux_telecom_config_configurations_circuit_discovery_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/circuit-retrieve/:
    get:
      operationId: ux_telecom_config_configurations_circuit_retrieve_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/create/:
    post:
      operationId: ux_telecom_config_configurations_create_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/create-csv/:
    post:
      operationId: ux_telecom_config_configurations_create_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/csv_cols/:
    post:
      operationId: ux_telecom_config_configurations_csv_cols_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/delete/:
    get:
      operationId: ux_telecom_config_configurations_delete_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/delete-alarm-profile/:
    get:
      operationId: ux_telecom_config_configurations_delete_alarm_profile_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/delete-led-display/:
    get:
      operationId: ux_telecom_config_configurations_delete_led_display_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/delete-ring/:
    get:
      operationId: ux_telecom_config_configurations_delete_ring_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/details/:
    get:
      operationId: ux_telecom_config_configurations_details_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/display-options/:
    get:
      operationId: ux_telecom_config_configurations_display_options_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/get-alarm-profile/:
    get:
      operationId: ux_telecom_config_configurations_get_alarm_profile_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/get-led-display/:
    get:
      operationId: ux_telecom_config_configurations_get_led_display_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/iteration-list/:
    get:
      operationId: ux_telecom_config_configurations_iteration_list_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/retrieve-trigger-discovery/:
    get:
      operationId: ux_telecom_config_configurations_retrieve_trigger_discovery_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/ring-discovery/:
    get:
      operationId: ux_telecom_config_configurations_ring_discovery_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/save-alarm-profile/:
    post:
      operationId: ux_telecom_config_configurations_save_alarm_profile_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/save-ring/:
    post:
      operationId: ux_telecom_config_configurations_save_ring_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/software-boq/:
    get:
      operationId: ux_telecom_config_configurations_software_boq_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/update-alarm-profile/:
    get:
      operationId: ux_telecom_config_configurations_update_alarm_profile_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /ux/telecom_config/configurations/upload-csv/:
    post:
      operationId: ux_telecom_config_configurations_upload_csv_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - ux
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    APIList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        event_time:
          type: string
          readOnly: true
        communication_id:
          type: string
        msg_type:
          type: integer
        type:
          type: string
        user_id:
          type: string
        received_config_id:
          type: string
        module_id:
          type: integer
        ref_id:
          type: string
        ref_display_id:
          type: string
        is_system_gen:
          type: boolean
        imap_config_id:
          type: string
        attachment_ids:
          type: array
          items: {}
          nullable: true
        created_by:
          type: string
        organization:
          type: string
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
        is_assignee_read:
          type: boolean
        message_read_map:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        customer_id:
          type: string
        customer_entity_id:
          type: string
        is_description:
          type: boolean
        email_data:
          $ref: '#/components/schemas/Embedded'
        sms_data:
          $ref: '#/components/schemas/Embedded'
        api_data:
          $ref: '#/components/schemas/Embedded'
        beep_data:
          $ref: '#/components/schemas/Embedded'
        syslog_data:
          $ref: '#/components/schemas/Embedded'
      required:
      - event_time
      - id
    ApiRegister:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        authentication_type:
          type: string
          readOnly: true
        api_id:
          type: string
          maxLength: 225
        api_modified_id:
          type: string
          nullable: true
        name:
          type: string
          maxLength: 225
        api_url:
          type: string
        description:
          type: string
        client_id:
          type: string
        app_code:
          type: string
        secret_key:
          type: string
        user_name:
          type: string
        api_password:
          type: string
        is_base64_password:
          type: boolean
        auth_key:
          type: string
        auth_value:
          type: string
        content_type:
          type: integer
        auth_type:
          type: integer
        add_key_to:
          type: integer
        token_url:
          type: string
        token_prefix:
          type: string
        csrf_url:
          type: string
        token_key:
          type: string
        token_header_key:
          type: string
        token_body:
          type: string
        csrf_key:
          type: string
        request_type:
          type: integer
        user:
          type: string
        header_params:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        api_type:
          type: integer
        organization:
          type: string
          maxLength: 225
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
        is_active:
          type: boolean
        is_base64:
          type: boolean
        query_param:
          type: boolean
        is_sandbox:
          type: boolean
        sandbox_url:
          type: string
        is_webhook_enabled:
          type: boolean
      required:
      - api_id
      - authentication_type
      - id
      - organization
    BusinessRule:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        module_name:
          type: string
          readOnly: true
        rule_id:
          type: string
        name:
          type: string
          maxLength: 255
        type:
          type: object
          additionalProperties: {}
        is_enable:
          type: boolean
          default: true
        is_override:
          type: boolean
        precedence:
          type: object
          additionalProperties: {}
        module_id:
          type: integer
        depth:
          type: integer
          default: 1
        description:
          type: string
          nullable: true
        is_deleted:
          type: boolean
        is_pre_configured:
          type: boolean
      required:
      - id
      - module_name
    BusinessServiceConfiguration:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        creation_time:
          type: string
          readOnly: true
        last_update_time:
          type: string
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        modified_by_name:
          type: string
          readOnly: true
        maintenance_status:
          type: string
          readOnly: true
        maintenance_status_label:
          type: string
          readOnly: true
        business_service_id:
          type: string
        ci_id:
          type: string
        organization:
          type: string
          maxLength: 25
        name:
          type: string
        grid_background:
          type: boolean
          default: true
        style_property:
          type: object
          additionalProperties: {}
        created_by:
          type: integer
        modified_by:
          type: integer
        is_enabled:
          type: boolean
        is_deleted:
          type: boolean
        maintenance:
          type: object
          additionalProperties: {}
      required:
      - created_by_name
      - creation_time
      - id
      - last_update_time
      - maintenance_status
      - maintenance_status_label
      - modified_by_name
      - organization
    Catalogue:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        catalogue_id:
          type: string
          maxLength: 25
        name:
          type: string
        parent_id:
          type: string
        description:
          type: string
        type:
          type: string
        classification:
          type: object
          additionalProperties: {}
        user_tag:
          type: array
          items: {}
        team:
          type: array
          items: {}
        is_deleted:
          type: boolean
        organization:
          type: string
      required:
      - catalogue_id
      - id
      - organization
    CeleryTaskManager:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        last_heartbeat_tooltip:
          type: string
          readOnly: true
        last_heartbeat_time:
          type: string
          readOnly: true
        async_task_status:
          type: string
          readOnly: true
        conv_task_name:
          type: string
          readOnly: true
        task_id:
          type: string
          maxLength: 25
        organization:
          type: string
          maxLength: 25
        task_name:
          type: string
        worker_name:
          type: string
        worker_ip:
          type: string
          nullable: true
        worker_hostname:
          type: string
          nullable: true
        description:
          type: string
        queue_name:
          type: string
        last_heart_beat:
          type: string
          format: date-time
        is_enabled:
          type: boolean
        task_path:
          type: string
        task_trigger_data:
          type: string
        is_deleted:
          type: boolean
      required:
      - async_task_status
      - conv_task_name
      - id
      - last_heartbeat_time
      - last_heartbeat_tooltip
      - organization
      - status
      - task_id
      - task_name
    ChangeList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        change_id:
          type: string
          maxLength: 25
        display_id:
          type: string
          maxLength: 50
        is_archive:
          type: boolean
        unread_mail:
          type: boolean
        requester:
          $ref: '#/components/schemas/Embedded'
        config:
          $ref: '#/components/schemas/Embedded'
        reporter_info:
          $ref: '#/components/schemas/Embedded'
        basic_info:
          $ref: '#/components/schemas/Embedded'
        impacted_asset:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        close_info:
          $ref: '#/components/schemas/Embedded'
        current_watcher:
          type: array
          items: {}
        current_assignment_info:
          $ref: '#/components/schemas/Embedded'
        tag:
          type: array
          items: {}
        kb:
          type: array
          items: {}
        custom_field_data:
          type: object
          additionalProperties: {}
        creation_time:
          type: string
          format: date-time
        created_by_id:
          type: string
          maxLength: 225
        last_update_time:
          type: string
          format: date-time
        updated_by_id:
          type: string
          maxLength: 225
        change_manager:
          type: object
          additionalProperties: {}
        due_date:
          type: string
          format: date-time
        is_change_ci_lock:
          type: integer
        location:
          type: object
          additionalProperties: {}
      required:
      - change_id
    Checklist:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        name:
          type: string
          maxLength: 255
        checklist_id:
          type: string
        module_name:
          type: string
          readOnly: true
        workflow_name:
          type: string
          readOnly: true
        catalogue_service_name:
          type: string
          readOnly: true
        workflow_type:
          type: string
          readOnly: true
        status_name:
          type: string
          readOnly: true
        module_id:
          type: integer
      required:
      - catalogue_service_name
      - module_name
      - status_name
      - workflow_name
      - workflow_type
    CliJobs:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        created_time:
          type: string
          readOnly: true
        client_type_:
          type: string
          readOnly: true
          title: 'Client type '
        session_status:
          type: string
          readOnly: true
        session_recording_status:
          type: string
          readOnly: true
        user_name:
          type: string
          readOnly: true
        first_access_time:
          type: string
          readOnly: true
        last_access_time:
          type: string
          readOnly: true
        duration:
          type: string
          readOnly: true
        session_end_time:
          type: string
          readOnly: true
        hide_tail:
          type: string
          readOnly: true
        hide_session:
          type: string
          readOnly: true
        download_audit:
          type: string
          readOnly: true
        cli_sso_icons:
          type: string
          readOnly: true
        is_ssh:
          type: string
          readOnly: true
        is_telnet:
          type: string
          readOnly: true
        is_approved_by:
          type: string
          readOnly: true
        approve_time:
          type: string
          readOnly: true
        access_duration:
          type: string
          readOnly: true
        approval_required:
          type: string
          readOnly: true
        access_count_tried:
          type: string
          readOnly: true
        cli_job_id:
          type: string
          maxLength: 25
        organization:
          type: string
          default: '-1'
        ci_id:
          type: string
          default: '-1'
        status:
          type: integer
          default: -1
        userId:
          type: integer
          default: -1
        session_id:
          type: string
        comments:
          type: string
        start_time:
          type: string
          format: date-time
        client_type:
          type: string
        ssh_user:
          type: string
        creation_time:
          type: string
          format: date-time
        distributed_ip:
          type: string
        poll_addr:
          type: string
        port:
          type: integer
        audits:
          type: string
        approval_type:
          type: string
        approved_by:
          type: string
        approved_time:
          type: string
          format: date-time
        firstaccess_time:
          type: string
          format: date-time
          nullable: true
        lastaccess_time:
          type: string
          format: date-time
        accessclose_time:
          type: string
          format: date-time
        how_long:
          type: integer
          nullable: true
        how_many_times:
          type: integer
        how_many_times_tried:
          type: integer
        last_update_time:
          type: string
          format: date-time
        file_size:
          type: string
        django_process_no:
          type: integer
        session_recording:
          type: integer
        distributed_file_copy:
          type: integer
        incident_id:
          type: string
        updated_sm_incident:
          type: integer
        agent_access_user:
          type: string
        ha_inserted:
          type: integer
        is_deleted:
          type: boolean
        access_reason:
          type: string
        client_ip:
          type: string
        session_end_reason:
          type: string
        authrz_profile_id:
          type: string
          nullable: true
        change_request_id:
          type: string
        agent_ip:
          type: string
        default_grant:
          type: string
        change_request_info:
          type: object
          additionalProperties: {}
        is_response_data_sent:
          type: boolean
        approval_request_time:
          type: string
          format: date-time
          nullable: true
        approval_expiry_time:
          type: string
          format: date-time
          nullable: true
        requester_info:
          type: object
          additionalProperties: {}
          nullable: true
        cli_sso_path:
          type: string
          nullable: true
      required:
      - access_count_tried
      - access_duration
      - approval_required
      - approve_time
      - cli_job_id
      - cli_sso_icons
      - client_type_
      - created_time
      - download_audit
      - duration
      - first_access_time
      - hide_session
      - hide_tail
      - id
      - is_approved_by
      - is_ssh
      - is_telnet
      - last_access_time
      - session_end_time
      - session_recording_status
      - session_status
      - user_name
    ConfigurationPolicies:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        creationtime:
          type: string
          readOnly: true
        last_update_time:
          type: string
          readOnly: true
        next_action_time:
          type: string
          readOnly: true
        last_action_time:
          type: string
          readOnly: true
        is_private:
          type: string
          readOnly: true
        rule_description:
          type: string
          readOnly: true
        schedule_descr:
          type: string
          readOnly: true
        visibility:
          type: string
          readOnly: true
        policyid:
          type: string
          maxLength: 25
        name:
          type: string
        description:
          type: string
        organization:
          type: string
          maxLength: 25
        processid:
          type: integer
          default: 1
        associate_users:
          type: string
        associate_groups:
          type: string
        associated_rules:
          type: string
        associated_rule_groups:
          type: array
          items: {}
        lastupdatetime:
          type: string
          format: date-time
        activated_by:
          type: string
        activation_time:
          type: string
          format: date-time
        activation_remarks:
          type: string
        policy_schedule:
          type: object
          additionalProperties: {}
        lastaction:
          type: string
          format: date-time
        nextaction:
          type: string
          format: date-time
        progress:
          type: integer
        starttime:
          type: integer
        endtime:
          type: integer
        created_by:
          type: string
        modified_by:
          type: string
        assigned_users:
          type: array
          items: {}
        assigned_group:
          type: array
          items: {}
        is_deleted:
          type: boolean
      required:
      - creationtime
      - id
      - is_private
      - last_action_time
      - last_update_time
      - next_action_time
      - organization
      - policyid
      - rule_description
      - schedule_descr
      - status
      - visibility
    ConfigurationProfiles:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        creation_time:
          type: string
          readOnly: true
        isreviewed:
          type: boolean
          default: false
        reviewed_by_name:
          type: string
          readOnly: true
        profile_id:
          type: string
          maxLength: 25
        profile_name:
          type: string
        description:
          type: string
        make:
          type: string
        os_name:
          type: string
        series:
          type: string
        connection:
          type: object
          additionalProperties: {}
        config_download:
          type: object
          additionalProperties: {}
        config_upload:
          type: object
          additionalProperties: {}
        os_download:
          type: object
          additionalProperties: {}
        operational_data:
          type: object
          additionalProperties: {}
        other_configuration:
          type: object
          additionalProperties: {}
        syslog:
          type: object
          additionalProperties: {}
        comment:
          type: object
          additionalProperties: {}
        last_update_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
        ztp_templates:
          type: array
          items: {}
          nullable: true
        mandatory_field:
          type: string
          nullable: true
        is_reviewed:
          type: boolean
          nullable: true
        reviewed_by:
          type: string
          nullable: true
      required:
      - creation_time
      - id
      - profile_id
      - reviewed_by_name
    ConfigurationRule:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        rule_config_severity:
          type: string
          readOnly: true
        rule_type:
          type: string
          readOnly: true
        match_criteria:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        rollback_type:
          type: string
          readOnly: true
        on_violation_perform:
          type: string
          readOnly: true
        remedy_configured:
          type: string
          readOnly: true
        rule_description:
          type: string
          readOnly: true
        ruleid:
          type: string
          maxLength: 25
        rule_display_id:
          type: string
        organization:
          type: string
          maxLength: 25
        last_update_time:
          type: string
          format: date-time
        creation_time:
          type: string
          format: date-time
        created_by:
          type: string
        modified_by:
          type: string
        is_deleted:
          type: boolean
        is_private:
          type: boolean
        assigned_users:
          type: array
          items: {}
        assigned_group:
          type: array
          items: {}
        creator:
          type: string
        name:
          type: string
        description:
          type: string
        compliance_standard:
          type: string
        compliance_details:
          type: string
        rule_execution_type:
          type: integer
        activation:
          type: boolean
          default: true
        is_enabled:
          type: boolean
          default: true
        vendor:
          type: string
        os_type:
          type: string
        is_editable:
          type: boolean
        device_type:
          type: string
        config_type:
          type: string
        inv_commands:
          type: string
        other_configs:
          type: string
        config_script_id:
          type: string
        config_script_commands:
          type: string
        cve_ids:
          type: array
          items: {}
          nullable: true
        nw_reviews:
          type: string
        execution:
          type: boolean
        rule_start_time:
          type: string
          format: date-time
        rule_end_time:
          type: string
          format: date-time
        severity:
          type: integer
        alarm_msg:
          type: string
        notifier_id:
          type: string
        rollback_script_id:
          type: string
        rollback_script_commands:
          type: string
        rollback_script_adv_commands:
          type: string
        rollback_comments:
          type: string
        continue_nextcommand_on_failure:
          type: boolean
        rule_info:
          type: string
        template_id:
          type: string
        os_version:
          type: string
      required:
      - id
      - match_criteria
      - on_violation_perform
      - organization
      - remedy_configured
      - rollback_type
      - rule_config_severity
      - rule_description
      - rule_display_id
      - rule_type
      - ruleid
      - status
    ConfigurationTemplates:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        modified_by_name:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        is_private:
          type: string
          readOnly: true
        user_list:
          type: string
          readOnly: true
        teams_list:
          type: string
          readOnly: true
        configuration_template_visibility:
          type: string
          readOnly: true
        simple_script_exe_visibility:
          type: string
          readOnly: true
        template_id:
          type: string
          maxLength: 25
        organization:
          type: string
          maxLength: 25
        name:
          type: string
        description:
          type: string
        vendor:
          type: string
        os_name:
          type: string
        model:
          type: string
        series:
          type: string
        template_type:
          type: string
        script_type:
          type: integer
        is_approval_required:
          type: boolean
        is_production_enabled:
          type: boolean
        quick_add:
          type: boolean
        script_commands:
          type: string
        script_profile_commands:
          type: string
        script_profile_commands_primary:
          type: string
          nullable: true
        script_profile_commands_secondary:
          type: string
          nullable: true
        script_profile_commands_tertiary:
          type: string
          nullable: true
        configuration_store:
          type: string
        shell:
          type: string
        last_update_time:
          type: string
          format: date-time
        template_group:
          type: string
        created_by:
          type: string
        modified_by:
          type: string
        creation_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
        is_enabled:
          type: boolean
          default: true
        assigned_users:
          type: array
          items: {}
        assigned_group:
          type: array
          items: {}
        creator:
          type: string
      required:
      - configuration_template_visibility
      - created_by_name
      - id
      - is_private
      - modified_by_name
      - organization
      - simple_script_exe_visibility
      - status
      - teams_list
      - template_id
      - user_list
    ConfigurationTrigger:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        modified_by_name:
          type: string
          readOnly: true
        creationtime:
          type: string
          readOnly: true
        last_update_time:
          type: string
          readOnly: true
        trigger_commands:
          type: string
          readOnly: true
        parser_text:
          type: string
          readOnly: true
        trigger_type:
          type: string
          readOnly: true
        trigger_parser_type:
          type: string
          readOnly: true
        trigger_id:
          type: string
        trigger_name:
          type: string
        organization:
          type: string
          maxLength: 25
        description:
          type: string
        vendor:
          type: string
        os_name:
          type: string
        is_private:
          type: boolean
        trigger_column_index:
          type: integer
          default: 1
        created_by:
          type: integer
        modified_by:
          type: integer
        is_deleted:
          type: boolean
        assigned_users:
          type: array
          items: {}
        assigned_group:
          type: array
          items: {}
      required:
      - created_by_name
      - creationtime
      - id
      - last_update_time
      - modified_by_name
      - organization
      - parser_text
      - trigger_commands
      - trigger_id
      - trigger_parser_type
      - trigger_type
    Container:
      type: object
      description: Container serializers
      properties:
        id:
          type: string
          readOnly: true
        subnet:
          type: string
          readOnly: true
        mask:
          type: string
          readOnly: true
        reservation_method:
          type: string
          readOnly: true
        ip_count:
          type: string
          readOnly: true
        organization:
          type: string
        customer_id:
          type: string
        customer_entity_id:
          type: array
          items: {}
        config_id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        ip_version:
          type: integer
        is_deleted:
          type: boolean
        category:
          type: string
        id_info:
          type: object
          additionalProperties: {}
        user_info:
          type: array
          items: {}
        role_info:
          type: array
          items: {}
        team_info:
          type: array
          items: {}
        ip_address:
          type: string
        utilization_threshold_breach:
          type: integer
        subnet_mask:
          type: integer
        is_reserved:
          type: boolean
        is_availability:
          type: boolean
        is_inventory:
          type: boolean
        reservation_config:
          type: object
          additionalProperties: {}
        availability_config:
          type: object
          additionalProperties: {}
        inventory_config:
          type: object
          additionalProperties: {}
        agent_id:
          type: string
        last_scan_completed:
          type: string
          format: date-time
        last_scan_status:
          type: integer
        last_inv_scan_status:
          type: integer
        last_inv_scan_time:
          type: string
          format: date-time
        last_group_inv_scan_time:
          type: string
          format: date-time
        next_action_time:
          type: string
          format: date-time
        created_by:
          type: string
        modified_by:
          type: string
        schedule_config:
          type: object
          additionalProperties: {}
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
      required:
      - config_id
      - id
      - ip_count
      - mask
      - reservation_method
      - subnet
    ContractList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        contract_id:
          type: string
        contract_name:
          type: string
          maxLength: 255
        contract_type:
          type: string
          readOnly: true
        display_id:
          type: string
          maxLength: 255
        expiry_date:
          type: string
          readOnly: true
        vendor:
          type: string
          readOnly: true
        manufacturer:
          type: string
        contract_status:
          type: string
          readOnly: true
        status:
          type: object
          additionalProperties: {}
        state:
          type: string
        auto_renew:
          type: boolean
        contract_model:
          type: string
          maxLength: 255
      required:
      - contract_status
      - contract_type
      - expiry_date
      - state
      - vendor
    Department:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        ci_display_name:
          type: string
        ci_descr:
          type: string
        dept_id:
          type: string
          maxLength: 25
        organization:
          type: string
          maxLength: 25
        dept_name:
          type: string
        dept_head:
          type: string
        prime_user:
          type: array
          items: {}
        description:
          type: string
        created_by:
          type: integer
        modified_by:
          type: integer
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
        is_demo_data:
          type: boolean
      required:
      - ci_descr
      - ci_display_name
      - dept_id
      - id
      - name
      - organization
    DeviceGroup:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
        organization:
          type: string
        device_group_id:
          type: string
          maxLength: 25
        name:
          type: string
        description:
          type: string
        device_group_filters:
          type: array
          items: {}
        creation_time:
          type: string
          format: date-time
        created_by:
          type: integer
        modified_by:
          type: integer
        last_update_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
      required:
      - device_group_id
      - id
      - name
      - organization
    DeviceTemplate:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        modified_by_name:
          type: string
          readOnly: true
        device_icon:
          type: string
          readOnly: true
        creation_time:
          type: string
          readOnly: true
        last_update_time:
          type: string
          readOnly: true
        sys_id:
          type: string
        sysobjectid:
          type: string
        organization:
          type: string
        product:
          type: string
        vendor:
          type: string
        device_type:
          type: string
        os_type:
          type: string
        model:
          type: string
        series:
          type: string
        is_deleted:
          type: boolean
        modified_by:
          type: string
        created_by:
          type: string
        vendor_icon:
          type: string
        os_icon:
          type: string
        device:
          type: object
          additionalProperties: {}
        version:
          type: integer
        is_versioned:
          type: boolean
        resource:
          type: array
          items: {}
      required:
      - created_by_name
      - creation_time
      - device_icon
      - id
      - last_update_time
      - modified_by_name
      - organization
      - sys_id
      - sysobjectid
    DiscoveryConfiguration:
      type: object
      description: Discovery Configuration serializers
      properties:
        id:
          type: string
          readOnly: true
        sdwan_vendor:
          type: string
          readOnly: true
        edgeDevice_credentials:
          type: string
          readOnly: true
        last_update_time:
          type: string
          readOnly: true
        job_id:
          type: string
        label:
          type: string
        description:
          type: string
        organization:
          type: string
        agent_id:
          type: string
        host:
          type: string
        secondary_host:
          type: string
        params:
          type: object
          additionalProperties: {}
        credentials:
          type: array
          items: {}
        configuration_credentials:
          type: array
          items: {}
        add_to_nccm:
          type: boolean
        filter:
          type: array
          items: {}
        schedule:
          type: object
          additionalProperties: {}
        alarmschedule:
          type: object
          additionalProperties: {}
        protocol:
          type: array
          items: {}
        configuration_protocol:
          type: array
          items: {}
        is_csv_upload:
          type: integer
        csv_data:
          type: array
          items: {}
        created_by:
          type: integer
        modified_by:
          type: integer
        creation_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
        job_iteration_id:
          type: string
        last_scan_result:
          type: object
          additionalProperties: {}
        configuration_download:
          type: boolean
        download_params:
          type: object
          additionalProperties: {}
        customer_id:
          type: string
        customer_entity_id:
          type: string
      required:
      - edgeDevice_credentials
      - id
      - job_id
      - last_update_time
      - sdwan_vendor
    Embedded:
      type: object
      description: |-
        Serializer for EmbeddedDocuments.

        Skips id field and uniqueness validation.
        When saving, skips calling instance.save
      properties:
        keys:
          type: string
        values:
          type: string
        queryparam:
          type: boolean
    FieldConfigList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        workflow_name:
          type: string
        workflow_id:
          type: string
        module:
          type: string
          readOnly: true
        role_name:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        field_config_id:
          type: string
        config_type_name:
          type: string
          readOnly: true
      required:
      - config_type_name
      - module
      - role_name
      - status
    Group:
      type: object
      description: Serializes groups querysets.
      properties:
        role_name:
          type: string
          nullable: true
          maxLength: 250
        parent_role:
          type: string
          nullable: true
          maxLength: 250
        description:
          type: string
          nullable: true
          maxLength: 3000
        group_id:
          type: integer
        organization:
          type: string
          maxLength: 25
        is_pre_configure:
          type: boolean
        role_type:
          type: integer
          default: 1
        event_map:
          type: string
          readOnly: true
        last_update_time:
          type: string
          format: date-time
        is_editable:
          type: boolean
          default: true
      required:
      - event_map
      - organization
    IncidentList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        incident_id:
          type: string
          maxLength: 25
        display_id:
          type: string
          maxLength: 50
        is_merge_incident:
          type: boolean
        is_archive:
          type: boolean
        unread_mail:
          type: boolean
        requester:
          $ref: '#/components/schemas/Embedded'
        config:
          $ref: '#/components/schemas/Embedded'
        reporter_info:
          $ref: '#/components/schemas/Embedded'
        basic_info:
          $ref: '#/components/schemas/Embedded'
        reference:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        source_info:
          $ref: '#/components/schemas/Embedded'
        template_info:
          $ref: '#/components/schemas/Embedded'
        impacted_asset:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        close_info:
          $ref: '#/components/schemas/Embedded'
        current_watcher:
          type: array
          items: {}
        current_assignment_info:
          $ref: '#/components/schemas/Embedded'
        custom_field:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        tag:
          type: array
          items: {}
        kb:
          type: array
          items: {}
        custom_field_data:
          type: object
          additionalProperties: {}
        creation_time:
          type: string
          format: date-time
        created_by_id:
          type: string
          maxLength: 225
        last_update_time:
          type: string
          format: date-time
        updated_by_id:
          type: string
          maxLength: 225
        location:
          type: object
          additionalProperties: {}
      required:
      - incident_id
    ItemClassificationConfig:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        customer_id:
          type: string
          readOnly: true
        customer_entity_id:
          type: string
          readOnly: true
        template_id:
          type: string
        template_name:
          type: string
        cmdb_class:
          type: integer
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
        is_preconfigured:
          type: boolean
      required:
      - customer_entity_id
      - customer_id
      - id
      - template_id
    JobAccountAudit:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        creationtime:
          type: string
          readOnly: true
        agent_id:
          type: string
          readOnly: true
        connection_status:
          type: string
          readOnly: true
        failure_message:
          type: string
          readOnly: true
        organization:
          type: string
          maxLength: 25
        job_id:
          type: string
        ci_id:
          type: string
        job_iteration_id:
          type: string
        ipaddress:
          type: string
          maxLength: 225
        device_account:
          type: string
          maxLength: 225
        dpassword:
          type: string
          maxLength: 225
        denable_password:
          type: string
          maxLength: 225
        connection_protocol:
          type: string
          maxLength: 25
        error:
          type: string
          maxLength: 2000
        task_owner:
          type: string
          maxLength: 225
        client_ip:
          type: string
          maxLength: 225
        job_type:
          type: string
          maxLength: 225
        job_name:
          type: string
          maxLength: 225
        process_name:
          type: string
          maxLength: 225
        connection_for:
          type: string
          maxLength: 225
        last_update_time:
          type: string
          format: date-time
        config_type:
          type: string
          maxLength: 225
        uofw:
          type: string
          maxLength: 225
      required:
      - agent_id
      - connection_status
      - creationtime
      - failure_message
      - id
      - organization
    JobConfig:
      type: object
      description: Jobs serializers
      properties:
        id:
          type: string
          readOnly: true
        object_id:
          type: string
        organization:
          type: string
        agent_id:
          type: string
        object_type:
          type: string
        action:
          type: string
        primary_id:
          type: string
        status:
          type: integer
        data:
          type: string
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
        mtime:
          type: integer
        user_id:
          type: integer
        filename:
          type: string
      required:
      - id
      - object_id
    KBList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        kb_id:
          type: string
          maxLength: 25
        title:
          type: string
          readOnly: true
        content:
          type: string
          readOnly: true
        creation_time:
          type: string
          readOnly: true
        kbtype:
          type: string
          readOnly: true
        created_by:
          type: string
          nullable: true
        keywords:
          type: string
          readOnly: true
        config:
          $ref: '#/components/schemas/Embedded'
        faqs:
          type: string
          readOnly: true
        known_error:
          type: string
          readOnly: true
        image:
          type: string
          readOnly: true
        rating:
          type: string
          readOnly: true
        likes:
          type: string
          readOnly: true
        views:
          type: string
          readOnly: true
        bookmarks:
          type: string
          readOnly: true
        user_liked:
          type: string
          readOnly: true
        rating_count:
          type: string
          readOnly: true
        is_bookmarked:
          type: string
          readOnly: true
        comments:
          type: string
          readOnly: true
        last_update_time:
          type: string
          readOnly: true
        is_updated:
          type: string
          readOnly: true
        creator:
          type: integer
          nullable: true
        display_id:
          type: string
          maxLength: 50
        notify_users:
          type: string
          readOnly: true
      required:
      - bookmarks
      - comments
      - content
      - creation_time
      - faqs
      - image
      - is_bookmarked
      - is_updated
      - kb_id
      - kbtype
      - keywords
      - known_error
      - last_update_time
      - likes
      - notify_users
      - rating
      - rating_count
      - title
      - user_liked
      - views
    LeavesList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        username:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        reason:
          type: string
        days:
          type: integer
        leave_id:
          type: string
        leave_type:
          type: string
        user:
          type: string
        email:
          type: string
          readOnly: true
      required:
      - email
      - username
    Meeting:
      type: object
      description: Meeting serializers
      properties:
        id:
          type: string
          readOnly: true
        meeting_id:
          type: string
          maxLength: 25
        organization:
          type: string
          maxLength: 225
        display_id:
          type: string
        title:
          type: string
          maxLength: 225
        meeting_type:
          type: object
          additionalProperties: {}
        schedule_type:
          type: object
          additionalProperties: {}
        reference_id:
          type: array
          items: {}
        module_id:
          type: integer
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        location:
          type: string
          maxLength: 225
        conference_room:
          type: string
          maxLength: 225
        description:
          type: string
          maxLength: 225
        attendes:
          type: array
          items: {}
        meeting_status:
          type: integer
        note_taker:
          type: string
          maxLength: 225
        start_status:
          type: string
          readOnly: true
        created_by_name:
          type: string
          maxLength: 225
        created_by_id:
          type: integer
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
        updated_by_id:
          type: string
          maxLength: 225
        updated_by_name:
          type: string
          maxLength: 225
        agenda_list:
          type: array
          items: {}
        conference_type:
          type: object
          additionalProperties: {}
        meeting_link:
          type: string
          maxLength: 225
        associate_with:
          type: object
          additionalProperties: {}
        associated_items:
          type: array
          items: {}
        recurring_type:
          type: integer
        recurring_day:
          type: integer
        recurring_week_day:
          type: string
        schedule_end_date:
          type: string
          format: date-time
      required:
      - id
      - meeting_id
      - organization
      - start_status
    MibExplorer:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        mib_id:
          type: string
          maxLength: 25
        organization:
          type: string
          maxLength: 25
        mib_name:
          type: string
        mib_description:
          type: string
        mibdata:
          type: array
          items: {}
        oid_name_map:
          type: object
          additionalProperties: {}
        name_type_map:
          type: object
          additionalProperties: {}
        is_deleted:
          type: boolean
        mib_file:
          type: string
          maxLength: 255
        mib_file_dependencies:
          type: array
          items: {}
      required:
      - id
      - mib_id
      - organization
    OSImage:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        last_update_time:
          type: string
          readOnly: true
        image_id:
          type: string
          readOnly: true
        download_status_obj:
          type: string
          readOnly: true
        uploader_profile:
          type: string
          readOnly: true
        img_id:
          type: string
          maxLength: 25
        organization:
          type: string
          maxLength: 25
        vendor:
          type: string
        description:
          type: string
        ostype:
          type: string
        series:
          type: string
        model:
          type: string
        os_version:
          type: string
        image_type:
          type: string
        image_size:
          type: string
        min_dram:
          type: integer
        min_flash:
          type: integer
        md5_hash:
          type: string
        file_name:
          type: string
        file_path:
          type: string
        creation_time:
          type: string
          format: date-time
        modified_time:
          type: string
          format: date-time
        uploader_id:
          type: string
          nullable: true
          default: '2'
        uploaded_by:
          type: string
        uploaded_type:
          type: integer
        is_checked:
          type: boolean
        is_deleted:
          type: boolean
        job_iteration_id:
          type: string
        job_id:
          type: string
        is_private:
          type: boolean
        assigned_users:
          type: array
          items: {}
        assigned_group:
          type: array
          items: {}
      required:
      - download_status_obj
      - id
      - image_id
      - img_id
      - last_update_time
      - organization
      - uploader_profile
    OrganizationLocation:
      type: object
      description: Serializes organization location querysets.
      properties:
        id:
          type: string
          readOnly: true
        location_id:
          type: string
          maxLength: 25
        region:
          type: string
          maxLength: 100
        location_name:
          type: string
          maxLength: 256
        description:
          type: string
          maxLength: 1000
        country:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        city:
          type: string
          maxLength: 100
        area:
          type: string
          maxLength: 100
        subarea:
          type: string
          maxLength: 100
        address:
          type: string
          maxLength: 1000
        created_by_gis:
          type: boolean
        city_bb:
          type: string
          maxLength: 100
        pincode:
          type: string
          maxLength: 100
        landmark:
          type: string
          maxLength: 100
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        district:
          type: string
          maxLength: 100
        address_type:
          type: string
          maxLength: 255
        is_ci:
          type: boolean
        base_radius:
          type: number
          format: float
        is_preconfigured:
          type: boolean
      required:
      - id
      - location_id
    PaginatedLeavesListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&items_per_page=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&items_per_page=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/LeavesList'
    Partner:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        profile_image:
          type: string
          readOnly: true
        partner_id:
          type: string
          maxLength: 25
        organization:
          type: string
          maxLength: 25
        partner_name:
          type: string
          maxLength: 255
        email:
          type: string
          maxLength: 255
        contact_number:
          type: string
          nullable: true
          maxLength: 255
        password:
          type: string
        phone:
          type: object
          additionalProperties: {}
        address:
          type: string
          maxLength: 200
        partner_operators:
          type: array
          items: {}
        avatar_color:
          type: string
          nullable: true
        group_id:
          type: integer
        profile_id:
          type: string
          nullable: true
          maxLength: 25
        user_id:
          type: integer
        created_by:
          type: integer
        modified_by:
          type: integer
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
      required:
      - email
      - id
      - organization
      - partner_id
      - partner_name
      - profile_image
    PatchedAPIList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        event_time:
          type: string
          readOnly: true
        communication_id:
          type: string
        msg_type:
          type: integer
        type:
          type: string
        user_id:
          type: string
        received_config_id:
          type: string
        module_id:
          type: integer
        ref_id:
          type: string
        ref_display_id:
          type: string
        is_system_gen:
          type: boolean
        imap_config_id:
          type: string
        attachment_ids:
          type: array
          items: {}
          nullable: true
        created_by:
          type: string
        organization:
          type: string
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
        is_assignee_read:
          type: boolean
        message_read_map:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        customer_id:
          type: string
        customer_entity_id:
          type: string
        is_description:
          type: boolean
        email_data:
          $ref: '#/components/schemas/Embedded'
        sms_data:
          $ref: '#/components/schemas/Embedded'
        api_data:
          $ref: '#/components/schemas/Embedded'
        beep_data:
          $ref: '#/components/schemas/Embedded'
        syslog_data:
          $ref: '#/components/schemas/Embedded'
    PatchedCatalogue:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        catalogue_id:
          type: string
          maxLength: 25
        name:
          type: string
        parent_id:
          type: string
        description:
          type: string
        type:
          type: string
        classification:
          type: object
          additionalProperties: {}
        user_tag:
          type: array
          items: {}
        team:
          type: array
          items: {}
        is_deleted:
          type: boolean
        organization:
          type: string
    PatchedKBList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        kb_id:
          type: string
          maxLength: 25
        title:
          type: string
          readOnly: true
        content:
          type: string
          readOnly: true
        creation_time:
          type: string
          readOnly: true
        kbtype:
          type: string
          readOnly: true
        created_by:
          type: string
          nullable: true
        keywords:
          type: string
          readOnly: true
        config:
          $ref: '#/components/schemas/Embedded'
        faqs:
          type: string
          readOnly: true
        known_error:
          type: string
          readOnly: true
        image:
          type: string
          readOnly: true
        rating:
          type: string
          readOnly: true
        likes:
          type: string
          readOnly: true
        views:
          type: string
          readOnly: true
        bookmarks:
          type: string
          readOnly: true
        user_liked:
          type: string
          readOnly: true
        rating_count:
          type: string
          readOnly: true
        is_bookmarked:
          type: string
          readOnly: true
        comments:
          type: string
          readOnly: true
        last_update_time:
          type: string
          readOnly: true
        is_updated:
          type: string
          readOnly: true
        creator:
          type: integer
          nullable: true
        display_id:
          type: string
          maxLength: 50
        notify_users:
          type: string
          readOnly: true
    PatchedLeavesList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        username:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        reason:
          type: string
        days:
          type: integer
        leave_id:
          type: string
        leave_type:
          type: string
        user:
          type: string
        email:
          type: string
          readOnly: true
    PatchedSMSList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        event_time:
          type: string
          readOnly: true
        communication_id:
          type: string
        msg_type:
          type: integer
        type:
          type: string
        user_id:
          type: string
        received_config_id:
          type: string
        module_id:
          type: integer
        ref_id:
          type: string
        ref_display_id:
          type: string
        is_system_gen:
          type: boolean
        imap_config_id:
          type: string
        attachment_ids:
          type: array
          items: {}
          nullable: true
        created_by:
          type: string
        organization:
          type: string
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
        is_assignee_read:
          type: boolean
        message_read_map:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        customer_id:
          type: string
        customer_entity_id:
          type: string
        is_description:
          type: boolean
        email_data:
          $ref: '#/components/schemas/Embedded'
        sms_data:
          $ref: '#/components/schemas/Embedded'
        api_data:
          $ref: '#/components/schemas/Embedded'
        beep_data:
          $ref: '#/components/schemas/Embedded'
        syslog_data:
          $ref: '#/components/schemas/Embedded'
    PatchedSyslogList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        event_time:
          type: string
          readOnly: true
        communication_id:
          type: string
        msg_type:
          type: integer
        type:
          type: string
        user_id:
          type: string
        received_config_id:
          type: string
        module_id:
          type: integer
        ref_id:
          type: string
        ref_display_id:
          type: string
        is_system_gen:
          type: boolean
        imap_config_id:
          type: string
        attachment_ids:
          type: array
          items: {}
          nullable: true
        created_by:
          type: string
        organization:
          type: string
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
        is_assignee_read:
          type: boolean
        message_read_map:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        customer_id:
          type: string
        customer_entity_id:
          type: string
        is_description:
          type: boolean
        email_data:
          $ref: '#/components/schemas/Embedded'
        sms_data:
          $ref: '#/components/schemas/Embedded'
        api_data:
          $ref: '#/components/schemas/Embedded'
        beep_data:
          $ref: '#/components/schemas/Embedded'
        syslog_data:
          $ref: '#/components/schemas/Embedded'
    PenaltyConfiguration:
      type: object
      description: Penalty Configuration Serializers
      properties:
        id:
          type: string
          readOnly: true
        penalty_id:
          type: string
          maxLength: 50
        organization:
          type: string
          maxLength: 25
        name:
          type: string
          maxLength: 50
        description:
          type: string
          maxLength: 255
        module:
          type: string
        penalty_configuration:
          type: array
          items: {}
        created_by:
          type: integer
        modified_by:
          type: integer
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
      required:
      - description
      - id
      - module
      - name
      - organization
      - penalty_id
    PolicyRulegroup:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        modified_by_name:
          type: string
          readOnly: true
        creationtime:
          type: string
          readOnly: true
        last_update_time:
          type: string
          readOnly: true
        status_opt:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        device_tags:
          type: string
          readOnly: true
        associated_rules:
          type: string
          readOnly: true
        rule_map:
          type: string
          readOnly: true
        rulegroupid:
          type: string
        name:
          type: string
        organization:
          type: string
          maxLength: 25
        description:
          type: string
        activation:
          type: boolean
        iprange:
          type: string
        exclude_ips:
          type: string
        vendor:
          type: string
        os_type:
          type: string
        modified_by:
          type: integer
        created_by:
          type: integer
        activated_by:
          type: integer
        activation_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
        assigned_users:
          type: array
          items: {}
        assigned_group:
          type: array
          items: {}
        is_private:
          type: boolean
      required:
      - associated_rules
      - created_by_name
      - creationtime
      - device_tags
      - id
      - last_update_time
      - modified_by_name
      - organization
      - rule_map
      - rulegroupid
      - status
      - status_opt
    ProblemList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        problem_id:
          type: string
          maxLength: 25
        display_id:
          type: string
          maxLength: 50
        is_merge_problem:
          type: boolean
        is_archive:
          type: boolean
        unread_mail:
          type: boolean
        requester:
          $ref: '#/components/schemas/Embedded'
        config:
          $ref: '#/components/schemas/Embedded'
        reporter_info:
          $ref: '#/components/schemas/Embedded'
        basic_info:
          $ref: '#/components/schemas/Embedded'
        reference:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        source_info:
          $ref: '#/components/schemas/Embedded'
        template_info:
          $ref: '#/components/schemas/Embedded'
        impacted_asset:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        close_info:
          $ref: '#/components/schemas/Embedded'
        current_watcher:
          type: array
          items: {}
        current_assignment_info:
          $ref: '#/components/schemas/Embedded'
        custom_field:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        tag:
          type: array
          items: {}
        kb:
          type: array
          items: {}
        custom_field_data:
          type: object
          additionalProperties: {}
        creation_time:
          type: string
          format: date-time
        created_by_id:
          type: string
          maxLength: 225
        last_update_time:
          type: string
          format: date-time
        updated_by_id:
          type: string
          maxLength: 225
        due_date:
          type: string
          format: date
          nullable: true
        location:
          type: object
          additionalProperties: {}
      required:
      - problem_id
    PurchaseOrderList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        purchase_id:
          type: string
          readOnly: true
        vendor:
          type: string
          readOnly: true
        display_id:
          type: string
          maxLength: 255
        po_name:
          type: string
        delivery_date:
          type: string
          readOnly: true
        status:
          type: object
          additionalProperties: {}
        purchase_cost:
          type: string
          readOnly: true
        currency:
          type: object
          additionalProperties: {}
        state:
          type: string
      required:
      - delivery_date
      - purchase_cost
      - purchase_id
      - state
      - vendor
    Purge:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        config_id:
          type: string
          maxLength: 255
        purge_UUID:
          type: string
          maxLength: 255
        organization:
          type: string
          maxLength: 255
        created_by:
          type: integer
        modified_by:
          type: integer
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        is_enabled:
          type: boolean
          default: true
        purge_configuration:
          type: object
          additionalProperties: {}
      required:
      - config_id
      - id
    ReleaseList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        release_id:
          type: string
          maxLength: 25
        display_id:
          type: string
          maxLength: 50
        is_archive:
          type: boolean
        config:
          $ref: '#/components/schemas/Embedded'
        basic_info:
          $ref: '#/components/schemas/Embedded'
        close_info:
          $ref: '#/components/schemas/Embedded'
        current_assignment_info:
          $ref: '#/components/schemas/Embedded'
        tag:
          type: array
          items: {}
        kb:
          type: array
          items: {}
        custom_field_data:
          type: object
          additionalProperties: {}
        creation_time:
          type: string
          format: date-time
        created_by_id:
          type: string
          maxLength: 225
        last_update_time:
          type: string
          format: date-time
        updated_by_id:
          type: string
          maxLength: 225
        release_manager:
          type: object
          additionalProperties: {}
        due_date:
          type: string
          format: date-time
      required:
      - release_id
    RequestList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        request_id:
          type: string
          maxLength: 25
        display_id:
          type: string
          maxLength: 50
        is_merge_request:
          type: boolean
        is_archive:
          type: boolean
        unread_mail:
          type: boolean
        requester:
          $ref: '#/components/schemas/Embedded'
        config:
          $ref: '#/components/schemas/Embedded'
        reporter_info:
          $ref: '#/components/schemas/Embedded'
        basic_info:
          $ref: '#/components/schemas/Embedded'
        reference:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        source_info:
          $ref: '#/components/schemas/Embedded'
        template_info:
          $ref: '#/components/schemas/Embedded'
        impacted_asset:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        close_info:
          $ref: '#/components/schemas/Embedded'
        current_watcher:
          type: array
          items: {}
        current_assignment_info:
          $ref: '#/components/schemas/Embedded'
        custom_field:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        tag:
          type: array
          items: {}
        kb:
          type: array
          items: {}
        custom_field_data:
          type: object
          additionalProperties: {}
        creation_time:
          type: string
          format: date-time
        created_by_id:
          type: string
          maxLength: 225
        last_update_time:
          type: string
          format: date-time
        updated_by_id:
          type: string
          maxLength: 225
        service_form_data:
          type: object
          additionalProperties: {}
        location:
          type: object
          additionalProperties: {}
        employee_info:
          type: array
          items: {}
      required:
      - request_id
    RequesterList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        requester_id:
          type: string
          maxLength: 25
        full_name:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
        username:
          type: string
          nullable: true
          maxLength: 255
        phone_ext:
          type: string
          readOnly: true
        contact_number:
          type: string
          readOnly: true
        land_line:
          type: string
          readOnly: true
        type:
          type: integer
        is_login_enable:
          type: boolean
        avatar_color:
          type: string
          nullable: true
        work_location:
          $ref: '#/components/schemas/Embedded'
        is_login_active:
          type: boolean
        phone_number:
          type: string
          readOnly: true
        user_id:
          type: integer
        department:
          type: string
          nullable: true
          maxLength: 255
        requester_type:
          type: string
          readOnly: true
        user_details:
          $ref: '#/components/schemas/Embedded'
        creation_time:
          type: string
          format: date-time
          nullable: true
        support_location:
          type: string
          nullable: true
        emp_type:
          type: string
          maxLength: 100
        tags:
          type: array
          items: {}
        notify_email:
          type: string
          readOnly: true
        notify_phone:
          type: string
          readOnly: true
        joining_date:
          type: object
          additionalProperties: {}
          nullable: true
        invited_user:
          type: boolean
        designation:
          type: string
          nullable: true
          maxLength: 255
        organization_name:
          type: string
          readOnly: true
        customer_id:
          type: string
          maxLength: 255
        customer_entity_id:
          type: string
        subscriber_id:
          type: string
          nullable: true
          maxLength: 255
        customer_site_group:
          type: string
          nullable: true
          maxLength: 255
        profile_id:
          type: string
          nullable: true
        employee_id:
          type: string
          maxLength: 100
        base_location:
          $ref: '#/components/schemas/Embedded'
        contact:
          type: string
          readOnly: true
        unmasked_full_name:
          type: string
          readOnly: true
        unmasked_email:
          type: string
          readOnly: true
        is_ad:
          type: boolean
        subscription_info:
          type: object
          additionalProperties: {}
        is_profile_image:
          type: boolean
        source:
          type: string
        is_2fa_enabled:
          type: boolean
        requester_customer_id:
          type: string
          maxLength: 255
      required:
      - contact
      - contact_number
      - email
      - full_name
      - land_line
      - notify_email
      - notify_phone
      - organization_name
      - phone_ext
      - phone_number
      - requester_id
      - requester_type
      - unmasked_email
      - unmasked_full_name
    SMSList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        event_time:
          type: string
          readOnly: true
        communication_id:
          type: string
        msg_type:
          type: integer
        type:
          type: string
        user_id:
          type: string
        received_config_id:
          type: string
        module_id:
          type: integer
        ref_id:
          type: string
        ref_display_id:
          type: string
        is_system_gen:
          type: boolean
        imap_config_id:
          type: string
        attachment_ids:
          type: array
          items: {}
          nullable: true
        created_by:
          type: string
        organization:
          type: string
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
        is_assignee_read:
          type: boolean
        message_read_map:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        customer_id:
          type: string
        customer_entity_id:
          type: string
        is_description:
          type: boolean
        email_data:
          $ref: '#/components/schemas/Embedded'
        sms_data:
          $ref: '#/components/schemas/Embedded'
        api_data:
          $ref: '#/components/schemas/Embedded'
        beep_data:
          $ref: '#/components/schemas/Embedded'
        syslog_data:
          $ref: '#/components/schemas/Embedded'
      required:
      - event_time
      - id
    ServiceFeasibilityRequest:
      type: object
      description: Service Feasibility Request Serializer
      properties:
        id:
          type: string
          readOnly: true
        location:
          type: string
          readOnly: true
        fat_info:
          type: string
          readOnly: true
        reservation_start_period:
          type: string
          readOnly: true
        reservation_expiry_period:
          type: string
          readOnly: true
        creation_time:
          type: string
          readOnly: true
        feasibility_status:
          type: string
          readOnly: true
        is_archived:
          type: boolean
        state:
          type: string
        subscriber_id:
          type: string
        work_order_id:
          type: string
        registration_request_id:
          type: string
        request_display_id:
          type: string
        externalId:
          type: string
        request_id:
          type: string
        contact_number:
          type: string
        profile_type:
          type: string
        last_update_time:
          type: string
          format: date-time
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        organization:
          type: string
        selected_resource_info:
          type: object
          additionalProperties: {}
        resource_info:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        feasibility_info:
          $ref: '#/components/schemas/Embedded'
      required:
      - creation_time
      - fat_info
      - feasibility_status
      - id
      - location
      - reservation_expiry_period
      - reservation_start_period
    ServiceTemplate:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        service_template_visibility:
          type: string
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        modified_by_name:
          type: string
          readOnly: true
        is_private:
          type: string
          readOnly: true
        associated_configuration_templates:
          type: string
          readOnly: true
        service_template_description:
          type: string
          readOnly: true
        is_service_job_enabled:
          type: string
          readOnly: true
        service_template_id:
          type: string
          maxLength: 25
        service_template_name:
          type: string
        description:
          type: string
        organization:
          type: string
          maxLength: 25
        created_by:
          type: string
        modified_by:
          type: string
        is_deleted:
          type: boolean
        is_enabled:
          type: boolean
          default: true
        associate_users:
          type: array
          items: {}
        associate_groups:
          type: array
          items: {}
        visibility:
          type: string
        creation_time:
          type: string
          format: date-time
        last_updated_time:
          type: string
          format: date-time
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
      required:
      - associated_configuration_templates
      - created_by_name
      - id
      - is_private
      - is_service_job_enabled
      - modified_by_name
      - organization
      - service_template_description
      - service_template_id
      - service_template_visibility
    SyslogList:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        event_time:
          type: string
          readOnly: true
        communication_id:
          type: string
        msg_type:
          type: integer
        type:
          type: string
        user_id:
          type: string
        received_config_id:
          type: string
        module_id:
          type: integer
        ref_id:
          type: string
        ref_display_id:
          type: string
        is_system_gen:
          type: boolean
        imap_config_id:
          type: string
        attachment_ids:
          type: array
          items: {}
          nullable: true
        created_by:
          type: string
        organization:
          type: string
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
        is_assignee_read:
          type: boolean
        message_read_map:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        customer_id:
          type: string
        customer_entity_id:
          type: string
        is_description:
          type: boolean
        email_data:
          $ref: '#/components/schemas/Embedded'
        sms_data:
          $ref: '#/components/schemas/Embedded'
        api_data:
          $ref: '#/components/schemas/Embedded'
        beep_data:
          $ref: '#/components/schemas/Embedded'
        syslog_data:
          $ref: '#/components/schemas/Embedded'
      required:
      - event_time
      - id
    Tag:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
        type:
          type: integer
        tag_id:
          type: string
          maxLength: 25
        organization:
          type: string
          maxLength: 25
        name:
          type: string
          maxLength: 255
        created_by:
          type: integer
        modified_by:
          type: integer
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
        is_demo_data:
          type: boolean
      required:
      - id
      - organization
      - tag_id
      - type
    TaskDetails:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        formatted_due_date:
          type: string
          readOnly: true
        formatted_actual_start_date:
          type: string
          readOnly: true
        assignee_info:
          type: string
          readOnly: true
        formatted_estimated_duration:
          type: string
          readOnly: true
        formatted_actual_end_date:
          type: string
          readOnly: true
        task_id:
          type: string
          maxLength: 25
        type:
          type: object
          additionalProperties: {}
        display_id:
          type: string
          maxLength: 25
        ref_id:
          type: string
          maxLength: 25
        ref_display_id:
          type: string
          maxLength: 25
        ref_module_id:
          type: integer
        name:
          type: string
        description:
          type: string
        status:
          type: object
          additionalProperties: {}
        priority:
          type: object
          additionalProperties: {}
        assignee:
          type: string
        assignee_profile:
          type: object
          additionalProperties: {}
        due_date:
          type: string
          format: date-time
        repeat_config:
          type: object
          additionalProperties: {}
        meta_data:
          type: object
          additionalProperties: {}
        is_deleted:
          type: boolean
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        closure_time:
          type: string
          format: date-time
        created_by_id:
          type: integer
        updated_by_id:
          type: integer
        estimated_cost:
          type: number
          format: float
        estimated_duration:
          type: string
          format: date-time
        approval_state:
          type: integer
        assigned_to_group:
          type: boolean
        additional_info:
          type: object
          additionalProperties: {}
        check_list:
          type: object
          additionalProperties: {}
        closure_note:
          type: string
        actual_start_date:
          type: string
          format: date-time
        actual_end_date:
          type: string
          format: date-time
        config:
          $ref: '#/components/schemas/Embedded'
        current_assignment_info:
          $ref: '#/components/schemas/Embedded'
        template_info:
          $ref: '#/components/schemas/Embedded'
      required:
      - assignee_info
      - formatted_actual_end_date
      - formatted_actual_start_date
      - formatted_due_date
      - formatted_estimated_duration
      - id
    Team:
      type: object
      description: Team Serializers
      properties:
        id:
          type: string
        module_ui_name:
          type: string
          readOnly: true
        team_id:
          type: string
          maxLength: 225
        module_id:
          type: integer
        module_name:
          type: string
        group_type:
          type: string
        group_id:
          type: integer
        name:
          type: string
          maxLength: 225
        description:
          type: string
        owner:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        staff_selection_type:
          type: string
        is_approval_sequence:
          type: boolean
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        staffs:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        sequence_staffs:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        level_staff:
          type: array
          items:
            $ref: '#/components/schemas/Embedded'
        is_preconfigure:
          type: boolean
        is_deleted:
          type: boolean
        organization:
          type: string
          maxLength: 225
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        response_required:
          type: boolean
        approval_percentage:
          type: integer
        department:
          type: string
        business_hr_profile:
          type: object
          additionalProperties: {}
        asset_tags:
          type: array
          items: {}
        is_add_notify_required:
          type: boolean
        is_demo_data:
          type: boolean
        events_thres_id:
          type: array
          items: {}
        location:
          type: object
          additionalProperties: {}
        group_email:
          type: string
        delegate_members:
          type: array
          items:
            type: object
            additionalProperties: {}
        team_delegate:
          type: boolean
        sequence_delegate:
          type: boolean
        config:
          $ref: '#/components/schemas/Embedded'
      required:
      - id
      - module_ui_name
      - organization
      - team_id
    TelecomSettings:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        settings_id:
          type: string
        module:
          type: string
        min_bw_individual:
          type: number
          format: float
        min_bw_corporate:
          type: number
          format: float
        max_bw_corporate:
          type: number
          format: float
        reservation_expiry_period:
          type: number
          format: float
        organization:
          type: string
        overprovisioning_factor:
          type: number
          format: float
        auto_reservation:
          type: boolean
        is_deleted:
          type: boolean
      required:
      - id
    TrapConfiguration:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        rca_raise_msg:
          type: string
          readOnly: true
        rca_raise_varbind:
          type: string
          readOnly: true
        rca_varmap_status:
          type: string
          readOnly: true
        rca_raise_varbind_msgmap:
          type: string
          readOnly: true
        rca_varbindconv:
          type: string
          readOnly: true
        rca_conversion:
          type: string
          readOnly: true
        rca_clear_msg:
          type: string
          readOnly: true
        rca_clear_varmap_status:
          type: string
          readOnly: true
        rca_clear_varbindconv:
          type: string
          readOnly: true
        rca_clear_conversion:
          type: string
          readOnly: true
        rca_clear_varbind:
          type: string
          readOnly: true
        rca_clear_varbind_msgmap:
          type: string
          readOnly: true
        trap_id:
          type: string
          maxLength: 225
        name:
          type: string
        description:
          type: string
        type:
          type: string
        trap_oid:
          type: string
        trap_clear_oid:
          type: string
        clear_event_on_clear_oid:
          type: boolean
        resource:
          type: string
        resource_var_bind:
          type: string
        action:
          type: string
        stat_map:
          type: object
          additionalProperties: {}
        status:
          type: integer
        severity:
          type: integer
        set_criteria:
          type: array
          items: {}
        reset_criteria:
          type: array
          items: {}
        alarm_msg:
          type: string
        clear_msg:
          type: string
        rca:
          type: object
          additionalProperties: {}
        config_download:
          type: object
          additionalProperties: {}
        organization:
          type: string
          maxLength: 225
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        isdeleted:
          type: boolean
        thresid_map:
          type: string
      required:
      - id
      - organization
      - rca_clear_conversion
      - rca_clear_msg
      - rca_clear_varbind
      - rca_clear_varbind_msgmap
      - rca_clear_varbindconv
      - rca_clear_varmap_status
      - rca_conversion
      - rca_raise_msg
      - rca_raise_varbind
      - rca_raise_varbind_msgmap
      - rca_varbindconv
      - rca_varmap_status
      - trap_id
    UploadJobs:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        agent_id:
          type: string
          readOnly: true
        agent_ip:
          type: string
          readOnly: true
        agent_detail:
          type: string
          readOnly: true
        agent_hostname:
          type: string
          readOnly: true
        job_status:
          type: string
          readOnly: true
        schedule_details:
          type: string
          readOnly: true
        next_action_time_obj:
          type: string
          readOnly: true
        last_action_time_obj:
          type: string
          readOnly: true
        frequency:
          type: string
          readOnly: true
        agent_status:
          type: string
          readOnly: true
        perf_attrs:
          type: string
          readOnly: true
        is_private:
          type: string
          readOnly: true
        user_list:
          type: string
          readOnly: true
        teams_list:
          type: string
          readOnly: true
        next_schedule_hide:
          type: string
          readOnly: true
        close_job_hide_key:
          type: string
          readOnly: true
        job_source:
          type: string
          default: upload_job
        change_request_id:
          type: string
        change_request_displayid:
          type: string
        approval_required:
          type: string
          readOnly: true
        is_approved_by:
          type: string
          readOnly: true
        kafka_status_data:
          type: string
          readOnly: true
        job_id:
          type: string
          maxLength: 25
        organization:
          type: string
          maxLength: 25
        created_by:
          type: string
        modified_by:
          type: string
        is_deleted:
          type: boolean
        job_name:
          type: string
        job_type:
          type: string
        change_request_info:
          type: object
          additionalProperties: {}
        notifier_id:
          type: array
          items: {}
        associate_users:
          type: array
          items: {}
        associate_groups:
          type: array
          items: {}
        visibility:
          type: string
        execution_window:
          type: string
          default: 24 Hours
        upload_schedule:
          type: object
          additionalProperties: {}
        description:
          type: string
        check_download:
          type: boolean
        status:
          type: integer
        job_iteration_id:
          type: string
        last_action_time:
          type: string
          format: date-time
        next_action_time:
          type: string
          format: date-time
        tzone:
          type: string
        is_enabled:
          type: boolean
          default: true
        progress:
          type: boolean
        job_starttime:
          type: string
          format: date-time
        job_endtime:
          type: string
          format: date-time
        is_approval_require:
          type: boolean
        approval_status:
          type: integer
        approved_by:
          type: string
        creation_time:
          type: string
          format: date-time
        last_updated_time:
          type: string
          format: date-time
        back_end_job:
          type: boolean
        agent_info:
          type: object
          additionalProperties: {}
        notification_sent:
          type: boolean
        additional_info:
          type: object
          additionalProperties: {}
        approval_request_time:
          type: string
          format: date-time
          nullable: true
        approval_expiry_time:
          type: string
          format: date-time
          nullable: true
        global_customer_filter:
          type: object
          additionalProperties: {}
          nullable: true
        user_obj:
          type: object
          additionalProperties: {}
          nullable: true
        is_from_ztp:
          type: boolean
      required:
      - agent_detail
      - agent_hostname
      - agent_id
      - agent_ip
      - agent_status
      - approval_required
      - close_job_hide_key
      - frequency
      - id
      - is_approved_by
      - is_private
      - job_id
      - job_status
      - kafka_status_data
      - last_action_time_obj
      - next_action_time_obj
      - next_schedule_hide
      - organization
      - perf_attrs
      - schedule_details
      - teams_list
      - user_list
    UserList:
      type: object
      description: Serializes users querysets.
      properties:
        profile_id:
          type: string
          maxLength: 25
        user:
          type: integer
        profile:
          type: string
          readOnly: true
        creation_time:
          type: string
          format: date-time
        profile_image:
          type: string
          readOnly: true
        avatar:
          type: string
          readOnly: true
        email:
          type: string
          nullable: true
        name:
          type: string
          readOnly: true
        is_active:
          type: boolean
        department:
          type: string
          readOnly: true
        last_loggged_in:
          type: string
          readOnly: true
        customer_id:
          type: array
          items: {}
        customer_entity_id:
          type: array
          items: {}
        actual_username:
          type: string
          readOnly: true
        is_multiple_customer_user:
          type: boolean
        is_profile_image:
          type: boolean
        is_ad:
          type: boolean
      required:
      - actual_username
      - avatar
      - department
      - last_loggged_in
      - name
      - profile
      - profile_id
      - profile_image
    Vendor:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
        name:
          type: string
        vendor_id:
          type: string
          maxLength: 25
        organization:
          type: string
          maxLength: 25
        vendor_name:
          type: string
        status:
          type: integer
        type:
          type: integer
        web_url:
          type: string
        location:
          type: object
          additionalProperties: {}
        contact_person:
          type: string
        email:
          type: string
        phone_number:
          type: object
          additionalProperties: {}
        description:
          type: string
        created_by:
          type: integer
        modified_by:
          type: integer
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
        is_deleted:
          type: boolean
      required:
      - id
      - name
      - organization
      - vendor_id
    WorkflowJobs:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        schedule_details:
          type: string
          readOnly: true
        next_action_time_obj:
          type: string
          readOnly: true
        last_action_time_obj:
          type: string
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        modified_by_name:
          type: string
          readOnly: true
        business_hr_profile_name:
          type: string
          readOnly: true
        execute_now_triggered:
          type: string
          readOnly: true
        job_id:
          type: string
          maxLength: 25
        organization:
          type: string
          maxLength: 25
        name:
          type: string
        description:
          type: string
        jobname:
          type: string
        progress:
          type: boolean
        last_action:
          type: string
          format: date-time
        next_action:
          type: string
          format: date-time
        startdate:
          type: object
          additionalProperties: {}
        enddate:
          type: object
          additionalProperties: {}
        starttime:
          type: string
          format: date
        endtime:
          type: string
          format: date
        is_enabled:
          type: boolean
        is_deleted:
          type: boolean
        creation_time:
          type: string
          format: date-time
        modified_time:
          type: string
          format: date-time
        created_by:
          type: string
        modified_by:
          type: string
        business_hr_profile:
          type: object
          additionalProperties: {}
        schedule_data:
          type: object
          additionalProperties: {}
        tzone:
          type: string
      required:
      - business_hr_profile_name
      - created_by_name
      - execute_now_triggered
      - id
      - job_id
      - last_action_time_obj
      - modified_by_name
      - name
      - next_action_time_obj
      - organization
      - schedule_details
    ZTPConfiguration:
      type: object
      description: |-
        Serializer for Documents.

        Recognized primitve fields:

            * ``StringField``
            * ``URLField``
            * ``EmailField``
            * ``IntField``
            * ``LongField``
            * ``FloatField``
            * ``DecimalField``
            * ``BooleanField``
            * ``DateTimeField``
            * ``ComplexDateTimeField``
            * ``ObjectIdField``
            * ``SequenceField`` (assumes it has integer counter)
            * ``UUIDField``
            * ``GeoPointField``
            * ``GeoJsonBaseField`` (all those fields)
            * ``DateField``

        Compound fields: ``ListField`` and ``DictField`` are mapped to corresponding DRF fields, with respect to nested field specification.

        The ``ReferenceField`` is handled like ``ForeignKey`` in DRF: there nested serializer autogenerated if serializer depth greater then 0, otherwise it's handled by it's own (results as ``str(id)``).

        For ``EmbeddedDocumentField`` also nested serializer autogenerated for non-zero depth, otherwise it is skipped. TODO: THIS IS PROBABLY WRONG AND SHOULD BE FIXED.

        Generic fields ``GenericReferenceField`` and ``GenericEmbeddedDocumentField`` are handled by their own with corresponding serializer fields.

        Not well supported or untested:

            ``FileField``
            ``ImageField``
            ``BinaryField``

        All other fields are mapped to ``DocumentField`` and probably will work wrong.
      properties:
        id:
          type: string
          readOnly: true
        profile_id:
          type: string
          maxLength: 25
        organization:
          type: string
          maxLength: 25
        profile_name:
          type: string
        description:
          type: string
        is_enabled:
          type: boolean
          default: true
        is_deleted:
          type: boolean
        pattern:
          type: string
        created_by:
          type: string
        modified_by:
          type: string
        creation_time:
          type: string
          format: date-time
        last_updated_time:
          type: string
          format: date-time
        default_credentials:
          type: array
          items: {}
        ip_pattern:
          type: string
        ref_key_pattern:
          type: string
        alarm_msg:
          type: string
        severity:
          type: integer
        dhcp_src_ip_info:
          type: array
          items: {}
        api_config:
          type: object
          additionalProperties: {}
        notifier_id:
          type: array
          items: {}
        ip_range_credentials:
          type: array
          items: {}
        agent_info:
          type: object
          additionalProperties: {}
      required:
      - id
      - organization
      - profile_id
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
