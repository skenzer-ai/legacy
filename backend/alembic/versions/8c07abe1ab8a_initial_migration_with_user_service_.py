"""Initial migration with user, service_registry, and workflow models

Revision ID: 8c07abe1ab8a
Revises: 
Create Date: 2025-07-28 07:19:54.862491

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import fastapi_users_db_sqlalchemy


# revision identifiers, used by Alembic.
revision: str = '8c07abe1ab8a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'DEVELOPER', 'VIEWER', name='userrole'), nullable=False),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('preferences', sa.Text(), nullable=True),
    sa.Column('last_active', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('service_registry',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('service_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('tier', sa.Enum('TIER_1', 'TIER_2', name='servicetier'), nullable=True),
    sa.Column('intent_keywords', sa.JSON(), nullable=True),
    sa.Column('semantic_category', sa.String(length=255), nullable=True),
    sa.Column('business_actions', sa.JSON(), nullable=True),
    sa.Column('user_intent_patterns', sa.JSON(), nullable=True),
    sa.Column('negative_examples', sa.JSON(), nullable=True),
    sa.Column('documentation_quality_score', sa.Float(), nullable=True),
    sa.Column('automation_readiness_score', sa.Float(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('enhancement_status', sa.Enum('PENDING', 'ANALYZING', 'TESTING', 'ENHANCING', 'APPROVAL_NEEDED', 'COMPLETED', 'FAILED', name='enhancementstatus'), nullable=True),
    sa.Column('last_enhanced', sa.DateTime(timezone=True), nullable=True),
    sa.Column('enhanced_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['enhanced_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_service_registry_service_name'), 'service_registry', ['service_name'], unique=True)
    op.create_table('workflows',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('workflow_type', sa.Enum('SERVICE_ENHANCEMENT', 'API_TESTING', 'USER_TASK', 'SYSTEM_MAINTENANCE', name='workflowtype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'PAUSED', 'COMPLETED', 'FAILED', 'CANCELLED', name='workflowstatus'), nullable=True),
    sa.Column('configuration', sa.JSON(), nullable=True),
    sa.Column('context', sa.JSON(), nullable=True),
    sa.Column('total_steps', sa.Integer(), nullable=True),
    sa.Column('completed_steps', sa.Integer(), nullable=True),
    sa.Column('current_step_index', sa.Integer(), nullable=True),
    sa.Column('progress_percentage', sa.Float(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('estimated_duration', sa.Integer(), nullable=True),
    sa.Column('actual_duration', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('assigned_to', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('api_endpoints',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('service_id', sa.UUID(), nullable=False),
    sa.Column('endpoint_path', sa.String(length=500), nullable=False),
    sa.Column('http_method', sa.String(length=10), nullable=False),
    sa.Column('operation_id', sa.String(length=255), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('enhanced_description', sa.Text(), nullable=True),
    sa.Column('usage_context', sa.Text(), nullable=True),
    sa.Column('when_to_use', sa.Text(), nullable=True),
    sa.Column('when_not_to_use', sa.Text(), nullable=True),
    sa.Column('intent_specificity', sa.Float(), nullable=True),
    sa.Column('parameter_complexity', sa.String(length=20), nullable=True),
    sa.Column('success_patterns', sa.JSON(), nullable=True),
    sa.Column('failure_patterns', sa.JSON(), nullable=True),
    sa.Column('parameter_guidance', sa.JSON(), nullable=True),
    sa.Column('workflow_role', sa.String(length=100), nullable=True),
    sa.Column('typical_sequences', sa.JSON(), nullable=True),
    sa.Column('data_flow', sa.JSON(), nullable=True),
    sa.Column('error_recovery', sa.JSON(), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('average_response_time', sa.Float(), nullable=True),
    sa.Column('last_tested', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['service_registry.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enhancement_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('service_id', sa.UUID(), nullable=False),
    sa.Column('enhancement_type', sa.String(length=50), nullable=False),
    sa.Column('enhancement_data', sa.JSON(), nullable=True),
    sa.Column('before_quality_score', sa.Float(), nullable=True),
    sa.Column('after_quality_score', sa.Float(), nullable=True),
    sa.Column('user_feedback', sa.Text(), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['service_registry.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workflow_executions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('workflow_id', sa.UUID(), nullable=False),
    sa.Column('execution_number', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'PAUSED', 'COMPLETED', 'FAILED', 'CANCELLED', name='workflowstatus'), nullable=True),
    sa.Column('initial_context', sa.JSON(), nullable=True),
    sa.Column('final_context', sa.JSON(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('logs', sa.JSON(), nullable=True),
    sa.Column('executed_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['executed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workflow_steps',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('workflow_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('step_type', sa.String(length=100), nullable=False),
    sa.Column('step_order', sa.Integer(), nullable=False),
    sa.Column('configuration', sa.JSON(), nullable=True),
    sa.Column('input_schema', sa.JSON(), nullable=True),
    sa.Column('output_schema', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'SKIPPED', name='stepstatus'), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('condition', sa.Text(), nullable=True),
    sa.Column('skip_on_failure', sa.Boolean(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('depends_on', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workflow_steps')
    op.drop_table('workflow_executions')
    op.drop_table('enhancement_history')
    op.drop_table('api_endpoints')
    op.drop_table('workflows')
    op.drop_index(op.f('ix_service_registry_service_name'), table_name='service_registry')
    op.drop_table('service_registry')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
